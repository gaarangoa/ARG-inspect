webpackJsonp([1,5],{"/Fel":function(e,t){e.exports='<div *ngFor="let bh of randomARG.besthit.alignments">\n        <div *ngIf="bh.best_hit_database==\'ARDB\'" class="">\n            <div class="box box-solid box-info">\n              <div class="box-header with-border">\n                <i class="fa fa-gears"></i>\n                <h3 class="box-title"><strong> {{ bh.best_hit_database }} </strong> BLAST alignment <span class="badge">{{ bh.metadata.subtype }}</span></h3>\n              </div>\n\n              \x3c!-- /.box-header --\x3e\n              <div class="box-body">\n                <dl class="dl-horizontal">\n\n                  <dt>Best Hit ID</dt>\n                  <dd> {{ bh.best_hit }} <dd>\n\n                  <dt>Coverage:</dt>\n                  <dd> \n                    \n                    <span *ngIf="(100*bh.algn_len/randomARG.entry[\'length\']).toFixed(2)<=30" class="badge bg-red"> {{ (100*bh.algn_len/randomARG.entry[\'length\']).toFixed(0) }}% </span> \n                    <span *ngIf="(100*bh.algn_len/randomARG.entry[\'length\']).toFixed(2)>30 && (100*bh.algn_len/randomARG.entry[\'length\']).toFixed(2)<=50" class="badge bg-yellow"> {{ (100*bh.algn_len/randomARG.entry[\'length\']).toFixed(0) }}%</span>\n                    <span *ngIf="(100*bh.algn_len/randomARG.entry[\'length\']).toFixed(2)>50 && (100*bh.algn_len/randomARG.entry[\'length\']).toFixed(2)<=80" class="badge bg-green"> {{ (100*bh.algn_len/randomARG.entry[\'length\']).toFixed(0) }}% </span>\n                    <span *ngIf="(100*bh.algn_len/randomARG.entry[\'length\']).toFixed(2)>80" class="badge bg-blue"> {{ (100*bh.algn_len/randomARG.entry[\'length\']).toFixed(0) }}% </span>\n\n                  </dd>\n                  <dt>Bitscore:</dt>\n                    <dd>\n                      <span *ngIf="bh.bitscore<=50" class="badge bg-red"> {{ bh.bitscore }} </span> \n                      <span *ngIf="bh.bitscore>50 && bh.bitscore<=100" class="badge bg-yellow"> {{ bh.bitscore }} </span>\n                      <span *ngIf="bh.bitscore>100 && bh.bitscore<=500" class="badge bg-green"> {{ bh.bitscore }} </span>\n                      <span *ngIf="bh.bitscore>500" class="badge bg-blue"> {{ bh.bitscore }} </span>\n                      \n                    </dd>\n                  <dt>evalue:</dt>\n                  <dd> \n                    \n                    <span *ngIf="bh.evalue>=1e-5" class="badge bg-red"> {{ bh.evalue }} </span> \n                    <span *ngIf="bh.evalue<1e-5 && bh.evalue>=1e-10" class="badge bg-yellow"> {{ bh.evalue }} </span>\n                    <span *ngIf="bh.evalue<1e-10 && bh.evalue>=1e-50" class="badge bg-green"> {{ bh.evalue }} </span>\n                    <span *ngIf="bh.evalue<1e-50" class="badge bg-blue"> {{ bh.evalue }} </span>\n                  \n                  </dd>\n                  <dt>Identity:</dt>\n                  <dd>\n\n                    <span *ngIf="bh.identity<=30" class="badge bg-red"> {{ bh.identity }}% </span> \n                    <span *ngIf="bh.identity>30 && bh.identity<=50" class="badge bg-yellow"> {{ bh.identity }}% </span>\n                    <span *ngIf="bh.identity>50 && bh.identity<=80" class="badge bg-green"> {{ bh.identity }}% </span>\n                    <span *ngIf="bh.identity>80" class="badge bg-blue"> {{ bh.identity }}% </span>\n\n                  </dd>\n\n                  <hr>\n                  <dt> AMR profile: </dt>\n\n                  \n                  <dd>\n                    <p> {{bh.metadata.description}} </p>\n                    <div *ngFor="let type of bh.metadata.resistance_profile" >\n                      <strong> <span class="badge bg-green">{{ type.type }} </span> </strong>\n                      <p *ngIf="type.description"> {{ type.description }} </p>\n                    </div>\n                  <dd>\n                  \n\n                </dl>\n              </div>\n            </div>\n        </div>\n</div> \n\n\n\n\n\n\n\n'},1:function(e,t,n){e.exports=n("x35b")},"1a2k":function(e,t,n){t=e.exports=n("FZ+f")(),t.push([e.i,"",""]),e.exports=e.exports.toString()},"4QKn":function(e,t){e.exports="<p>\n  about works!\n</p>\n"},"5xMp":function(e,t){e.exports='<div class="navbar navbar-default navbar-fixed-top">\n  <div class="container-fluid">\n    <div class="navbar-header">\n      <a routerLink="" class="navbar-brand">ARGpedia</a>\n      <button class="navbar-toggle" type="button" data-toggle="collapse" data-target="#navbar-main">\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n      </button>\n    </div>\n    <div class="navbar-collapse collapse" id="navbar-main">\n      <ul class="nav navbar-nav">\n        <li>\n          <a routerLink="database">Database</a>\n        </li>\n        <li>\n          <a routerLink="classify">Classify</a>\n        </li>\n        <li>\n          <a routerLink="about">About</a>\n        </li>\n      </ul>\n      <ul class="nav navbar-nav navbar-right">\n        <li><a routerLink="home" >Home</a></li>\n      </ul>\n\n    </div>\n  </div>\n</div>\n\n<hr>\n<br>\n<br>\n<div class="container-fluid">\n  <div class="wrapper">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n'},"62Vb":function(e,t,n){t=e.exports=n("FZ+f")(),t.push([e.i,"",""]),e.exports=e.exports.toString()},"6R2C":function(e,t,n){"use strict";var a=n("3j3K"),o=n("5oXY"),s=n("DAod");n.d(t,"a",function(){return d});var i=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},r=[{path:"",component:s.a}],d=function(){function e(){}return e}();d=i([n.i(a.NgModule)({imports:[o.RouterModule.forChild(r)],exports:[o.RouterModule]})],d)},"9dG9":function(e,t,n){"use strict";var a=n("3j3K"),o=n("Jca5");n.d(t,"a",function(){return r});var s=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},i=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},r=function(){function e(e){this.dataService=e}return e.prototype.ngOnInit=function(){this.randomARG=this.dataService.ARG},e}();r=s([n.i(a.Component)({selector:"classify-metadata-ardb",template:n("i/FI"),styles:[n("62Vb")]}),i("design:paramtypes",["function"==typeof(d=void 0!==o.a&&o.a)&&d||Object])],r);var d},Cd9f:function(e,t,n){"use strict";var a=n("5oXY"),o=n("DAod"),s=n("Q4XH"),i=n("FXvl"),r=n("QdDP");n.d(t,"a",function(){return c});var d=[{path:"",component:s.a},{path:"classify",component:o.a},{path:"home",component:s.a},{path:"database",component:i.a},{path:"about",component:r.a}],c=a.RouterModule.forRoot(d)},DAod:function(e,t,n){"use strict";var a=n("3j3K"),o=n("5oXY"),s=n("Jca5");n.d(t,"a",function(){return d});var i=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=function(){function e(e,t){var n=this;this.dataService=e,this.router=t,this.loading=!1,this.drawGenomes=!1,this.dataService.getRandomKnownARG().subscribe(function(e){n.randomARG=n.dataService.ARG,n.render=!0,console.log(n.randomARG)})}return e.prototype.ngOnInit=function(){},e.prototype.nextGene=function(){var e=this;this.randomARG.entry.database="-------------",this.randomARG.entry.gene_id="-------------",this.randomARG.entry.subtype="----------",this.randomARG.entry.type="--------------",this.randomARG.entry.inspected="------",this.randomARG.entry.score="------",this.loading=!0,this.dataService.getRandomKnownARG().subscribe(function(t){e.randomARG=e.dataService.ARG,console.log(e.randomARG),e.loading=!1})},e.prototype.getARG=function(e){var t=this;this.randomARG.entry.database="-------------",this.randomARG.entry.gene_id="-----------",this.randomARG.entry.subtype="-----------",this.randomARG.entry.type="--------------",this.randomARG.entry.inspected="-----",this.randomARG.entry.score="----",this.loading=!0,this.dataService.getKnownARGInfo(e).subscribe(function(e){t.randomARG=t.dataService.ARG,console.log(t.randomARG),t.loading=!1})},e.prototype.tabsEvent=function(e){this.drawGenomes=!1,2==e.index&&(this.drawGenomes=!0)},e}();d=i([n.i(a.Component)({template:n("aheT"),styles:[n("1a2k")]}),r("design:paramtypes",["function"==typeof(c=void 0!==s.a&&s.a)&&c||Object,"function"==typeof(l=void 0!==o.Router&&o.Router)&&l||Object])],d);var c,l},"E/wA":function(e,t,n){t=e.exports=n("FZ+f")(),t.push([e.i,"",""]),e.exports=e.exports.toString()},FXvl:function(e,t,n){"use strict";var a=n("3j3K");n.d(t,"a",function(){return i});var o=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=function(){function e(){}return e.prototype.ngOnInit=function(){},e}();i=o([n.i(a.Component)({selector:"app-database",template:n("xaWD"),styles:[n("E/wA")]}),s("design:paramtypes",[])],i)},GfAU:function(e,t,n){t=e.exports=n("FZ+f")(),t.push([e.i,".ui-steps .ui-steps-item{width:33%}.ui-steps.steps-custom{margin-bottom:20px}.ui-steps.steps-custom .ui-steps-item .ui-menuitem-link{height:15px}.ui-steps.steps-custom .ui-steps-item .ui-steps-number{background-color:#0081c2;color:#fff;width:36px;margin-top:-20px;margin-bottom:12px;font-size:200%}.ui-steps.steps-custom .ui-steps-item .ui-steps-title{color:#fff;margin-top:-43px;font-weight:700}.badge,.ui-steps-item,.ui-steps-number,p-dialog{box-shadow:0 4px 8px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19) !IMPORTANT;border-color:hsla(0,0%,100%,0) !IMPORTANT}.box,.panel{border-color:rgba(0,0,0,.3) !IMPORTANT}md-input-container textarea{background-color:rgba(0,0,0,.05)!important}",""]),e.exports=e.exports.toString()},GnK1:function(e,t,n){"use strict";var a=n("3j3K"),o=n("Jca5");n.d(t,"a",function(){return r});var s=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},i=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},r=function(){function e(e){this.dataService=e}return e.prototype.ngOnInit=function(){this.randomARG=this.dataService.ARG},e}();r=s([n.i(a.Component)({selector:"classify-metadata-card",template:n("pzFA"),styles:[n("P7bR")]}),i("design:paramtypes",["function"==typeof(d=void 0!==o.a&&o.a)&&d||Object])],r);var d},Iksp:function(e,t,n){"use strict";var a=n("Qbdm"),o=n("3j3K"),s=n("NVOs"),i=n("Fzro"),r=n("fYnu"),d=n("KN8t"),c=n("Cd9f"),l=n("YWx4"),p=n("Q4XH"),g=n("FXvl"),b=n("QdDP"),f=n("sivP"),h=n("7rib"),u=n("Jca5"),m=n("P99X"),v=n("rxKx");n.n(v);n.d(t,"a",function(){return x});var y=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},x=function(){function e(){}return e}();x=y([n.i(o.NgModule)({declarations:[l.a,p.a,g.a,b.a,h.a],imports:[a.BrowserModule,s.FormsModule,i.a,f.a,c.a,d.a,d.b,r.a],providers:[u.a,m.a],bootstrap:[l.a]})],x)},Jca5:function(e,t,n){"use strict";var a=n("3j3K"),o=n("Fzro"),s=n("1APj"),i=(n.n(s),n("+pb+")),r=(n.n(i),n("EnA3"));n.n(r);n.d(t,"a",function(){return l});var d=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=function(){function e(e){this.http=e,this.ARG=[]}return e.prototype.getRandomKnownARG=function(){var e=this;return this.http.get("http://localhost:5001/get/arg/random/").map(function(t){try{e.ARG=t.json()}catch(t){e.ARG={status:!1}}})},e.prototype.getKnownARGInfo=function(e){var t=this;return this.http.get("http://localhost:5001/get/arg/"+e).map(function(e){t.ARG=e.json()})},e.prototype.getListAntibioticClass=function(){var e=this;return this.http.get("http://localhost:5001/get/antibiotic/class").map(function(t){e.ATYPE=t.json()})},e.prototype.insertCuration=function(e){return this.http.post("http://localhost:5001/post/curation",e).map(function(e){return e.json()})},e}();l=d([n.i(a.Injectable)(),c("design:paramtypes",["function"==typeof(p=void 0!==o.b&&o.b)&&p||Object])],l);var p},Krr5:function(e,t,n){"use strict";var a=n("3j3K"),o=n("Jca5"),s=n("P99X");n.d(t,"a",function(){return d});var i=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=function(){function e(e,t){this.dataService=e,this.ncbiService=t,this.pubmed=[]}return e.prototype.ngOnInit=function(){var e=this;this.randomARG=this.dataService.ARG,1==this.randomARG.metadata.status&&this.randomARG.metadata.references.forEach(function(t){t.citation.dbReferences&&t.citation.dbReferences.forEach(function(t){"PubMed"==t.type&&e.ncbiService.getPubMed(t.id).subscribe(function(e){for(var n=e.text,a=[],o=0,s=e.denotations.sort(function(e,t){return t.span.begin-e.span.begin}).reverse(),i=0,r=s;i<r.length;i++){var d=r[i];a.push({text:n.substring(o,d.span.begin),type:"paragraph"}),a.push({text:n.substring(d.span.begin,d.span.end),type:"keyword"}),o=d.span.end}a.push(n.substring(o,n.length)),t.abstract=a})})}),console.log(this.randomARG)},e}();d=i([n.i(a.Component)({selector:"classify-metadata-uniprot",template:n("Yioj"),styles:[n("iuFx")]}),r("design:paramtypes",["function"==typeof(c=void 0!==o.a&&o.a)&&c||Object,"function"==typeof(l=void 0!==s.a&&s.a)&&l||Object])],d);var c,l},MOVZ:function(e,t){function n(e){throw new Error("Cannot find module '"+e+"'.")}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id="MOVZ"},MyHe:function(e,t,n){t=e.exports=n("FZ+f")(),t.push([e.i,"",""]),e.exports=e.exports.toString()},P7bR:function(e,t,n){t=e.exports=n("FZ+f")(),t.push([e.i,"",""]),e.exports=e.exports.toString()},P99X:function(e,t,n){"use strict";var a=n("3j3K"),o=n("Fzro"),s=n("1APj"),i=(n.n(s),n("+pb+")),r=(n.n(i),n("EnA3"));n.n(r);n.d(t,"a",function(){return l});var d=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=function(){function e(e){this.http=e}return e.prototype.getPubMed=function(e){return this.http.get("https://www.ncbi.nlm.nih.gov/CBBresearch/Lu/Demo/RESTful/tmTool.cgi/BioConcept/"+e+"/JSON/").map(function(e){try{return e.json()}catch(t){return console.log(e),e.json()}})},e}();l=d([n.i(a.Injectable)(),c("design:paramtypes",["function"==typeof(p=void 0!==o.b&&o.b)&&p||Object])],l);var p},Q4XH:function(e,t,n){"use strict";var a=n("3j3K");n.d(t,"a",function(){return i});var o=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=function(){function e(){}return e.prototype.ngOnInit=function(){},e}();i=o([n.i(a.Component)({selector:"app-home",template:n("ljLh"),styles:[n("MyHe")]}),s("design:paramtypes",[])],i)},QNUp:function(e,t,n){"use strict";var a=n("3j3K"),o=n("Jca5");n.d(t,"a",function(){return r});var s=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},i=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},r=function(){function e(e){this.dataService=e}return e.prototype.ngOnInit=function(){this.randomARG=this.dataService.ARG},e}();r=s([n.i(a.Component)({selector:"besthit-metadata-card",template:n("X/jM"),styles:[n("Xsp2")]}),i("design:paramtypes",["function"==typeof(d=void 0!==o.a&&o.a)&&d||Object])],r);var d},QdDP:function(e,t,n){"use strict";var a=n("3j3K");n.d(t,"a",function(){return i});var o=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=function(){function e(){}return e.prototype.ngOnInit=function(){},e}();i=o([n.i(a.Component)({selector:"app-about",template:n("4QKn"),styles:[n("gkki")]}),s("design:paramtypes",[])],i)},"X/jM":function(e,t){e.exports='<div *ngFor="let bh of randomARG.besthit.alignments">\n\n        <div *ngIf="bh.best_hit_database==\'CARD\'" class="">\n            <div class="box box-solid box-primary">\n              <div class="box-header with-border">\n                <i class="fa fa-gears"></i>\n\n                <h3 class="box-title"><strong> {{ bh.best_hit_database }} </strong> BLAST alignment <span class="badge">{{ bh.metadata.subtype }}</span></h3>\n              </div>\n              \x3c!-- /.box-header --\x3e\n              <div class="box-body">\n                <dl class="dl-horizontal">\n\n                  <dt>Best Hit ID</dt>\n                  <dd> {{ bh.best_hit }} <dd>\n\n                  <dt>Coverage:</dt>\n                  <dd> \n                    \n                    <span *ngIf="(100*bh.algn_len/randomARG.entry[\'length\']).toFixed(2)<=30" class="badge bg-red"> {{ (100*bh.algn_len/randomARG.entry[\'length\']).toFixed(0) }}% </span> \n                    <span *ngIf="(100*bh.algn_len/randomARG.entry[\'length\']).toFixed(2)>30 && (100*bh.algn_len/randomARG.entry[\'length\']).toFixed(2)<=50" class="badge bg-yellow"> {{ (100*bh.algn_len/randomARG.entry[\'length\']).toFixed(0) }}%</span>\n                    <span *ngIf="(100*bh.algn_len/randomARG.entry[\'length\']).toFixed(2)>50 && (100*bh.algn_len/randomARG.entry[\'length\']).toFixed(2)<=80" class="badge bg-green"> {{ (100*bh.algn_len/randomARG.entry[\'length\']).toFixed(0) }}% </span>\n                    <span *ngIf="(100*bh.algn_len/randomARG.entry[\'length\']).toFixed(2)>80" class="badge bg-blue"> {{ (100*bh.algn_len/randomARG.entry[\'length\']).toFixed(0) }}% </span>\n\n                  </dd>\n                  <dt>Bitscore:</dt>\n                    <dd>\n                      <span *ngIf="bh.bitscore<=50" class="badge bg-red"> {{ bh.bitscore }} </span> \n                      <span *ngIf="bh.bitscore>50 && bh.bitscore<=100" class="badge bg-yellow"> {{ bh.bitscore }} </span>\n                      <span *ngIf="bh.bitscore>100 && bh.bitscore<=500" class="badge bg-green"> {{ bh.bitscore }} </span>\n                      <span *ngIf="bh.bitscore>500" class="badge bg-blue"> {{ bh.bitscore }} </span>\n                      \n                    </dd>\n                  <dt>evalue:</dt>\n                  <dd> \n                    \n                    <span *ngIf="bh.evalue>=1e-5" class="badge bg-red"> {{ bh.evalue }} </span> \n                    <span *ngIf="bh.evalue<1e-5 && bh.evalue>=1e-10" class="badge bg-yellow"> {{ bh.evalue }} </span>\n                    <span *ngIf="bh.evalue<1e-10 && bh.evalue>=1e-50" class="badge bg-green"> {{ bh.evalue }} </span>\n                    <span *ngIf="bh.evalue<1e-50" class="badge bg-blue"> {{ bh.evalue }} </span>\n                  \n                  </dd>\n                  <dt>Identity:</dt>\n                  <dd>\n\n                    <span *ngIf="bh.identity<=30" class="badge bg-red"> {{ bh.identity }}% </span> \n                    <span *ngIf="bh.identity>30 && bh.identity<=50" class="badge bg-yellow"> {{ bh.identity }}% </span>\n                    <span *ngIf="bh.identity>50 && bh.identity<=80" class="badge bg-green"> {{ bh.identity }}% </span>\n                    <span *ngIf="bh.identity>80" class="badge bg-blue"> {{ bh.identity }}% </span>\n\n                  </dd>\n\n                  <hr>\n                  <dt> AMR profile: </dt>\n\n                  \n                  <dd>\n                    <p> {{bh.metadata.description}} </p>\n                    <div *ngFor="let type of bh.metadata.type" >\n                      <strong> {{ type.name }} </strong> ({{ type.namespace }}) \n                      <p> {{ type.def }} </p>\n                      \n                      <div *ngIf="type.is_a">\n                        <div *ngFor="let rel of type.is_a">\n                          <strong> {{ rel[\'id\'] }} </strong> {{ rel.term }} \n                        </div>\n                      </div>\n\n                      <div *ngIf="type.relationship">\n                        <div *ngFor="let rel of type.relationship">\n                          <strong> {{ rel.accession }} </strong> <span class=" badge bg-red"> {{ rel.term }} </span> ( {{ rel.id }} )\n                        </div>\n                      </div>\n\n                    </div>\n                  </dd>\n\n                  \n\n                </dl>\n              </div>\n              \x3c!-- /.box-body --\x3e\n            </div>\n            \x3c!-- /.box --\x3e\n        </div>\n</div> \n\n\n\n\n\n\n\n'},Xsp2:function(e,t,n){t=e.exports=n("FZ+f")(),t.push([e.i,"",""]),e.exports=e.exports.toString()},YWx4:function(e,t,n){"use strict";var a=n("3j3K");n.d(t,"a",function(){return s});var o=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},s=function(){function e(){}return e}();s=o([n.i(a.Component)({selector:"app-root",template:n("5xMp"),styles:[n("okgc")]})],s)},Yioj:function(e,t){e.exports='<div *ngIf="randomARG.metadata.status==true" class="">\n  <div class="panel panel-primary">\n    <div class="panel-heading">\n      <h3 class="panel-title"> <i class="fa fa-bug"></i> <strong> Lineage (<a class="panel-title" href="https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?id={{ randomARG.metadata.organism.taxonomy }}">NCBI Taxonomy </a>) </strong></h3>\n    </div>\n    \x3c!-- /.box-header --\x3e\n    <div class="panel-body">\n      <div class="dl-vertical">\n        <span *ngFor="let item of randomARG.metadata.organism.lineage" >\n          {{ item }} <strong>&rsaquo;</strong>\t\n        </span>\n      </div>\n      <p *ngIf="randomARG.metadata.organism.names"> <strong>Organism: </strong>{{ randomARG.metadata.organism.names[0].value }}</p>\n    </div>\n    \x3c!-- /.box-body --\x3e\n  </div>\n  \x3c!-- /.box --\x3e\n</div>\n\n\n\n<div *ngIf="randomARG.metadata.status==true" class="">\n  <div class="box box-solid box-primary">\n    <div class="box-header with-border">\n      <i class="fa fa-tag"></i>\n\n      <h3 class="box-title"><strong>Keywords</strong></h3>\n    </div>\n    \x3c!-- /.box-header --\x3e\n    <div class="box-body">\n      <p *ngIf="randomARG.metadata.gene" > <strong *ngIf="randomARG.metadata.gene[0].name">Gene Name: </strong> <span class="badge bg-red" *ngIf="randomARG.metadata.gene[0].name" > {{ randomARG.metadata.gene[0].name.value }} </span></p>\n      <p *ngIf="randomARG.metadata.protein.recommendedName" class="" data-original-title=""> <strong>Protein: </strong> <span class="badge bg-green"> {{ randomARG.metadata.protein.recommendedName.fullName.value }} </span> </p>\n      <div *ngIf="randomARG.metadata.proteinExistence"  data-original-title=""> <strong>Protein Existence: </strong> <span class="badge bg-orange">  {{ randomARG.metadata.proteinExistence }} </span> </div>\n      <hr>\n\n      <span *ngFor="let item of randomARG.metadata.keywords" class="badge bg-blue" data-original-title=""> {{ item.value }} </span>\n    \n    </div>\n    \x3c!-- /.box-body --\x3e\n  </div>\n  \x3c!-- /.box --\x3e\n</div>\n\n\n<div *ngIf="randomARG.metadata.comments" class="">\n  <div class="box box-solid box-success">\n    <div class="box-header with-border">\n      <i class="fa fa-object-group"></i>\n\n      <h3 class="box-title"><strong>Description</strong></h3>\n    </div>\n    \x3c!-- /.box-header --\x3e\n    <div class="box-body">\n      <dl class="dl-horizontal">\n        <div *ngFor="let item of randomARG.metadata.comments">\n          <dt *ngIf="item.text" > {{ item.type }}:</dt>\n          <dd *ngIf="item.text" > {{ item.text[0].value }}</dd>\n          <br>\n        </div>\n      </dl>\n\n    </div>\n    \x3c!-- /.box-body --\x3e\n  </div>\n  \x3c!-- /.box --\x3e\n</div>\n\n\n<div *ngIf="randomARG.metadata.dbReferences" class="">\n  <div class="box box-solid box-primary">\n    <div class="box-header with-border">\n      <i class="fa fa-object-group"></i>\n\n      <h3 class="box-title"><strong>Gene Ontology</strong></h3>\n    </div>\n    \x3c!-- /.box-header --\x3e\n    <div class="box-body">\n      <dl class="dl-horizontal">\n        <div *ngFor="let item of randomARG.metadata.dbReferences">\n          <dt *ngIf="item.type==\'GO\'" > {{ item.id }}:</dt>\n          <dd *ngIf="item.type==\'GO\'" > {{ item.properties.term }} <span class="badge bg-lightblue">{{ item.properties.source }} </span></dd>\n          <br *ngIf="item.type==\'GO\'">\n        </div>\n      </dl>\n\n    </div>\n    \x3c!-- /.box-body --\x3e\n  </div>\n  \x3c!-- /.box --\x3e\n</div>\n\n\n<div *ngIf="randomARG.metadata.references" class="">\n  <div class="box box-solid box-primary">\n    <div class="box-header with-border">\n      <i class="fa fa-object-group"></i>\n\n      <h3 class="box-title"><strong>References</strong></h3>\n    </div>\n    \x3c!-- /.box-header --\x3e\n    <div class="box-body">\n      <dl class="dl-horizontal">\n        <div *ngFor="let item of randomARG.metadata.references">\n          <strong > {{ item.citation.authors[0] }} {{ item.citation.authors[1] }} et al., </strong>\n           {{ item.citation.title }}  {{item.citation.publication.submissionDatabase}} ({{ item.citation.publicationDate }})\n\n           <div *ngFor="let ref of item.citation.dbReferences">\n           <strong>{{ ref.type }}</strong>: {{ ref.id }}\n            <div *ngIf="ref.abstract" > \n              \n              <span *ngFor="let kw of ref.abstract">\n                <span *ngIf="kw.type==\'paragraph\'">{{ kw.text }}</span> <span class="badge bg-blue" *ngIf="kw.type==\'keyword\'">{{ kw.text }}</span>   \n              </span>\n            \n            </div>\n\n           </div>\n\n        </div>\n      </dl>\n\n    </div>\n    \x3c!-- /.box-body --\x3e\n  </div>\n  \x3c!-- /.box --\x3e\n</div>\n\n\n<div *ngIf="randomARG.metadata.errorMessage" class="">\n\n  <div class="alert alert-danger alert-dismissible">\n    <h4><i class="icon fa fa-ban"></i> {{ randomARG.entry.database }} Alert!</h4>\n    <strong>There is a problem with this request!</strong>\n    <p>\n      {{ randomARG.metadata.errorMessage[0] }}\n    </p>\n  </div>\n</div>\n\n\n'},aheT:function(e,t){e.exports='<div class="container-fluid">\n\n    <div *ngIf="!render" class="col-md-4 col-md-offset-4">\n        <div class="col-sm-4 col-sm-offset-4">\n            <object>\n            <embed src="/assets/images/loading_1.svg" />\n          </object>\n        </div>\n    </div>\n\n    <div *ngIf="render">\n        \x3c!--Left panel--\x3e\n        <div class="col-md-3">\n            <div *ngIf="randomARG.status==true" class="">\n                \x3c!-- <div class="col-md-12"> --\x3e\n                <div class="box box-solid box-primary">\n                    <div class="box-header with-border">\n\n                        <i class="fa fa-gears"></i>\n                        \x3c!-- <p *ngIf="loading"><md-progress-bar mode="indeterminate"></md-progress-bar></p>  --\x3e\n                        <h3 class="box-title"><strong>Current Annotation {{ randomARG.entry.gene_id }}</strong> </h3>\n\n                    </div>\n                    \x3c!-- /.box-header --\x3e\n                    <div class="box-body text-center">\n\n                        <dl class="dl">\n                            <p>\n                                <strong>Query gene id:</strong>\n                                <span class="badge bg-black">{{ randomARG.entry.gene_id }}</span>\n                            </p>\n                            <p>\n                                <strong>ARG Class:</strong>\n                                <span class="badge bg-blue">{{ randomARG.entry.type }}</span>\n                            </p>\n                            <p>\n                                <strong>ARG Group:</strong>\n                                <span class="badge bg-green">{{ randomARG.entry.subtype }}</span>\n                            </p>\n                            <p>\n                                <strong>ARG Database:</strong>\n                                <span class="badge bg-blue">{{ randomARG.entry.database }}</span>\n                            </p>\n                            <p>\n                                <strong>Inspected:</strong>\n                                <span class="badge bg-blue">{{ randomARG.entry.inspected }}</span>\n                            </p>\n                            \x3c!-- <dt>Score:</dt> --\x3e\n                            \x3c!-- <dd><span class="badge bg-blue">{{ randomARG.entry.score }}</span></dd> --\x3e\n                        </dl>\n\n                        <div class="col-md-12 text-center">\n                            <button (click)="nextGene()" class="" color="red" md-raised-button>Skip Gene</button>\n                        </div>\n\n\n                    </div>\n\n                    \x3c!-- /.box-body --\x3e\n                    \x3c!-- </div> --\x3e\n                    \x3c!-- /.box --\x3e\n                </div>\n            </div>\n\n            <div class="col-md-12 box">\n                <h4><strong>Instructions</strong></h4>\n                <p>Please fill up the Antibiotic resistance class, group and mechanism (if any) of the gene based on the observation from the different resources.</p>\n                <p><strong>Metadata</strong></p>\n                <p>Check the information under the <strong>metadata</strong> tab. The primary goal of this section is to identify the antibiotic class. if you see keywords such as\n                    <span class="badge">Beta-lactamase</span> <span class="badge">Aminoglycoside</span> <span class="badge">Macrolide</span> it is likely that those are associated to any antibiotic resistance class. Descriptions and ontology sections\n                    can help to identify antibiotic resistance mechanism of the gene. In some cases, you can also get information about the gene group for example gene names such as <span class="badge">BacA</span> <span class="badge">Bla</span>\n                    <span class="badge">MacB</span>.\n                </p>\n\n                <p><strong>BestHit</strong></p>\n                <p>The BestHit section associates the queried gene to its closest antibiotic resistance genes from curated databases. From this section you need to look at the alignment scores (Bitscore, evalue, identity and coverage). High identity and\n                    coverage represent close related sequences. However, statistically significant alignments don\'t necesarly need high identity percentages. Therefore, pay attention to the Bitscores and Evalues. <strong>Note</strong>: A bitscore greater\n                    than 50 is considered significant if it spans at least 90% coverage.\n                </p>\n\n                <p><strong>BestHit</strong>: The gene under analysis is definitely not an ARG.</p>\n\n\n\n                <h4><strong>Instructions</strong></h4>\n                <p>Please provide your observations about the gene transfer mechanism (if any) of the queried gene.</p>\n                <p><strong>Horizontal Gene Transfer</strong></p>\n                <p>Please check if there is any evidence that suggests the gene has been observed in a plasmid, prophage or virus.</p>\n                <p>To complete this task please check the Horizontal Gene Transfer Tab. If there is not any box with plasmid, prophage or virus tags it means to date there is not evidence that the gene is transfered by any of those mechanisms. On the other\n                    hand, the boxes under plasmid, prophage or virus will show the number of times the gene was found in plasmids, viruses or prophages. It shows the quality of the hits (bitscore, evalue, identity and coverage). please pay attention to\n                    those metrics to make your judgement. Remember that low identity hits can be statistically significant.\n                </p>\n                <p><strong>Full Genomes</strong></p>\n                <p>Please take a look at the pathogen genomes panel under the horizontal gene transfer section. This panel will show you the association of the queried gene against a set of ~100,000 bacterial genomes. You will get information about the association\n                    of the gene to pathogens as well as their antimicrobial phenotype (resistant, susceptible, intermediate)\n\n                </p>\n\n                <h4><strong>Instructions</strong></h4>\n                <p>This panel your observations of the queried gene.</p>\n                <p><strong>Verify your observations</strong></p>\n                <p>Please, make sure the values in the fields (ARG class, ARG group and ARG mechanism) correspond to what you have observed.</p>\n                <p><strong>Rate your expertise</strong></p>\n                <p>Please in a scale from 1 to 5 rate your confidence or expertice level, where 1 depicts a non expert evaluator, and 5 if you have experience working with Antibiotic Resistance Genes.\n                    <p>\n                        <p><strong>Rate your annotation confidence</strong></p>\n                        <p>Please in a scale from 1 to 5, rate your confidence in the curation of the queried gene where 1 means that there is a lack of evidence about the gene and 5 the data correlates with your observations.</p>\n            </div>\n\n        </div>\n\n\n        <div class="col-md-6">\n\n            <div class="">\n                <div class="box box-solid box-primary">\n                    <div class="box-body">\n                        <md-input-container class=\'col-sm-12 col-sm-offset-0\'>\n                            <input #keyword (keyup.enter)="getARG(keyword.value)" mdInput placeholder="Search term " value="" />\n                        </md-input-container>\n                    </div>\n                </div>\n            </div>\n\n\n\n            <div *ngIf="loading==true" class="col-md-4 col-md-offset-4">\n                <div class="col-sm-8 col-sm-offset-2">\n                    <object>\n                <embed src="/assets/images/loading_1.svg" />\n              </object>\n                </div>\n            </div>\n\n            <div *ngIf="randomARG.status==true && loading==false">\n                \x3c!-- <md-tab-group (selectChange)="tabsEvent($event)"> --\x3e\n                \x3c!-- <md-tab  label="METADATA"> --\x3e\n\n                \x3c!--METADATA SECTION--\x3e\n                <classify-metadata-uniprot *ngIf="randomARG.entry.database==\'UNIPROT\'"> </classify-metadata-uniprot>\n                <classify-metadata-card> </classify-metadata-card>\n\n\n                \x3c!-- </md-tab> --\x3e\n\n                \x3c!-- <md-tab  label="BEST HIT"> --\x3e\n                <hr>\n                <div *ngFor="let bh of randomARG.besthit.alignments">\n                    \x3c!-- <p> {{ bh.best_hit_database }} </p>  --\x3e\n                    <besthit-metadata-ardb *ngIf="bh.best_hit_database==\'ARDB\'"> </besthit-metadata-ardb>\n                    <besthit-metadata-card *ngIf="bh.best_hit_database==\'CARD\'"> </besthit-metadata-card>\n                </div>\n                \x3c!-- </md-tab> --\x3e\n                <hr>\n                \x3c!-- <md-tab  label="HORIZONTAL GENE TRANSFER"> --\x3e\n                \x3c!-- <div *ngIf="drawGenomes"> --\x3e\n                <genome-metadata *ngIf="randomARG.entry.database==\'UNIPROT\'"></genome-metadata>\n                <genome-metadata *ngIf="randomARG.entry.database==\'CARD\'"></genome-metadata>\n                <genome-metadata *ngIf="randomARG.entry.database==\'ARDB\'"></genome-metadata>\n                \x3c!-- </div> --\x3e\n                \x3c!-- </md-tab> --\x3e\n\n                \x3c!-- </md-tab-group> --\x3e\n            </div>\n        </div>\n\n        <div class="col-md-3">\n            <app-curate></app-curate>\n        </div>\n\n    </div>\n\n    \x3c!--</md-tab>--\x3e\n\n    \x3c!--<md-tab label="Novel ARGs">Content 2</md-tab>--\x3e\n\n    \x3c!--<md-tab label="Potential ARGs">Content 2</md-tab>--\x3e\n\n    \x3c!--</md-tab-group>--\x3e\n</div>'},ekaV:function(e,t,n){t=e.exports=n("FZ+f")(),t.push([e.i,"",""]),e.exports=e.exports.toString()},gkki:function(e,t,n){t=e.exports=n("FZ+f")(),t.push([e.i,"",""]),e.exports=e.exports.toString()},hZIz:function(e,t,n){t=e.exports=n("FZ+f")(),t.push([e.i,"",""]),e.exports=e.exports.toString()},huCP:function(e,t,n){"use strict";var a=n("3j3K"),o=n("Jca5"),s=n("lw3g");n.d(t,"a",function(){return d});var i=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=function(){function e(e,t){this.dataService=e,this.pieChart=t}return e.prototype.ngOnInit=function(){this.randomARG=this.dataService.ARG,this.disease=new s.a,this.disease.draw(this.randomARG.pathogen.disease),this.AMR_phenotype=new s.a,this.AMR_phenotype.draw(this.randomARG.pathogen.phenotype),this.host=new s.a,this.host.draw(this.randomARG.pathogen.host)},e.prototype.onSelect=function(e){console.log(e)},e}();d=i([n.i(a.Component)({selector:"genome-metadata",template:n("in4U"),styles:[n("ekaV")],providers:[s.a]}),r("design:paramtypes",["function"==typeof(c=void 0!==o.a&&o.a)&&c||Object,"function"==typeof(l=void 0!==s.a&&s.a)&&l||Object])],d);var c,l},"i/FI":function(e,t){e.exports='<div *ngIf="randomARG.metadata.status==false" class="">\n\n    <div class="alert alert-danger alert-dismissible">\n        <h4><i class="icon fa fa-ban"></i> {{ randomARG.entry.database }} Alert!</h4>\n        <strong>This Gene is outdated</strong>\n        <p>\n            The entry {{ randomARG.entry.gene_id }} is no longer active in the {{ randomARG.entry.database }} database.\n        </p>\n    </div>\n\n</div>'},in4U:function(e,t){e.exports='\n\n<div *ngIf="randomARG.pathogen.status==true"  class="">\n    \x3c!-- <div class="col-md-12"> --\x3e\n        <div class="box box-solid">\n            <div class="text-center">\n                \n                    \x3c!-- <div class="box-header with-border text-center"> --\x3e\n                        \n                        \x3c!-- <div class="col-md-10 col-md-offset-1">\n                            <svg  width="50px" height="50px"  class="resistant" />  \n                        </div> --\x3e\n\n                        <strong>Pathogen Genomes</strong>\n                        \n                    \x3c!-- </div> --\x3e\n                \n            </div>\n\n            <div class="">\n                <div class="box-body">\n                    The gene entry {{randomARG.entry.gene_id}} (<strong>{{ randomARG.entry.subtype }}</strong>) is found in <strong> {{ randomARG.pathogen.genomes_count }}</strong> genome(s). \n                    For the gene {{randomARG.entry.gene_id}} to be considered as part of a genome, the gene alignment has to cover at least 90% of the ARG entirle length and a minimum of 90% of identity.            \n                </div>\n\n                \x3c!-- PIE CHARTS WITH THE DATA INFORMATION  --\x3e\n                <div *ngIf="disease.ready" class="fig-panel">\n                    <div class="box box-solid box-primary">\n                        <div class="box-body">\n                            <p>This figure shows the distribution of the bacterial that are reported to cause or infer in diseases.</p>\n                            <ngx-charts-pie-grid\n                                [scheme]="disease.colorScheme"\n                                [results]="disease.data"\n                                (select)="onSelect($event)">\n                            </ngx-charts-pie-grid>\n                        </div>\n                    </div>\n                </div>\n\n                \x3c!-- PIE CHARTS WITH THE DATA INFORMATION  --\x3e\n                <div *ngIf="AMR_phenotype.ready" class=" fig-panel">\n                    <div class="box box-solid box-primary">\n                        <div class="box-body">\n                            <p>This figure shows the distribution of the antimicrobial phenotype of the genomes.</p>\n                            <ngx-charts-pie-grid\n                                [scheme]="AMR_phenotype.colorScheme"\n                                [results]="AMR_phenotype.data"\n                                (select)="onSelect($event)">\n                            </ngx-charts-pie-grid>\n                        </div>\n                    </div>\n                </div>\n\n                \x3c!-- PIE CHARTS WITH THE DATA INFORMATION  --\x3e\n                <div *ngIf="host.ready" class="fig-panel">\n                    <div class="box box-solid box-primary">\n                        <div class="box-body">\n                            <p>This figure reports the distribution of the host organism.</p>\n                            <ngx-charts-pie-grid\n                                [scheme]="host.colorScheme"\n                                [results]="host.data"\n                                (select)="onSelect($event)">\n                            </ngx-charts-pie-grid>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n\n\n        </div>\n    \x3c!-- </div> --\x3e\n</div>\n\n\n\n<div  *ngFor="let item of randomARG.mobile" class="">\n    <div *ngIf="item.status==true" class="">\n        <div class="box box-solid box-primary">\n            \x3c!-- <div class="col-md-10 col-md-offset-1"> --\x3e\n                \n                    <div class="box-header with-border ">\n                        <i class="fa fa-tag"></i>\n                        <h3 class="box-title" *ngIf="item.type==\'proph\'" >Prophages</h3>\n                        <h3 class="box-title" *ngIf="item.type==\'plasmid\'" >Plasmids</h3>\n                        <h3 class="box-title" *ngIf="item.type==\'vir\'" >Viruses</h3>\n                        \n                    </div>\n                \n            \x3c!-- </div> --\x3e\n\n            \x3c!-- <div class="col-md-12"> --\x3e\n                <div class="box-body">\n                    <dl class="dl-horizontal">\n                        <dt>Count:</dt>\n                        <dd> <span class="badge bg-blue"> {{ item.count }} </span></dd>\n                        <dt>BitScore:</dt>\n                        <dd> <span class="badge bg-{{ item.bitscore.color }}"> {{ item.bitscore.mean }} {{ \'&plusmn;\' }} {{item.bitscore.std}} </span></dd>\n                        <dt>Evalue (log):</dt>\n                        <dd> <span class="badge bg-{{ item.evalue.color }}"> {{ item.evalue.mean }} {{ \'&plusmn;\' }} {{item.evalue.std}} </span></dd>\n                        <dt>Coverage:</dt>\n                        <dd> <span class="badge bg-{{ item.coverage.color }}"> {{  (100*item.coverage.mean/randomARG.entry[\'length\']).toFixed(0) }}% {{ \'&plusmn;\' }} {{(100*item.coverage.std/randomARG.entry[\'length\']).toFixed(0)}} </span></dd>\n                        <dt>Identity:</dt>\n                        <dd> <span class="badge bg-{{ item.identity.color }}"> {{ item.identity.mean }}%  {{ \'&plusmn;\' }} {{item.identity.std}} </span></dd>\n                        <dt>Description:</dt>\n                        <dd>{{ item.mge_description }}</dd>\n                        <dt>Gene Aclame ID:</dt>\n                        <dd>{{ item.mge_id }}</dd>\n                    </dl>\n                </div>\n            \x3c!-- </div> --\x3e\n        </div>\n    </div>\n</div>\n\n\n'},iuFx:function(e,t,n){t=e.exports=n("FZ+f")(),t.push([e.i,"",""]),e.exports=e.exports.toString()},kZql:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var a={production:!0}},ljLh:function(e,t){e.exports="<p>\n  home works!\n</p>\n"},lw3g:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var a=function(){function e(){this.showLegend=!1,this.explodeSlices=!1,this.doughnut=!1,this.gradient=!0,this.showLabels=!0,this.colorScheme={domain:["#5AA454","#A10A28","#C7B42C","#AAAAAA"]},this.ready=!1}return e.prototype.draw=function(e){try{e.length>=1?(this.data=e.sort(function(e,t){return t.value-e.value}).slice(0,3),this.ready=!0):this.ready=!1}catch(e){this.ready=!1}},e}()},okgc:function(e,t,n){t=e.exports=n("FZ+f")(),t.push([e.i,"",""]),e.exports=e.exports.toString()},prxq:function(e,t,n){"use strict";var a=n("3j3K"),o=n("NVOs"),s=n("/lY3"),i=(n.n(s),n("+pb+")),r=(n.n(i),n("Jca5")),d=n("DAod"),c=n("aV/W");n.n(c);n.d(t,"a",function(){return g});var l=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},p=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},g=function(){function e(e,t,n){var a=this;this.dataService=e,this.classifyComponent=t,this.confirmationService=n,this.display=!1,this.activeIndex=0,this.options_type=[],this.group_options=["Bla1","MacB","BacA"],this.mge_options=["Plasmid","Virus","Prophage","None"],this.myControl=new o.FormControl,this.groupControl=new o.FormControl,this.mgeControl=new o.FormControl,this.onRatingChange=function(e,t){a.antibiotic.rating[e]={name:e,value:t.rating}}}return e.prototype.ngOnInit=function(){var e=this;this.overlay={title:"none",content:"none"},this.step1=!0,this.items=[{label:""},{label:""},{label:""}],this.randomARG=this.dataService.ARG,this.antibiotic={class:"",group:"",mechanism:"",MGE:{},comments:"",rating:{}},this.dataService.getListAntibioticClass().subscribe(function(t){for(var n=0,a=e.dataService.ATYPE;n<a.length;n++){var o=a[n];e.options_type.push(o.type)}e.filteredOptions=e.myControl.valueChanges.startWith(null).map(function(t){return t?e.filter(t,e.options_type):e.options_type.slice()})}),this.dataService.getListAntibioticClass().subscribe(function(t){for(var n=0,a=e.dataService.ATYPE;n<a.length;n++){a[n]}e.groupFilteredOptions=e.groupControl.valueChanges.startWith(null).map(function(t){return t?e.filter(t,e.group_options):e.group_options.slice()})})},e.prototype.filter=function(e,t){return t.filter(function(t){return new RegExp(""+e,"gi").test(t)})},e.prototype.mgeOptions=function(e,t){this.antibiotic.MGE[e]={name:e,value:t.checked}},e.prototype.showDialog=function(){this.display=!0},e.prototype.validate=function(e){1==e?""==this.antibiotic.class||""==this.antibiotic.group?(this.overlay.title="Emtpy group and/or class not allowed",this.overlay.content="Please make sure to insert the antibiotic class and group in the form (mechanism is optional)",this.showDialog()):(this.activeIndex=1,this.step1=!1,this.step2=!0):2==e?(this.step2=!1,this.step3=!0,this.activeIndex=2):3==e&&(this.step3=!1,this.step1=!0,this.activeIndex=0)},e.prototype.submitReview=function(){console.log(this.antibiotic),this.overlay.title="Your results",this.overlay.content="Your manual inspection has been registered in the system and its ready for validation.",this.overlay.score=10,this.overlay.average_score=15,this.showDialog(),this.dataService.insertCuration(this.antibiotic).subscribe(function(e){console.log(e)}),this.antibiotic={class:"",group:"",mechanism:"",MGE:[],comments:"",rating:[]}},e.prototype.continueReview=function(){var e=this;this.activeIndex=0,this.step1=!0,this.step3=!1,this.classifyComponent.randomARG.entry.database="-------------",this.classifyComponent.randomARG.entry.gene_id="-----------",this.classifyComponent.randomARG.entry.subtype="-----------",this.classifyComponent.randomARG.entry.type="--------------",this.classifyComponent.randomARG.entry.inspected="-----",this.classifyComponent.randomARG.entry.score="----",this.classifyComponent.loading=!0,this.dataService.getRandomKnownARG().subscribe(function(t){e.classifyComponent.randomARG=e.dataService.ARG,console.log(e.randomARG),e.classifyComponent.loading=!1}),this.display=!1},e}();g=l([n.i(a.Component)({selector:"app-curate",template:n("w7OC"),styles:[n("GfAU")],encapsulation:a.ViewEncapsulation.None}),p("design:paramtypes",["function"==typeof(b=void 0!==r.a&&r.a)&&b||Object,"function"==typeof(f=void 0!==d.a&&d.a)&&f||Object,"function"==typeof(h=void 0!==c.ConfirmationService&&c.ConfirmationService)&&h||Object])],g);var b,f,h},pzFA:function(e,t){e.exports='<div *ngIf="randomARG.metadata.status==false" class="">\n\n    <div class="alert alert-info alert-dismissible">\n        <h4><i class="icon fa fa-ban"></i> {{ randomARG.entry.database }} Alert!</h4>\n        <strong>This Gene could not be found in the {{ randomARG.entry.database }} database</strong>\n        <p>\n            The entry {{ randomARG.entry.gene_id }} is no longer active in the {{ randomARG.entry.database }} database. Please take a look at the other information to curate/reject the gene.\n        </p>\n    </div>\n\n</div>'},"sD/p":function(e,t,n){"use strict";var a=n("3j3K"),o=n("Jca5");n.d(t,"a",function(){return r});var s=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},i=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},r=function(){function e(e){this.dataService=e}return e.prototype.ngOnInit=function(){this.randomARG=this.dataService.ARG},e}();r=s([n.i(a.Component)({selector:"besthit-metadata-ardb",template:n("/Fel"),styles:[n("hZIz")]}),i("design:paramtypes",["function"==typeof(d=void 0!==o.a&&o.a)&&d||Object])],r);var d},sivP:function(e,t,n){"use strict";var a=n("3j3K"),o=n("Qbdm"),s=n("2Je8"),i=n("NVOs"),r=n("fYnu"),d=n("KN8t"),c=n("dBtz"),l=(n.n(c),n("GFvA")),p=n("aV/W"),g=(n.n(p),n("DAod")),b=n("6R2C"),f=n("Krr5"),h=n("GnK1"),u=n("9dG9"),m=n("QNUp"),v=n("sD/p"),y=n("huCP"),x=n("prxq");n.d(t,"a",function(){return A});var R=this&&this.__decorate||function(e,t,n,a){var o,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},A=function(){function e(){}return e}();A=R([n.i(a.NgModule)({imports:[s.CommonModule,i.FormsModule,i.ReactiveFormsModule,o.BrowserModule,b.a,r.a,d.a,d.b,c.NgxChartsModule,p.PanelModule,p.AutoCompleteModule,p.StepsModule,l.a.forRoot(),p.ConfirmDialogModule,p.DialogModule,p.ButtonModule,p.TabViewModule,p.CodeHighlighterModule],schemas:[],declarations:[g.a,f.a,h.a,u.a,v.a,m.a,y.a,x.a],providers:[p.ConfirmationService],bootstrap:[g.a]})],A)},w7OC:function(e,t){e.exports='\n<div class="">\n    <div class="box box-solid box-primary">\n        <div class="box-body">\n            <p-steps styleClass="steps-custom" [(activeIndex)]="activeIndex" [readonly]="true" [model]="items"></p-steps>\n            \n            <p-dialog header="{{overlay.title}}" icon="fa-external-link-square" modal="modal" [(visible)]="display">\n                \n                <div class="">\n                    <div class="box-body text-center">\n                        <p>{{ overlay.content }}</p>\n                        <p *ngIf="overlay.score" ><strong>Your annotation score is: {{ overlay.score }}</strong> which is \n                        <span class="badge bg-blue" *ngIf="overlay.score<overlay.average_score">lower</span> \n                        <span class="badge bg-red" *ngIf="overlay.score>overlay.average_score">higher</span> than the average score ( {{ overlay.average_score }} ) for \n                        this gene. </p>\n                        \n                    </div>\n                </div>\n\n                \n                <p-footer class="text-center">\n                    <button *ngIf="overlay.score" type="button" pButton icon="fa-check" (click)="continueReview()" label="Continue"></button>\n                     <button *ngIf="!overlay.score" type="button" pButton icon="fa-check" (click)="display=false" label="Continue"></button>\n                </p-footer>\n                \n\n                \n\n            </p-dialog>\n\n             <div *ngIf="step1 text-center">\n\n                \x3c!-- <div class="col-md-12"> --\x3e\n                    <h4 class="text-center"><strong>ARG Annotation</strong></h4>\n                    <p>Please based on your observations add the corresponding data to the form below:</p>\n\n                    <md-input-container class="col-md-12">\n                    <input type="text" mdInput [formControl]="myControl" [mdAutocomplete]="AClass" [(ngModel)]="antibiotic.class" placeholder="Antibiotic Class" >\n                    </md-input-container>\n\n                    <md-autocomplete #AClass="mdAutocomplete">\n                    <md-option *ngFor="let option of filteredOptions | async" [value]="option">\n                        {{ option }}\n                    </md-option>\n                    </md-autocomplete> \n\n                    <md-input-container class="col-md-12">\n                    <input type="text" [formControl]="groupControl" [mdAutocomplete]="AGroup" mdInput [(ngModel)]="antibiotic.group" placeholder="Antibiotic Group" >\n                    </md-input-container> \n\n                    <md-autocomplete #AGroup="mdAutocomplete">\n                    <md-option *ngFor="let option of groupFilteredOptions | async" [value]="option">\n                        {{ option }}\n                    </md-option>\n                    </md-autocomplete> \n\n                    <md-input-container class="col-md-12">\n                    <input type="text" mdInput [(ngModel)]="antibiotic.mechanism"  placeholder="Antibiotic Mechanism (if any)" >\n                    </md-input-container>\n\n                    <br><br>\n\n                    <div class="col-md-12 text-center">\n                        <button (click)="validate(1)" color="primary"  md-raised-button>Next</button>\n                        <button (click)="reportARG()" class="" color="red"  md-raised-button>Report ARG</button>\n                    </div>\n                \x3c!-- </div> --\x3e\n\n             </div>\n\n\n\n             <div *ngIf="step2" >\n            \n\n                \x3c!-- <div class="col-md-12"> --\x3e\n                    <h4 class="text-center"><strong>Horizontal Gene Transfer</strong></h4>\n                    <div class="col-md-12">\n                        <p>Is there any evidence that suggests the queried gene to be horizontally transfered? </p>\n                        \n                        <div *ngFor="let ht of mge_options">\n                            <md-checkbox value = "{{ht}}" (change)="mgeOptions(ht, $event)" >{{ ht }}</md-checkbox>\n                        </div>\n                        <p>From a scale from 1 to 5 how would you rate this evidence? </p>\n                        <star-rating-comp (onRatingChange)="onRatingChange(\'mge\',$event)" [starType]="\'svg\'" [rating]="1" [labelPosition]="\'top\'" ></star-rating-comp>\n                        <hr>\n                    </div>\n\n\n                    \n                    \n                    <div class="col-md-12">\n                        <h4 class="text-center"><strong>Full Genomes</strong></h4>\n\n                        <p>Is there evidence that suggests the queried gene is present any pathogenic genomes? </p>\n                        \n                        <md-radio-group [(ngModel)]="antibiotic.pathGenome">\n                            <md-radio-button value="1">Yes</md-radio-button> <br>\n                            <md-radio-button value="2">Not</md-radio-button><br>\n                        </md-radio-group>\n\n                        <p>From a scale from 1 to 5 how would you rate this evidence? </p>\n                        <star-rating-comp (onRatingChange)="onRatingChange(\'genome\',$event)" [starType]="\'svg\'" [rating]="1" [labelPosition]="\'top\'" ></star-rating-comp>\n                        <hr>\n\n                    </div>\n\n                    \n\n                    <div class="col-md-12 text-center">\n                        <button (click)="validate(2)" color="primary"  md-raised-button>Next</button>\n                    </div>\n                \x3c!-- </div> --\x3e\n\n\n\n             </div>\n\n            <div *ngIf="step3" >\n\n                \x3c!-- <div class="col-md-12"> --\x3e\n                    <div class="col-md-12 text-center">\n                        <h4 class="text-center"><strong>ARG annotation</strong></h4>\n                        <dl class="dl-horizontal">\n                        \n                            <dt>ARG Class:</dt>\n                            <dd><span class="badge bg-blue"> {{ antibiotic.class }} </span></dd>\n                            \n                            <dt>ARG Group:</dt>\n                            <dd><span class="badge bg-green"> {{ antibiotic.group }} </span></dd>\n                            \n                            <dt *ngIf="!antibiotic.mechanism==\'\'">ARG Mechanism:</dt>\n                            <dd *ngIf="!antibiotic.mechanism==\'\'"><span class="badge bg-red"> {{ antibiotic.mechanism }} </span></dd>                \n                            \n                        </dl>\n                        <hr>\n                    </div>\n\n                    <div class="col-md-12 col-md-offset-0 text-center">\n                        <p>Please rate your level of expertise</p>\n                        <star-rating-comp (onRatingChange)="onRatingChange(\'expertise\',$event)" [starType]="\'svg\'" [rating]="1" [labelPosition]="\'top\'" ></star-rating-comp>\n                        <hr>\n                    </div>\n                    \n                    <div class="col-md-12 col-md-offset-0 text-center">\n                        <p>Please rate your confidence in your observations</p>\n                        <star-rating-comp (onRatingChange)="onRatingChange(\'confidence\',$event)" [starType]="\'svg\'" [rating]="1" [labelPosition]="\'top\'" ></star-rating-comp>\n                        <hr>\n                    </div>\n                    \n                    <md-input-container class="col-md-12">\n                        <p>Please add any relevant comments</p>\n                        <textarea mdInput [(ngModel)]="antibiotic.comments" rows="5"></textarea>\n                    </md-input-container>\n\n\n                    <div class="col-md-12 text-center">\n                        <button (click)="submitReview()" class="" color="green"  md-raised-button>Submit</button>                        \n                        <button (click)="validate(3)" class="" color="red"  md-raised-button>Cancel</button>\n                    </div>\n                \n\n                \x3c!-- </div> --\x3e\n            </div>\n\n\n\n        </div>\n\n    </div>\n</div>\n'},x35b:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n("3j3K"),o=n("O61y"),s=n("Iksp");n("kZql").a.production&&n.i(a.enableProdMode)(),n.i(o.a)().bootstrapModule(s.a)},xaWD:function(e,t){e.exports="<p>\n  database works!\n</p>\n"}},[1]);