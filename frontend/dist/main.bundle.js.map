{"version":3,"sources":["webpack:///./src/services/data.service.ts","webpack:///./src/services/session.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/services/user.service.ts","webpack:///./src/app/classify/classify.component.ts","webpack:///./src/services/discussion.service.ts","webpack:///./src/services/auth.service.ts","webpack:///./src/services/encrypt.ts","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/classify/explore/explore.component.ts","webpack:///./src/app/classify/explore/explore.module.ts","webpack:///./src/app/classify/instructions/instructions.component.ts","webpack:///./src/app/database/database.component.ts","webpack:///./src/app/forum/all-questions/all-questions.component.ts","webpack:///./src/app/forum/edit-question/edit-question.component.ts","webpack:///./src/app/forum/forum.component.ts","webpack:///./src/app/forum/new-question/new-question.component.ts","webpack:///./src/app/forum/selected-question/selected-question.component.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/services/admin.service.ts","webpack:///./src/services/ncbi.service.ts","webpack:///./src/assets/images/admin.svg","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/admin/visualize.class.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/classify/besthit/ardb/ardb.component.ts","webpack:///./src/app/classify/besthit/card/card.component.ts","webpack:///./src/app/classify/besthit/generic/generic.component.ts","webpack:///./src/app/classify/classify-routing.module.ts","webpack:///./src/app/classify/classify.module.ts","webpack:///./src/app/classify/comments/comments.component.ts","webpack:///./src/app/classify/curate/curate.component.ts","webpack:///./src/app/classify/curate/score.class.ts","webpack:///./src/app/classify/explore/explore-routing.module.ts","webpack:///./src/app/classify/genomes/Charts.ts","webpack:///./src/app/classify/genomes/genome.component.ts","webpack:///./src/app/classify/metadata/ardb/ardb.component.ts","webpack:///./src/app/classify/metadata/card/card.component.ts","webpack:///./src/app/classify/metadata/uniprot/uniprot.component.ts","webpack:///./src/app/database/database-routing.module.ts","webpack:///./src/app/database/database.module.ts","webpack:///./src/app/forum/search/search.component.ts","webpack:///./src/app/home/home-routing.module.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/news/news.component.ts","webpack:///./src/app/profile/stats/stats.component.ts","webpack:///./src/app/about/about.component.css","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/app.component.css","webpack:///./src/app/classify/besthit/ardb/ardb.component.css","webpack:///./src/app/classify/besthit/card/card.component.css","webpack:///./src/app/classify/besthit/generic/generic.component.css","webpack:///./src/app/classify/classify.component.css","webpack:///./src/app/classify/comments/comments.component.css","webpack:///./src/app/classify/curate/curate.component.css","webpack:///./src/app/classify/explore/explore.component.css","webpack:///./src/app/classify/genomes/genome.component.css","webpack:///./src/app/classify/instructions/instructions.component.css","webpack:///./src/app/classify/metadata/ardb/ardb.component.css","webpack:///./src/app/classify/metadata/card/card.component.css","webpack:///./src/app/classify/metadata/uniprot/uniprot.component.css","webpack:///./src/app/database/database.component.css","webpack:///./src/app/forum/all-questions/all-questions.component.css","webpack:///./src/app/forum/edit-question/edit-question.component.css","webpack:///./src/app/forum/forum.component.css","webpack:///./src/app/forum/new-question/new-question.component.css","webpack:///./src/app/forum/search/search.component.css","webpack:///./src/app/forum/selected-question/selected-question.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/news/news.component.css","webpack:///./src/app/login/login.component.css","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/stats/stats.component.css","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/classify/besthit/ardb/ardb.component.html","webpack:///./src/app/classify/besthit/card/card.component.html","webpack:///./src/app/classify/besthit/generic/generic.component.html","webpack:///./src/app/classify/classify.component.html","webpack:///./src/app/classify/comments/comments.component.html","webpack:///./src/app/classify/curate/curate.component.html","webpack:///./src/app/classify/explore/explore.component.html","webpack:///./src/app/classify/genomes/genome.component.html","webpack:///./src/app/classify/instructions/instructions.component.html","webpack:///./src/app/classify/metadata/ardb/ardb.component.html","webpack:///./src/app/classify/metadata/card/card.component.html","webpack:///./src/app/classify/metadata/uniprot/uniprot.component.html","webpack:///./src/app/database/database.component.html","webpack:///./src/app/forum/all-questions/all-questions.component.html","webpack:///./src/app/forum/edit-question/edit-question.component.html","webpack:///./src/app/forum/forum.component.html","webpack:///./src/app/forum/new-question/new-question.component.html","webpack:///./src/app/forum/search/search.component.html","webpack:///./src/app/forum/selected-question/selected-question.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/news/news.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/stats/stats.component.html","webpack:///./src/app/signup/signup.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Location }   from '@angular/common';\nimport { environment } from '../environments/environment';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\n\n\n@Injectable()\nexport class DataService {\n\n  ARG: Object;\n  ATYPE: any;\n  host: string;\n  baseUrl: string;\n  randomConflictingArgSubtype: Object;\n\n  constructor ( private http:Http,\n                private location: Location\n              ){\n\n    this.baseUrl = environment.api_url;\n\n\n    this.ARG = [];\n    this.randomConflictingArgSubtype = [];\n\n  }\n\n  getRandomConflictingArgSubtype(){\n    return this.http.get(this.baseUrl+'/get/subtype/random/')\n      .map( res=> {\n        this.randomConflictingArgSubtype = res.json();\n      })\n  }\n\n  getRandomKnownARG() {\n    // console.log(this.baseUrl)\n    return this.http.get(this.baseUrl+'/get/arg/random/')\n      .map(res => {\n        try {\n          this.ARG = res.json()\n        } catch (error) {\n          this.ARG = {\"status\":false}\n        }\n\n      })\n  }\n\n  searchAPI(keyword: string, index: string){\n    return this.http.get(this.baseUrl+'/get/search/?keyword='+keyword.replace(/\\s/g,'')+'&index='+index)\n      .map(res => {\n        return res.json()\n      })\n  }\n\n  fast_search(keyword: string, index: string, action: string){\n    return this.http.get(this.baseUrl+'/get/fast_search/?keyword='+keyword.replace(/\\s/g,'')+'&index='+index+'&action='+action)\n      .map(res => {\n        return res.json()\n      })\n  }\n\n  getKnownARGInfo(gene_id: string){\n    return this.http.get(this.baseUrl+'/get/arg/info/'+gene_id)\n      .map(res => {\n        this.ARG = res.json()\n      })\n  }\n\n  getListAntibioticClass(){\n    return this.http.get(this.baseUrl+'/get/antibiotic/class')\n      .map(res => {\n        this.ATYPE = res.json()\n      })\n  }\n\n  getListAntibioticGroup(){\n    return this.http.get(this.baseUrl+'/get/antibiotic/group')\n      .map(res => {\n        this.ATYPE = res.json()\n      })\n  }\n\n  insertCuration(curation: Object, user_id: string){\n    curation['gene_id'] = this.ARG['entry']['gene_id'];\n    console.log(curation, user_id)\n      return this.http.post(this.baseUrl + '/post/curation', { annotation: curation, user_id: user_id})\n      .map(res => {\n        return res.json()\n      })\n  }\n\n  predict_nomenclature(parameters: Object){\n    return this.http.post(this.baseUrl+'/predict/nomenclature/', parameters)\n      .map(res => {\n        return res.json()\n      })\n  }\n\n  get_plasmid(parameters: Object) {\n    return this.http.post(this.baseUrl + '/get/plasmid/', parameters)\n      .map(res => {\n        return res.json();\n      });\n  }\n\n\ngetDatabaseList(){\n  return this.http.get(this.baseUrl+'/get/database/list')\n    .map( res => {\n      return res.json();\n    })\n}\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/data.service.ts","import { CookieService } from 'angular2-cookie/core';\nimport { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class Session {\n  credentials: string;\n\n  constructor (private _cookieService:CookieService){\n\n  }\n\n  get(id: string){\n    this.credentials = this._cookieService.get(id);\n    if(this.credentials){\n      return JSON.parse(this.credentials)\n    }else{return false}\n  }\n\n  putObject(id: string, object: Object){\n    return this._cookieService.putObject(id, object)\n  }\n\n  put(id: string, value: string){\n    return this._cookieService.put(id, value)\n  }\n\n  removeAll(){\n      return this._cookieService.removeAll()\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/session.service.ts","export const environment = {\n  production: true,\n  api_url: 'https://bench.cs.vt.edu/argpedia_api'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n// import {CookieService} from 'angular2-cookie/core';\nimport { Session } from './session.service'\n\nimport { environment } from '../environments/environment';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/delay';\n\nimport { Sha512 } from './encrypt'\n\n@Injectable()\nexport class UserService {\n  private base_url: string;\n  private encript: any\n\n  constructor (private http:Http, private session:Session){\n    this.base_url = environment.api_url;\n    this.encript = new Sha512();\n  }\n\n    stats(user_id: string) {\n        return this.http.get(this.base_url+'/user/stats/'+user_id)\n        .map(res => {\n            return res.json();\n        })\n    }\n\n    count_post(post_id: number, user_id: string) {\n        return this.http.post(this.base_url + '/user/add/post/', { post_id: post_id, user_id: user_id })\n            .map(res => {\n                return res.json();\n            });\n    }\n\n    count_view(user_id: string, post_id: number) {\n        return this.http.post(this.base_url + '/user/sum/views/', { user_id: user_id, post_id: post_id })\n            .map(res => {\n                return res.json();\n            });\n    }\n\n    count_comments(user_id: string) {\n        return this.http.post(this.base_url + '/user/sum/comments/', { user_id: user_id })\n            .map(res => {\n                return res.json();\n            });\n    }\n\n    count_followers(follower_id: string, user_id: string) {\n        return this.http.post(this.base_url + '/user/add/followers/', { user_id: user_id, follower_id: follower_id })\n            .map(res => {\n                return res.json();\n            });\n    }\n\n    count_following(user_id: string, following_id: string) {\n        return this.http.post(this.base_url + '/user/add/following/', { user_id: user_id, following_id: following_id })\n            .map(res => {\n                return res.json();\n            });\n    }\n\n    count_unfollowing(user_id: string, following_id: string) {\n        return this.http.post(this.base_url + '/user/remove/following/', { user_id: user_id, following_id: following_id })\n            .map(res => {\n                return res.json();\n            });\n    }\n\n    change_password(data: any) {\n        return this.http.post(this.base_url + '/user/password/update/', data)\n            .map(res => {\n                return res.json()\n            })\n    }\n\n    change_info(_id: any, key: any, value: any) {\n        return this.http.post(this.base_url + '/user/info/update/', { _id: _id, key: key, value: value })\n            .map(res => {\n                return res.json()\n            })\n    }\n\n    get_user_info(_email: string) {\n        return this.http.get(this.base_url + '/user/info/' + _email)\n            .map(res => {\n                return res.json();\n            });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/user.service.ts","import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { DataService } from '../../services/data.service';\n\nimport {Message} from 'primeng/components/common/api';\n// import { HintService } from 'angular-custom-tour'\n\n// import introJs  from \"intro.js/intro.js\";\n// const IntroJs = require(\"intro.js/intro.js\");\n\nimport { Inject } from '@angular/core';\nimport {MdDialog, MdDialogRef, MD_DIALOG_DATA} from '@angular/material';\n\n// import instructions component for modal window\nimport { InstructionsComponent } from './instructions/instructions.component';\n\n\n@Component({\n  templateUrl: './classify.component.html',\n  styleUrls: ['./classify.component.css'],\n  providers: [\n    // HintService\n  ],\n})\n\n\nexport class ClassifyComponent implements OnInit {\n\n  public randomARG: Object;\n  public conflictingARGSubtype: Object;\n  public render: Boolean;\n  public loading: Boolean = false;\n  public drawGenomes: Boolean = false;\n  public searchIndex: number = 0;\n  public conflictedArgSubtypeFlag: Boolean = false;\n  public conflictedArgSubtypeGeneListCounter: number = 1;\n  public conflictedArgSubtypeClassListCounter: number = 0;\n  public inspectedGenes: Array<string>;\n  public trainingGenes: Array<string>;\n  public trainingARGFlag: Boolean = false;\n  public trainingARGCount: number = 0;\n  public trainingARGTotal: number = 0;\n  public MGE_display: boolean;\n  public ARG_display: boolean;\n\n  public notification: Message[] = [];\n\n  constructor(\n    private dataService: DataService,\n    private router: Router,\n    public dialog: MdDialog,\n    private activatedRoute: ActivatedRoute,\n\n  ){}\n\n\n    ngOnInit() {\n\n        this.MGE_display = false;\n        this.ARG_display = true;\n        this.randomARG = {\n        entry: {\n            database: false,\n        },\n        };\n\n        this.trainingGenes = [\n            \"YP_490697.1\",\n            \"AAM15533.1\",\n            \"AAR84672.1\",\n            \"P52067\",\n            \"YP_042788\",\n            \"YP_416138\",\n            \"AAB53445.1\",\n            \"F0JWD5\",\n            \"A0A0D0NPG2\",\n            \"A0A0E9C576\",\n            \"AAN80811\",\n            \"A0A0Q9QYU5\",\n            \"ABC54722\",\n            \"YP_001346278\",\n            \"A0A0U9H4P4\",\n            \"Q1RPS3\",\n            \"J2LT98\",\n            \"P52067\",\n            \"D3V1W5\"\n          ]\n\n        let _gene_id = this.activatedRoute.snapshot.params.gene_id;\n\n        if (_gene_id) {\n            console.log(_gene_id)\n            this.dataService.getKnownARGInfo(_gene_id)\n                .subscribe(res2 => {\n                    this.randomARG = this.dataService.ARG\n                    // console.log(this.randomARG)\n                    this.loading = false;\n                    this.render = true;\n                    this.router.navigate(['/classify/', { gene_id: this.randomARG['entry']['gene_id'] }])\n                });\n\n        } else {\n            this.dataService.getRandomKnownARG()\n                .subscribe(response => {\n                    this.randomARG = this.dataService.ARG;\n                    this.render = true;\n                    this.router.navigate(['/classify/', { gene_id: this.randomARG['entry']['gene_id'] }]);\n                });\n        }\n\n  }\n\n  selectConflictedArgEvent($event){\n    this.conflictedArgSubtypeFlag = $event.checked;\n    this.trainingARGFlag = false;\n    this.nextGene();\n    if(this.conflictedArgSubtypeFlag){\n      this.notification = [];\n      this.notification.push({severity:'info', summary:'Message', detail:'Enabled Conflicted ARGs'});\n    }\n  }\n\n  trainingARGEvent($event){\n    // the conflicting ARGs cannot be enabled.\n      this.trainingARGTotal = 2;\n    this.conflictedArgSubtypeFlag = false;\n    this.trainingARGCount = 0;\n    this.trainingARGFlag = $event.checked;\n    this.search( this.trainingGenes[Math.floor(Math.random() * this.trainingGenes.length)] );\n    this.trainingARGCount+=1;\n\n    if(this.trainingARGFlag){\n      this.notification = [];\n      this.notification.push({severity:'info', summary:'Message', detail:'Enabled Training Mode'});\n    }\n  }\n\n  trainingARGNextGene(){\n    if(this.trainingARGCount < this.trainingARGTotal){\n      this.search( this.trainingGenes[Math.floor(Math.random() * this.trainingGenes.length)] );\n      this.trainingARGCount+=1;\n      // console.log(this.trainingARGCount, this.trainingARGTotal)\n    }else{\n      this.notification = [];\n      this.notification.push({severity:'success', summary:'End of Training', detail:'Training is done!'});\n      this.notification.push({severity:'info', summary:'Get Reward', detail:'Click on <strong>Random ARG</strong> to start'});\n      // this.notification.push({severity:'success', summary:'End of Training', detail:'You are ready to perform tasks with reward'});\n      this.trainingARGFlag = false;\n      this.nextGeneConflictList()\n    }\n  }\n\n  nextGeneConflictList(){\n    this.randomARG['entry']['database'] = '-------------';\n    this.randomARG['entry']['gene_id'] = '-------------';\n    this.randomARG['entry']['subtype'] = '----------';\n    this.randomARG['entry']['type'] = '--------------';\n    this.randomARG['entry']['inspected'] = '------';\n    this.randomARG['entry']['score'] = '------';\n    this.loading = true;\n\n    if(this.conflictedArgSubtypeFlag){\n\n      if (this.conflictedArgSubtypeGeneListCounter >= this.conflictingARGSubtype['conflict'][this.conflictedArgSubtypeClassListCounter]['genes'].length ){\n        this.conflictedArgSubtypeClassListCounter+=1;\n        this.conflictedArgSubtypeGeneListCounter = 0;\n        }\n\n      if(this.conflictedArgSubtypeClassListCounter == this.conflictingARGSubtype['conflict'].length){\n        this.conflictedArgSubtypeClassListCounter = 0;\n        this.conflictedArgSubtypeGeneListCounter = 1;\n        this.nextGene();\n      }else{\n        // console.log(this.conflictedArgSubtypeClassListCounter, this.conflictedArgSubtypeGeneListCounter)\n        this.dataService.getKnownARGInfo( this.conflictingARGSubtype['conflict'][this.conflictedArgSubtypeClassListCounter]['genes'][this.conflictedArgSubtypeGeneListCounter] )\n        .subscribe(res2=>{\n          this.randomARG = this.dataService.ARG\n            this.loading = false;\n            this.router.navigate(['/classify/', {gene_id: this.randomARG['entry']['gene_id']}])\n        });\n\n        this.conflictedArgSubtypeGeneListCounter += 1;\n      }\n    }else{\n      this.nextGene();\n    }\n  }\n\n  nextGene(){\n    this.randomARG['entry']['database'] = '-------------';\n    this.randomARG['entry']['gene_id'] = '-------------';\n    this.randomARG['entry']['subtype'] = '----------';\n    this.randomARG['entry']['type'] = '--------------';\n    this.randomARG['entry']['inspected'] = '------';\n    this.randomARG['entry']['score'] = '------';\n    this.loading = true;\n\n    if(this.conflictedArgSubtypeFlag){\n      this.dataService.getRandomConflictingArgSubtype()\n        .subscribe(response => {\n          this.conflictingARGSubtype = this.dataService.randomConflictingArgSubtype;\n          // console.log(this.conflictingARGSubtype)\n          // Then, select the first ARG\n          this.dataService.getKnownARGInfo(this.conflictingARGSubtype['conflict'][0]['genes'][0])\n            .subscribe(res2=>{\n              this.randomARG = this.dataService.ARG\n                this.loading = false;\n                this.router.navigate(['/classify/', {gene_id: this.randomARG['entry']['gene_id']}])\n          });\n      });\n    }else{\n      this.dataService.getRandomKnownARG()\n        .subscribe(response =>{\n          this.randomARG = this.dataService.ARG\n          // console.log(this.randomARG)\n            this.loading = false;\n            this.router.navigate(['/classify/', {gene_id: this.randomARG['entry']['gene_id']}])\n      });\n    }\n  }\n\n  search(argID: string){\n    this.randomARG['entry']['database'] = '-------------';\n    this.randomARG['entry']['gene_id'] = '-----------';\n    this.randomARG['entry']['subtype'] = '-----------';\n    this.randomARG['entry']['type'] = '--------------';\n    this.randomARG['entry']['inspected'] = '-----';\n    this.randomARG['entry']['score'] = '----';\n    this.loading = true;\n\n    this.dataService.searchAPI(argID, this.searchIndex.toString())\n      .subscribe(response =>{\n        // this.loading = false;\n        this.dataService.getKnownARGInfo(response['entry']['gene_id'])\n          .subscribe(res2=>{\n            this.randomARG = this.dataService.ARG\n            // console.log(this.randomARG)\n              this.loading = false;\n              this.router.navigate(['/classify/', {gene_id: this.randomARG['entry']['gene_id']}])\n          })\n\n    });\n\n  }\n\n  tabsEvent($event: any){\n    this.drawGenomes = false;\n    if($event.index == 2){\n      this.drawGenomes = true;\n    }\n  }\n\n\n  openInstructions(): void {\n    let dialogRef = this.dialog.open(InstructionsComponent, {\n      width: '80%',\n      data: { train: 'three', animal: 'faa' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // console.log('The dialog was closed');\n      // this.animal = result;\n    });\n\n  }\n\n  scrollToMGEs(){\n    // this.content.scrollTo(0, this.target.nativeElement.offsetTop, 500);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/classify.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\nimport { environment } from '../environments/environment';\n\n\n@Injectable()\nexport class DiscussionService {\n\n  baseUrl: string;\n\n  constructor ( private http:Http){\n    this.baseUrl = environment.api_url;\n  }\n\n\n  // ADMIN SECTION\n  create_question(fields: object){\n    return this.http.post(this.baseUrl+\"/forum/post/create/\", fields)\n      .map( res=>{\n        return res.json();\n      });\n  }\n\n    get_posts(fields: object) {\n        return this.http.post(this.baseUrl+\"/forum/post/get/latest/\", fields)\n        .map( res=>{\n          return res.json();\n        });\n    }\n\n    get_post(post_id: string) {\n        return this.http.get(this.baseUrl+\"/forum/post/get/one/\"+post_id)\n        .map( res=>{\n          return res.json();\n        });\n    }\n\n\n    add_comment(fields: object) {\n        return this.http.post(this.baseUrl+\"/forum/post/add/comment/\", fields)\n        .map( res=>{\n          return res.json();\n        });\n    }\n\n    remove_post(_id: number) {\n        return this.http.get(this.baseUrl + \"/forum/post/remove/\" + _id)\n            .map(res => {\n                return res.json();\n            });\n    }\n\n    remove_comment(comment_id: any, post_id: any) {\n        return this.http.get(this.baseUrl + \"/forum/post/remove/comment?post_id=\" + post_id + '&comment_id=' + comment_id)\n            .map(res => {\n                return res.json();\n            });\n    }\n\n    update_post(data: any) {\n        return this.http.post(this.baseUrl+\"/forum/post/update/\", data)\n        .map( res=>{\n          return res.json();\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/discussion.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n// import {CookieService} from 'angular2-cookie/core';\nimport { Session } from './session.service'\n\nimport { environment } from '../environments/environment';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/delay';\n\nimport { Sha512 } from './encrypt'\n\n@Injectable()\nexport class AuthService {\n  credentials: any;\n  redirectUrl: string;\n  base_url: string;\n  private encript: any\n\n  constructor (private http:Http, private session:Session){\n    // this._cookieService.removeAll();\n    this.base_url = environment.api_url;\n    this.credentials = {\"online\": 0}\n    this.encript = new Sha512();\n  }\n\n  login(username: string, password: string) {\n    // const hash_user = sha256(username);\n    password = this.encript.SHA512(password).toString();\n    let _id = this.encript.SHA512(username).toString();\n\n    return this.http.post(this.base_url+'/auth/login/', {email:username, password:password, _id:_id})\n        .map(res => {\n            this.credentials = res.json();\n            console.log(this.credentials)\n            if(this.credentials['role'] !== 0){\n            this.session.putObject('online', this.credentials['role']);\n                this.session.putObject('user', this.credentials);\n                return this.credentials;\n            }else{\n                this.session.removeAll();\n                return this.credentials;\n            }\n      })\n  }\n\n  logout() {\n    this.session.removeAll();\n    this.credentials = []\n  }\n\n\n\n    signup(data: Object) {\n        let date = new Date();\n        let timestamp = date.getTime()\n\n        data['password'] = this.encript.SHA512(data['password']).toString();\n        data['_id'] = this.encript.SHA512(data['email']).toString();\n        data['date'] = date.toLocaleString();\n        data['timestamp'] = timestamp;\n\n        return this.http.post(this.base_url+'/auth/signup/', data)\n        .map(res => {\n            // this.credentials = res.json();\n            return res.json()\n            // console.log(this.credentials)\n            // if(this.credentials){\n            //     this.session.putObject('online', this.credentials['role']);\n            //     this.session.putObject('user', this.credentials);\n            // }else{\n            //     this.session.removeAll();\n            // }\n        })\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/auth.service.ts","declare var sha512: any;\ndeclare var require: any;\nvar _sha512 = require('crypto-js/sha512.js');\n\nexport class Sha512 {\n\t// _sha512: any;\n\n\tconstructor() {\n\t\t// this._sha512 = new sha512()\n\t}\n\n\tSHA512(message: string) {\n\t\treturn _sha512(message);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/encrypt.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/about/about.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { AdminService } from '../../services/admin.service';\nimport { DataService } from '../../services/data.service';\nimport { Session } from '../../services/session.service'\nimport { ComplexPieChart } from './visualize.class'\n\nimport {FormControl, Validators} from '@angular/forms';\n\nconst EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css'],\n  providers: [\n    ComplexPieChart,\n  ]\n})\nexport class AdminComponent implements OnInit {\n\n  private curatedARGs: Array<Object>;\n  private argClassChart: any;\n  private argGroupChart: any;\n  private argMechanismChart: any;\n  private wScore: any;\n  private weights: Array<number>;\n  private ARG: Object;\n  private ARGindex: any;\n    public online: boolean;\n    public scores: any;\n    public render: boolean;\n  private emailFormControl: any;\n  private passwordFormControl: any;\n  private databaseVersion: string;\n  private databaseComments: string;\n  private datetime = new Date(0);\n\n\n  constructor(\n    private adminService: AdminService,\n      private dataService: DataService,\n      private session: Session,\n  ) { }\n\n  ngOnInit() {\n      this.scores = []\n      this.render = false;\n      this.databaseVersion = '';\n      this.databaseComments = '';\n      this.ARGindex = 0;\n      this.getARG(this.ARGindex);\n\n  }\n\n    acceptAnnotation() {\n        console.log(this.ARG);\n        this.adminService.updateGene(this.ARG)\n        .subscribe( res => {\n            this.ARGindex += 1;\n            this.getARG(this.ARGindex);\n        })\n  }\n\n  updateConflictingARGs(){\n    this.adminService.updateConfilctingARGs()\n      .subscribe( res => {\n\n      })\n  }\n\n\n  upgradeDataBase(version: string, comments:string){\n    this.adminService.upgradeDatabase({version:version, comments: comments})\n      .subscribe( res => {\n        // console.log(res,'123456')\n        this.databaseVersion = null;\n        this.databaseComments = null;\n      });\n  }\n\n  getARG(idx: any){\n\n    this.adminService.getCuratedARGs(idx)\n    .subscribe(res => {\n        this.curatedARGs = res;\n        this.curatedARGs[0]['inspected'].forEach(e => {\n            let date = new Date(e.token);\n            e.date = date.toLocaleDateString('en-GB');\n        });\n\n        this.adminService.score_annotation(this.curatedARGs[0]['entry']['gene_id'])\n            .subscribe(response => {\n                this.scores = response;\n                this.ARG = {\n                    gene_id: this.curatedARGs[0]['entry']['gene_id'],\n                    type: this.scores[0]['scores'][0]['name'],\n                    subtype: this.scores[1]['scores'][0]['name'],\n                    mechanism: this.scores[2]['scores'][0]['name'],\n                    inspected: this.scores[0]['scores'][0]['counts'],\n                    score: [\n                        { kind: this.scores[0]['kind'], score: this.scores[0]['scores'][0]['score'], name: this.scores[0]['scores'][0]['name'] },\n                        { kind: this.scores[1]['kind'], score: this.scores[1]['scores'][0]['score'], name: this.scores[1]['scores'][0]['name'] },\n                        { kind: this.scores[2]['kind'], score: this.scores[2]['scores'][0]['score'], name: this.scores[2]['scores'][0]['name'] },\n                    ]\n                };\n                this.render = true;\n            })\n\n        this.ARGindex += 1;\n    });\n  }\n\n  search(keyword: string){\n      let indx = '0';\n      this.ARGindex = 0;\n\n    this.dataService.searchAPI(keyword, indx)\n      .subscribe(response =>{\n        console.log(response)\n          this.curatedARGs = [response];\n\n        this.curatedARGs[0]['inspected'].forEach(e => {\n            let date = new Date(e.token);\n            e.date = date.toLocaleDateString('en-GB');\n        });\n\n        this.adminService.score_annotation(this.curatedARGs[0]['entry']['gene_id'])\n            .subscribe(response => {\n                this.scores = response;\n                this.ARG = {\n                    gene_id: this.curatedARGs[0]['entry']['gene_id'],\n                    type: this.scores[0]['scores'][0]['name'],\n                    subtype: this.scores[1]['scores'][0]['name'],\n                    mechanism: this.scores[2]['scores'][0]['name'],\n                    inspected: this.scores[0]['scores'][0]['counts'],\n                    score: [\n                        { kind: this.scores[0]['kind'], score: this.scores[0]['scores'][0]['score'], name: this.scores[0]['scores'][0]['name'] },\n                        { kind: this.scores[1]['kind'], score: this.scores[1]['scores'][0]['score'], name: this.scores[1]['scores'][0]['name'] },\n                        { kind: this.scores[2]['kind'], score: this.scores[2]['scores'][0]['score'], name: this.scores[2]['scores'][0]['name'] },\n                    ]\n                };\n        })\n\n    });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/admin.component.ts","import { Component, OnInit } from '@angular/core';\n\n// services\nimport { DataService } from '../../../services/data.service';\n\n// components\nimport { ClassifyComponent } from '../classify.component';\n\n@Component({\n  selector: 'app-explore',\n  templateUrl: './explore.component.html',\n  styleUrls: ['./explore.component.css']\n})\nexport class ExploreComponent implements OnInit {\n\n  public randomARG: any;\n  public loading_search: boolean;\n  public search_keyword: string;\n  public search_general_result: any;\n  public selected_gene: any;\n  public search_on: boolean;\n  public search_index: number;\n  constructor(\n    private dataService: DataService,\n    public classifyComponent: ClassifyComponent,\n  ) { }\n\n  ngOnInit() {\n    this.loading_search = false;\n    this.search_keyword = '';\n    this.search_general_result = [];\n    this.selected_gene = [];\n    this.search_on = false;\n    this.search_index = 0;\n    // this.search(this.search_keyword);\n  }\n\n  search(argID: string) {\n      this.loading_search = true;\n      this.dataService.fast_search(argID, '0', 'overall')\n        .subscribe(response => {\n          // console.log(response);\n          this.search_general_result = response;\n          this.loading_search = false;\n          this.search_keyword = null;\n          this.search_on = true;\n          this.search_index = 0;\n      });\n\n  }\n\n  close_search() {\n    this.search_on = false;\n    // console.log(this.search_on);\n  }\n\n  explore_gene(data: any) {\n    this.selected_gene = data;\n    // console.log(this.selected_gene);\n    this.search_index = 0;\n    this.classifyComponent.search(this.selected_gene.sequences[this.search_index][0]);\n  }\n\n  explore_next() {\n    this.search_index = (this.search_index < this.selected_gene.sequences.length - 1) ? this.search_index += 1 : 0;\n    this.classifyComponent.search(this.selected_gene.sequences[this.search_index][0]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/explore/explore.component.ts","import { ExploreComponent } from './explore.component';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MdInputModule } from '@angular/material';\n\nimport { MaterialModule } from '@angular/material';\nimport { CompatibilityModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\n// primeng\nimport { PanelModule } from 'primeng/primeng';\nimport { AutoCompleteModule } from 'primeng/primeng';\nimport { StepsModule } from 'primeng/primeng';\nimport { GrowlModule } from 'primeng/primeng';\nimport { ProgressBarModule } from 'primeng/components/progressbar/progressbar';\nimport { DataTableModule } from 'primeng/components/datatable/datatable';\n\nimport { ConfirmDialogModule, ConfirmationService} from 'primeng/primeng';\nimport { DialogModule, ButtonModule, TabViewModule, CodeHighlighterModule } from 'primeng/primeng';\n\nimport { ExploreRoutingModule } from './explore-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ExploreRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MdInputModule,\n    BrowserModule,\n    CompatibilityModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    PanelModule,\n    AutoCompleteModule,\n    StepsModule,\n    ConfirmDialogModule,\n    DialogModule,\n    ButtonModule,\n    TabViewModule,\n    CodeHighlighterModule,\n    GrowlModule,\n    ProgressBarModule,\n    DataTableModule\n  ],\n  declarations: [\n    // ExploreComponent\n  ],\n  bootstrap: [\n    ExploreComponent\n  ],\n  providers: [\n    ConfirmationService\n  ],\n})\nexport class ExploreModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/explore/explore.module.ts","import { Component, OnInit } from '@angular/core';\nimport { Inject } from '@angular/core';\nimport {MdDialog, MdDialogRef, MD_DIALOG_DATA} from '@angular/material';\n\n// modal reference\nimport { ClassifyComponent } from '../classify.component'\n\n@Component({\n  selector: 'app-instructions',\n  templateUrl: './instructions.component.html',\n  styleUrls: ['./instructions.component.css']\n})\n\nexport class InstructionsComponent {\n\n  constructor(\n    public dialogRef: MdDialogRef<ClassifyComponent>,\n    @Inject(MD_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/instructions/instructions.component.ts","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-database',\n  templateUrl: './database.component.html',\n  styleUrls: ['./database.component.css']\n})\nexport class DatabaseComponent implements OnInit {\n  public databases: Object;\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n    ngOnInit() {\n        this.databases = [];\n    this.dataService.getDatabaseList()\n      .subscribe(response => {\n        this.databases = response;\n      })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/database/database.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { DiscussionService } from '../../../services/discussion.service'\nimport { Session } from '../../../services/session.service';\nimport { UserService } from '../../../services/user.service';\nimport { ConfirmationService } from 'primeng/primeng';\nimport {Observable} from 'rxjs';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\n\n@Component({\n  selector: 'app-all-questions',\n  templateUrl: './all-questions.component.html',\n  styleUrls: ['./all-questions.component.css']\n})\nexport class AllQuestionsComponent implements OnInit {\n    public masonryItems: any;\n    private _from: number;\n    private _to: number;\n    private selected_category: any;\n\n    constructor(\n        private router: Router,\n        private postService: DiscussionService,\n        private session: Session,\n        private confirmationService: ConfirmationService,\n        private userService: UserService,\n        private activatedRoute: ActivatedRoute\n    ) {\n  }\n\n    ngOnInit() {\n        this.selected_category = this.activatedRoute.snapshot.params.mode ? this.activatedRoute.snapshot.params.mode.split(','):'All';\n        this._from = 0;\n        this._to = 6;\n        this.masonryItems = [];\n        // get top 10 posts\n        this.get_top_n_posts()\n        TimeAgo.locale(en)\n\n        this.activatedRoute.params.subscribe(val => {\n            this._from = 0;\n            this._to = 6;\n            this.selected_category = this.activatedRoute.snapshot.params.mode ? this.activatedRoute.snapshot.params.mode.split(','):'All';\n            this.get_top_n_posts();\n        })\n\n    }\n\n    go_to_question(question: any) {\n        // console.log(question_id);\n        this.userService.count_view(question['user_id'], question['_id'])\n            .subscribe(e => {\n                this.router.navigate(['forum/selected_question', {id: question._id}])\n            })\n    }\n\n    follow_post(question: any) {\n        if (question.am_I_following === 'FOLLOW') {\n            question.am_I_following = 'UNFOLLOW';\n            this.userService.count_following(this.session.get('user')['_id'], question['_id'])\n                .subscribe(e => {})\n        } else {\n            question.am_I_following = 'FOLLOW';\n            this.userService.count_unfollowing(this.session.get('user')['_id'], question['_id'])\n                .subscribe(e => { })\n        }\n    }\n\n    edit_question(question_id: any) {\n        // console.log(question_id);\n        this.router.navigate(['forum/edit_question', {id: question_id}])\n    }\n\n    get_top_n_posts() {\n        this.postService.get_posts({_from: this._from, _to: this._to, category: this.selected_category})\n            .subscribe(e => {\n                this.masonryItems = e;\n                const timeAgo = new TimeAgo('en-US');\n                this.masonryItems.map((i, ix) => {\n                    i['index'] = ix\n                    i['time_ago'] = timeAgo.format(i['timestamp']);\n                    i['am_I_following'] = i['followers'].filter(e => e.status === true && e._id === this.session.get('user')['_id']).length > 0 ? 'UNFOLLOW' : 'FOLLOW';\n                    i['user_image'] = 'https://api.adorable.io/avatars/'+i['email'];\n                });\n            });\n    }\n\n    get_more_posts() {\n        this._from = this._to;\n        this._to = this._from + 5;\n\n        this.postService.get_posts({_from: this._from, _to: this._to, category: this.selected_category})\n            .subscribe(e => {\n\n                this.masonryItems = this.masonryItems.concat(e);\n                const timeAgo = new TimeAgo('en-US');\n                this.masonryItems.map((i, ix) => {\n                    i['index'] = ix\n                    i['time_ago'] = timeAgo.format(i['timestamp']);\n                    i['am_I_following'] = i['followers'].filter(e => e.status === true && e._id === this.session.get('user')['_id']).length > 0 ? 'UNFOLLOW' : 'FOLLOW';\n                    i['user_image'] = 'https://api.adorable.io/avatars/'+i['email'];\n                });\n\n\n                console.log(this.masonryItems)\n            });\n    }\n\n    remove_post(item_id: any, index: any) {\n\n        this.confirmationService.confirm({\n            message: 'Are you sure that you want to perform this action?',\n            accept: () => {\n                this.postService.remove_post(item_id)\n                    .subscribe(e => {\n                        console.log(item_id, index);\n                        this.masonryItems.splice(index, 1);\n                        this.masonryItems.map((i, ix) => {\n                            i['index'] = ix\n                        })\n                    });\n            }\n        });\n\n\n\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forum/all-questions/all-questions.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Session } from '../../../services/session.service';\nimport { DiscussionService } from '../../../services/discussion.service';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\nimport * as QuillNamespace from 'quill';\nlet Quill: any = QuillNamespace;\nimport ImageResize from 'quill-image-resize-module';\nQuill.register('modules/imageResize', ImageResize);\n\n@Component({\n  selector: 'app-edit-question',\n  templateUrl: './edit-question.component.html',\n  styleUrls: ['./edit-question.component.css']\n})\nexport class EditQuestionComponent implements OnInit {\n\n    private editor_modules: any;\n    private text: any;\n    private tags: any;\n    private post_id: any;\n    private post: any;\n    private title: string;\n\n    constructor(\n        private session: Session,\n        private postService: DiscussionService,\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n    ) {}\n\n    ngOnInit() {\n        this.text = '';\n        this.tags = [];\n        this.title = '';\n\n        this.editor_modules = {\n            toolbar: {\n              container: [\n                  [{ 'font': [] }],\n                  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n                  [{ 'align': [] }],\n                  [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                  ['bold', 'italic', 'underline', 'strike'],\n                  [{ 'script': 'sub'}, { 'script': 'super' }],\n                ['blockquote', 'code-block'],\n                [{ 'color': [] }, { 'background': [] }],\n                ['link', 'image', 'video']\n              ]\n            },\n            imageResize: true\n          };\n\n        this.post_id = this.activatedRoute.snapshot.params.id;\n        this.postService.get_post(this.post_id)\n            .subscribe(res => {\n                let regex = /<p><br><\\/p><p><br><\\/p>/gi;\n                this.post = res[0];\n                this.tags = this.post['tags'].map(e => e.name);\n                this.text = this.post['body'].replace(regex, ' ');\n                this.title = this.post['title'];\n            });\n\n    }\n\n    update_post(title: string) {\n        let regex = /<p><br><\\/p><p><br><\\/p>/gi;\n\n        let tags = this.tags.map((i, ix) => {\n            return { name: i, position: ix }\n        })\n\n        this.post['body'] = this.text.replace(regex, '');\n        this.post['tags'] = tags;\n        this.post['title'] = title;\n\n        this.postService.update_post(this.post)\n            .subscribe(e => {\n                // this.router.navigate(['forum']);\n                this.router.navigate(['forum/selected_question', { id: this.post['_id'] }]);\n            });\n\n\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forum/edit-question/edit-question.component.ts","import { Component, OnInit, Inject, ElementRef } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Session } from '../../services/session.service';\nimport { SelectItem } from 'primeng/primeng';\nimport { Router } from '@angular/router';\n\ninterface SelectOption {\n    label: string,\n    value: number,\n    url: string\n}\n\n\n@Component({\n\tselector: 'app-forum',\n\ttemplateUrl: './forum.component.html',\n\tstyleUrls: [ './forum.component.css' ]\n})\nexport class ForumComponent implements OnInit {\n    private navigation_options: SelectOption[];\n    private selected_option: any;\n    private twitter: string;\n    private keywords: any;\n    private hide_search: boolean;\n\n    constructor(\n        private session: Session,\n        private router: Router,\n        private elementRef: ElementRef\n    ) {}\n\n    ngOnInit() {\n        this.hide_search = false;\n        this.keywords = []\n        this.twitter = '';\n        this.selected_option = 0;\n        this.navigation_options = [\n            { label: 'All', value: 0, url: 'forum' },\n            { label: 'Posts', value: 1, url: 'forum' },\n            { label: 'Questions', value: 2, url: 'forum' },\n            { label: 'Tutorials', value: 3, url: 'forum' },\n            { label: 'Tools', value: 4, url: 'forum' },\n            { label: 'Issues', value: 5, url: 'forum' },\n            { label: 'Nomenclature', value: 6, url: 'forum' },\n        ];\n\n    }\n\n\n    go_to_blog_help() {\n        this.router.navigate(['forum/selected_question', { id: '1541191967102' }]);\n        this.hide_search = true;\n    }\n\n    go_to_option(selected_label:string) {\n        let selected = selected_label['label'] === 'All' ? []:selected_label['label'];\n        this.keywords = this.keywords.concat(selected);\n\n        this.router.navigate([selected_label['url'], { mode: this.keywords }]);\n\n    }\n\n    view_search_bar() {\n        this.hide_search = false;\n    }\n\n    open_instructions() {\n        this.router.navigate([\"/forum/selected_question\", {id:1541191047351}]);\n    }\n\n    search() {\n        let selected = this.navigation_options[this.selected_option]['label'] === 'All' ? []:this.navigation_options[this.selected_option]['label'];\n        let _mode = this.keywords.concat(selected);\n        this.router.navigate([this.navigation_options[this.selected_option]['url'], {mode: _mode} ]);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forum/forum.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Session } from '../../../services/session.service';\nimport { DiscussionService } from '../../../services/discussion.service';\nimport { UserService } from '../../../services/user.service';\n\nimport { Router } from '@angular/router'\n\nimport * as QuillNamespace from 'quill';\nlet Quill: any = QuillNamespace;\nimport ImageResize from 'quill-image-resize-module';\nQuill.register('modules/imageResize', ImageResize);\n\n@Component({\n\tselector: 'app-new-question',\n\ttemplateUrl: './new-question.component.html',\n\tstyleUrls: [ './new-question.component.css' ]\n})\nexport class NewQuestionComponent implements OnInit {\n\n    private text: any;\n    private tags: any;\n    private keywords: any;\n    private tag_position: any;\n    private editor_modules: any;\n    private categories: any;\n\n    constructor(\n        private session: Session,\n        private discussionService: DiscussionService,\n        private router: Router,\n        private userService: UserService\n    ) {}\n\n    ngOnInit() {\n        this.categories = [\n            { name: 'Posts', index: 0 },\n            { name: 'Questions', index: 1 },\n            { name: 'Tutorials', index: 2 },\n            { name: 'Tools', index: 3 },\n            { name: 'Issues', index: 4 },\n            { name: 'Nomenclature', index: 5 }\n        ]\n        this.keywords = [];\n        this.text = '';\n        this.tags = [];\n        this.tag_position = 0;\n        this.editor_modules = {\n            toolbar: {\n              container: [\n                  [{ 'font': [] }],\n                  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n                  [{ 'align': [] }],\n                  [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                  ['bold', 'italic', 'underline', 'strike'],\n                  [{ 'script': 'sub'}, { 'script': 'super' }],\n                ['blockquote', 'code-block'],\n                [{ 'color': [] }, { 'background': [] }],\n                ['link', 'image', 'video']\n              ]\n            },\n            imageResize: true\n          };\n    }\n\n    post_question(title: string) {\n        let date = new Date();\n        let user = this.session.get('user')\n\n        let tags = this.keywords.map((i, ix) => {\n            return {\n                name: i,\n                position: ix\n            }\n        })\n\n        let data = {\n            title: title,\n            tags: tags,\n            body: this.text,\n            date: date.toLocaleString(),\n            timestamp: date.getTime(),\n            _id: date.getTime(),\n            user: user['user'],\n            institution: user['institution'],\n            email: user['email'],\n            user_id: user['_id'],\n            comments_count: 0,\n            comments: [],\n            likes: 0,\n            views: 1,\n\n        }\n\n        this.discussionService.create_question(data)\n            .subscribe(e => {\n                this.userService.count_post(data['_id'], this.session.get('user')['_id'])\n                    .subscribe(e => {\n                        this.router.navigate(['/forum'])\n                    });\n        });\n\n        this.tag_position = 0;\n        this.tags = [];\n        // this.router.navigate(['/forum'])\n\n    }\n\n    add_category(key: any) {\n        this.keywords.push(key.name)\n        this.categories.splice(key.index, 1)\n        this.categories.map((i,ix) => {\n            i.index = ix;\n        })\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forum/new-question/new-question.component.ts","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport { DiscussionService } from '../../../services/discussion.service'\nimport { Session } from '../../../services/session.service';\nimport { UserService } from '../../../services/user.service';\n\nimport { Meta } from '@angular/platform-browser';\n\nimport * as QuillNamespace from 'quill';\nlet Quill: any = QuillNamespace;\nimport ImageResize from 'quill-image-resize-module';\nQuill.register('modules/imageResize', ImageResize);\n\n@Component({\n    selector: 'app-selected-question',\n    templateUrl: './selected-question.component.html',\n    styleUrls: ['./selected-question.component.css'],\n})\nexport class SelectedQuestionComponent implements OnInit {\n    private user_image: string;\n    private post_id: any;\n    private post: any;\n    private comment_body: any;\n    private editor_modules: any;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private postService: DiscussionService,\n        private session: Session,\n        private meta: Meta,\n        private userService: UserService\n    ) { }\n\n    ngOnInit() {\n        this.user_image = this.user_image = 'https://api.adorable.io/avatars/' + this.session.get('user')['email'];\n\n        // tags for sharing\n        this.meta.addTag({ name: 'twitter:card', content: 'summary' });\n        this.meta.addTag({ name: 'twitter:site', content: '@gaarangoa' });\n        this.meta.addTag({ name: 'twitter:title', content: 'Front-end Web Development, Chewed Up' });\n        this.meta.addTag({ name: 'twitter:description', content: 'Learn frontend web development...' });\n        this.meta.addTag({ name: 'twitter:image', content: 'https://farm6.staticflickr.com/5510/14338202952_93595258ff_z.jpg' });\n\n        // variables\n        this.post = [];\n        this.comment_body = '';\n\n        // Editor\n        this.editor_modules = {\n            toolbar: {\n              container: [\n                  [{ 'font': [] }],\n                  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n                  [{ 'align': [] }],\n                  [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                  ['bold', 'italic', 'underline', 'strike'],\n                  [{ 'script': 'sub'}, { 'script': 'super' }],\n                ['blockquote', 'code-block'],\n                [{ 'color': [] }, { 'background': [] }],\n                ['link', 'image', 'video']\n              ]\n            },\n            imageResize: true\n          };\n\n        // post\n        this.post_id = this.activatedRoute.snapshot.params.id;\n        this.postService.get_post(this.post_id)\n            .subscribe(res => {\n                console.log(res);\n                this.post = res[0];\n                this.post.comments.map((i, ix) => {\n                    i['index'] = ix;\n                });\n            });\n    }\n\n    add_comment() {\n        let date = new Date();\n        let user = this.session.get('user')\n        let comment = {\n            body: this.comment_body,\n            user: user['user'],\n            email: user['email'],\n            institution: user['institution'],\n            date: date.toLocaleString(),\n            timestamp: date.getTime(),\n            _id: date.getTime(),\n            post_id: this.post_id,\n            owner_email: this.post['email']\n        }\n\n        this.postService.add_comment(comment)\n            .subscribe(e => {\n                this.post['comments'].push(comment);\n                this.comment_body = '';\n                this.post.comments.map((i, ix) => {\n                    i['index'] = ix;\n                });\n\n                // add count to user comments\n                this.userService.count_comments(this.post['user_id'])\n                    .subscribe(e => { });\n            });\n    }\n\n    remove_comment(comment: any) {\n        let comment_id = comment['_id'];\n        let post_id = comment['post_id'];\n        let index = comment['index'];\n\n        // console.log(comment_id, post_id, index);\n\n        this.postService.remove_comment(comment_id, post_id)\n            .subscribe(e => {\n                this.post['comments'].splice(index, 1);\n                this.post.comments.map((i, ix) => {\n                    i['index'] = ix;\n                });\n\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forum/selected-question/selected-question.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    public info: any;\n    constructor() { }\n\n    ngOnInit() {\n        this.info = [\n            {\n                title: 'Crowdsourcing',\n                subtitle: 'ARGminer is open to the ARG community',\n                subsubtitle: 'Contribute to ARGminer is easy!',\n                image: 'assets/images/collaborate.svg',\n                description:'ARGminer is an effort to correct the annotation of ARGs from multiple databases into a common nomenclature by removing redundant information. It also brings the opportunity to experts to share their knowledge by inspecting and evaluating ARGs.'\n            },\n            {\n                title: 'Open Database',\n                subtitle: 'ARGminer is free',\n                subsubtitle: 'Contribute to ARGminer is easy!',\n                image: 'assets/images/open.svg',\n                description: 'ARGminer includes ARGs from multiple resources and provides information from each one of those resources. Thus, you can verify the authenticity of the annotations through the different resources. To date, ARGminer is the only platform that offers comparisons among different ARG resources.',\n                credit: \"<a href='https://www.freepik.com/free-vector/open-locker_2900481.htm'>Designed by Rawpixel.com</a>\"\n            },\n            {\n                title: 'Complementary information',\n                subtitle: 'ARGminer and Mobile Genetic Elements',\n                subsubtitle: 'Contribute to ARGminer is easy!',\n                image: 'assets/images/mobile.svg',\n                description: 'ARGminer also provides insights into mobile genetic elements by using the ACLAME database to identify ARGs with evidence of being carried by MGEs as well as a intesive search of ARGs in plasmids from the PATRIC database.',\n                credit:\"<a href='https://www.freepik.com/free-vector/biology-organisms_766984.htm'>Designed by Freepik</a>\"\n            },\n            {\n                title: 'Periodic Update',\n                subtitle: 'ARGminer is constantly updated',\n                subsubtitle: 'Contribute to ARGminer is easy!',\n                image: 'assets/images/update.svg',\n                description: 'As the collaborative nature of ARGminer, it is expected to update ARGminer periodically towards to build a solid and standarized product available for the ARG community.',\n                credit: \"<a href='https://www.freepik.com/free-vector/business-woman-character-improving_1105849.htm'>Designed by Freepik</a>\"\n            }\n        ]\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { AuthService } from '../../services/auth.service'\nimport { Router } from '@angular/router'\nimport { Message } from 'primeng/components/common/api';\n\nconst EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n\nexport class LoginComponent implements OnInit {\n\n    public notification: Message[];\n  private emailFormControl: any;\n  private passwordFormControl: any;\n  private databaseVersion: string;\n  private databaseComments: string;\n  private datetime = new Date(0);\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n  ) { }\n\n    ngOnInit() {\n        this.notification = []\n        this.emailFormControl = new FormControl('', [\n            Validators.required,\n            Validators.pattern(EMAIL_REGEX)]\n          );\n\n          this.passwordFormControl = new FormControl('', [\n            Validators.required]\n          );\n  }\n\n  login(email: string, password: string) {\n\n      this.authService.login(email, password)\n          .subscribe(res => {\n            this.notification = [];\n            if (res['status'] === 'logged') {\n                this.notification.push({severity:'success', summary:'Info', detail:res['message']});\n                this.router.navigate(['classify/'])\n            } else {\n                this.notification.push({severity:'error', summary:'Error', detail:res['message']});\n            }\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Session } from '../../services/session.service'\nimport { UserService } from '../../services/user.service';\nimport { Sha512 } from '../../services/encrypt';\n\ninterface credentials{\n    username: string,\n    password: string,\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n    private encrypt: any;\n    private pass: any;\n    private info: any;\n    private add_admin_email: any;\n    private new_admin_user: any;\n    private description: string;\n    private stats: any;\n\n    public user_image: string;\n\n    constructor(\n        private session: Session,\n        private userService: UserService\n    ) {}\n\n    ngOnInit() {\n        this.new_admin_user = false;\n        this.user_image = 'https://api.adorable.io/avatars/'+this.session.get('user')['email'];\n        this.pass = { pass1: '', pass2: '', pass3: '' }\n        this.info = { username: this.session.get('user')['username'], user: this.session.get('user')['user'], institution: this.session.get('user')['institution'], email: this.session.get('user')['email'] }\n        this.description = ''\n        this.encrypt = new Sha512();\n        this.add_admin_email = '';\n    }\n\n    change_info(key: string) {\n        console.log(key, this.info[key]);\n        this.userService.change_info(this.session.get('user')['_id'], key, this.info[key])\n            .subscribe(e => {\n                alert(e['message']);\n            })\n    }\n\n    change_password() {\n        let pass1 = this.encrypt.SHA512(this.pass.pass1).toString()\n        let pass2 = this.encrypt.SHA512(this.pass.pass2).toString()\n        let pass3 = this.encrypt.SHA512(this.pass.pass3).toString()\n        this.pass = { pass1: '', pass2: '', pass3: '' }\n\n        if (pass2 != pass3) {\n            alert(\"passwords don't match\")\n        } else {\n            this.userService.change_password({ _id: this.session.get('user')['_id'], pass1: pass1, pass2: pass2 })\n                .subscribe(e => {\n                    alert(e['message']);\n                })\n        }\n\n    }\n\n    search_user_by_email() {\n\n        this.userService.get_user_info(this.add_admin_email)\n            .subscribe(e => {\n                this.new_admin_user = e;\n            })\n    }\n\n    confirm_administrator(role: any) {\n        this.userService.change_info(this.new_admin_user._id, 'role', role)\n            .subscribe(e => {\n                this.new_admin_user = false;\n            })\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/profile/profile.component.ts","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { AuthService } from '../../services/auth.service'\nimport { Router } from '@angular/router'\n\nconst EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n    private emailFormControl: any;\n    private passwordFormControl: any;\n    private password2FormControl: any;\n    private nameFormControl: any;\n    private institutionFormControl: any;\n\n    private datetime = new Date(0);\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) { }\n\n      ngOnInit() {\n\n          this.emailFormControl = new FormControl('', [\n                Validators.required,\n                Validators.pattern(EMAIL_REGEX),\n                Validators.minLength(5)\n          ]\n            );\n\n            this.passwordFormControl = new FormControl('', [\n              Validators.required, Validators.minLength(8) ]\n            );\n\n            this.password2FormControl = new FormControl('', [\n                Validators.required, Validators.minLength(8) ]\n              );\n\n            this.institutionFormControl = new FormControl('', [\n                Validators.required, Validators.minLength(2) ]\n            );\n\n            this.nameFormControl = new FormControl('', [\n                Validators.required, Validators.minLength(2) ]\n              );\n    }\n\n    signup(email: string, user: string, institution: string, password: string, password2: string) {\n\n        if ( password !== password2 || !this.emailFormControl.valid || !this.institutionFormControl.valid || !this.nameFormControl.valid ) {\n            alert('Error: check the fields!')\n        } else {\n            this.authService.signup({ email: email, user: user, institution: institution, password2: password2, password: password })\n                .subscribe(res => {\n                    if (res['status'] === true) {\n                        this.router.navigate(['login/'])\n                    } else {\n                        alert('User exitsts!')\n                    }\n                });\n        }\n\n    }\n\n    match_password(pass1: string, pass2: string) {\n        return pass1 === pass2 ? true : false;\n    }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/signup/signup.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Location }   from '@angular/common';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\nimport { environment } from '../environments/environment';\n\n\n@Injectable()\nexport class AdminService {\n\n  baseUrl: string;\n\n  constructor ( private http:Http,\n                private location: Location\n              ){\n\n    this.baseUrl = environment.api_url;\n\n  }\n\n\n  // ADMIN SECTION\n\n  getCuratedARGs(ixg: any){\n    return this.http.get(this.baseUrl+\"/admin/inspect/arg/\"+ixg)\n      .map( res => {\n        return res.json();\n      });\n  }\n\n  search(keyword: any){\n    return this.http.get(this.baseUrl+\"/admin/inspect/token/\"+keyword)\n      .map( res => {\n        return res.json();\n      });\n  }\n\n  updateGene(fields: object){\n    return this.http.post(this.baseUrl+\"/admin/update/arg/\", fields)\n      .map( res=>{\n        return res.json();\n      });\n  }\n\n  updateConfilctingARGs(){\n    return this.http.get(this.baseUrl+\"/admin/update/conflict/arg/\")\n      .map( res => {\n        return res.json();\n      });\n  }\n\n  login(cred: any){\n    return this.http.post(this.baseUrl+\"/admin/login/\", cred)\n      .map( res => {\n          return res.json();\n      });\n  }\n\n  upgradeDatabase(cred: any){\n    return this.http.post(this.baseUrl+\"/admin/upgrade/database/\", cred)\n      .map( res => {\n          return res.json();\n      });\n  }\n\n    score_annotation(gene_id: any) {\n        return this.http.get(this.baseUrl + '/admin/score/' + gene_id)\n            .map(res => {\n                return res.json()\n            });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/admin.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\n\n\n@Injectable()\nexport class NcbiService {\n\n  reference: any;\n\n  constructor (private http:Http){\n\n  }\n\n  getPubMed(pubMedID: string) {\n    return this.http.get('https://www.ncbi.nlm.nih.gov/CBBresearch/Lu/Demo/RESTful/tmTool.cgi/BioConcept/'+pubMedID+'/JSON/')\n      .map(res => {\n        // this.reference = res.json()\n        // console.log(res.json())\n        try {\n          return res.json()\n        } catch (error) {\n          console.log(res)\n          return res.json()\n        }\n\n      })\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/ncbi.service.ts","module.exports = __webpack_public_path__ + \"admin.28560c65e88fe6a300fb.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/images/admin.svg\n// module id = 136\n// module chunks = 0","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 163;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 163\n// module chunks = 0","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","export class ComplexPieChart {\n    \n    greeting: string;\n    data: any;\n    colorScheme: any;\n    showLegend: boolean;\n    explodeSlices: boolean;\n    doughnut: boolean;\n    gradient: boolean;\n    showLabels: boolean;\n    ready: boolean;\n    dummy: any;\n    bestCategory: string;\n    mge: number;\n    pathogen: number;\n    bestCategoryCounts: any;\n    confidenc: any;\n    expertc: any;\n    totalCategoryCounts: number;\n\n    constructor(){\n        this.data = [];\n        this.totalCategoryCounts = 0;\n        this.bestCategoryCounts = 0;\n        this.confidenc = {};\n        this.expertc = {};\n        this.mge = 0;\n        this.pathogen = 0;\n        this.showLegend = false;\n        this.explodeSlices = false;\n        this.doughnut = false;\n        this.gradient = true;\n        this.showLabels = true;\n        this.bestCategory = \"---\";\n        this.bestCategoryCounts = 0;\n        this.colorScheme = {\n                domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n        };\n        this.ready = false;\n    }\n\n    draw(edata, key){\n\n        let counts = {};\n        // let mge = 0\n        edata.forEach(element => {\n            try {\n                element[key] = element[key].toLowerCase()\n            } catch (error) {\n                \n            }\n            \n            counts[element[key]] = counts[element[key]] ? counts[element[key]]+1: 1; \n            try {\n                this.confidenc[element[key]] = this.confidenc[element[key]] ? this.confidenc[element[key]]+element['rating']['confidence']['value']: element['rating']['confidence']['value']; \n            } catch (error) {\n                // element['rating']['confidence']['value'] = 0;\n            }\n            \n            try {\n                this.expertc[element[key]] = this.expertc[element[key]] ? this.expertc[element[key]]+element['rating']['expertise']['value']: element['rating']['expertise']['value']; \n            } catch (error) {\n                // element['rating']['expertise']['value'] = 0;\n            }\n            \n            try {\n                this.mge += element['rating']['mge']['value']\n            } catch (error) {\n                // element['rating']['mge']['value'] = 0;\n            }\n            \n            try {\n                this.pathogen += element['rating']['genome']['value']\n            } catch (error) {\n                // element['rating']['genome']['value'] = 0;\n            }\n            \n        });\n\n        // let data = [];\n        let CNTs = {};\n        for(var k in counts){ \n            this.data.push({name: k, value: counts[k], confidence:this.confidenc[k], expertice:this.expertc[k]});\n            CNTs[k] = this.confidenc[k]/edata.length + 1.2*this.expertc[k]/edata.length;\n        }\n\n        this.bestCategory = Object.keys(CNTs).reduce(function(a, b){ return CNTs[a] > CNTs[b] ? a : b });\n        this.bestCategoryCounts = counts[this.bestCategory];\n        this.totalCategoryCounts = edata.length;\n        this.ready = true;\n\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/visualize.class.ts","// import { ExploreComponent } from './classify/explore/explore.component';\nimport { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { ClassifyComponent } from './classify/classify.component';\nimport { HomeComponent } from './home/home.component';\nimport { DatabaseComponent } from './database/database.component';\nimport { AboutComponent } from './about/about.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { ForumComponent } from './forum/forum.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { NewQuestionComponent } from './forum/new-question/new-question.component';\nimport { AllQuestionsComponent } from './forum/all-questions/all-questions.component';\nimport { SelectedQuestionComponent } from './forum/selected-question/selected-question.component';\nimport { EditQuestionComponent } from './forum/edit-question/edit-question.component';\n\nexport const router: Routes = [\n\t{\n\t\tpath: '',\n\t\tchildren: [\n\t\t\t{ path: '', component: HomeComponent },\n\t\t\t{ path: 'classify', component: ClassifyComponent },\n\t\t\t{ path: 'home', component: HomeComponent },\n\t\t\t{ path: 'database', component: DatabaseComponent },\n\t\t\t{ path: 'about', component: AboutComponent },\n\t\t\t{ path: 'admin', component: AdminComponent },\n\t\t\t{ path: 'instructions', component: AboutComponent },\n\t\t\t{\n\t\t\t\tpath: 'forum',\n\t\t\t\tcomponent: ForumComponent,\n\t\t\t\tchildren: [\n\t\t\t\t\t{ path: '', component: AllQuestionsComponent },\n\t\t\t\t\t{ path: 'selected_question', component: SelectedQuestionComponent },\n\t\t\t\t\t{ path: 'new_question', component: NewQuestionComponent },\n\t\t\t\t\t{ path: 'edit_question', component: EditQuestionComponent }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ path: 'login', component: LoginComponent },\n\t\t\t{ path: 'signup', component: SignupComponent },\n\t\t\t{ path: 'profile', component: ProfileComponent }\n\t\t\t// { path: 'explore', component: ExploreComponent}\n\t\t]\n\t}\n];\n\nexport const AppRoutingModule: ModuleWithProviders = RouterModule.forRoot(router, { useHash: true });\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import { Component } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Session } from '../services/session.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n    private role: any;\n    constructor(\n        private session: Session,\n        private router: Router\n    ) { }\n\n    logout() {\n        this.session.removeAll()\n        this.router.navigate(['home/'])\n    }\n\n    open_instructions() {\n        this.router.navigate([\"/forum/selected_question\", {id:1541191047351}]);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { ExploreModule } from './classify/explore/explore.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterialModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MdInputModule } from '@angular/material';\nimport { MdCardModule } from '@angular/material';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n// import { HomeComponent } from './home/home.component';\n// import { DatabaseComponent } from './database/database.component';\nimport { AboutComponent } from './about/about.component';\n\n// APP modules\nimport { ClassifyModule } from './classify/classify.module';\nimport { HomeModule } from './home/home.module';\nimport { DatabaseModule } from './database/database.module';\n\n// import {NgCytoscapeModule} from \"ng2-cytoscape/dist\";\n\n// Visualization\n// import { NgxChartsModule } from '@swimlane/ngx-charts';\n// import { NgMasonryGridModule } from 'ng-masonry-grid';\n\n// Services\nimport { DataService } from '../services/data.service';\nimport { NcbiService } from '../services/ncbi.service';\nimport { AdminService } from '../services/admin.service';\nimport { AuthService } from '../services/auth.service';\nimport { Session } from '../services/session.service';\nimport { DiscussionService } from '../services/discussion.service';\nimport { CookieService } from 'angular2-cookie/core';\n\nimport 'hammerjs';\nimport { AdminComponent } from './admin/admin.component';\n// import { CommentsComponent } from './app/classify/comments/comments.component';\nimport { LoginComponent } from './login/login.component';\nimport { ForumComponent } from './forum/forum.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n// primeng\nimport { GrowlModule } from 'primeng/primeng';\nimport { EditorModule } from 'primeng/primeng';\n// import { NgxMasonryModule } from 'ngx-masonry';\nimport { ChipsModule } from 'primeng/primeng';\nimport { ListboxModule } from 'primeng/primeng';\nimport { ButtonModule } from 'primeng/primeng';\nimport { ConfirmDialogModule } from 'primeng/primeng';\nimport { ConfirmationService } from 'primeng/primeng';\nimport { PasswordModule } from 'primeng/primeng';\n\nimport { NewQuestionComponent } from './forum/new-question/new-question.component';\nimport { AllQuestionsComponent } from './forum/all-questions/all-questions.component';\nimport { SelectedQuestionComponent } from './forum/selected-question/selected-question.component';\nimport { EditQuestionComponent } from './forum/edit-question/edit-question.component';\n// import { QuillModule } from 'ngx-quill';\n\nimport { MasonryModule } from 'angular2-masonry';\nimport { QuillModule } from 'ngx-quill';\nimport { SearchComponent } from './forum/search/search.component';\nimport { StatsComponent } from './profile/stats/stats.component';\nimport { UserService } from 'services/user.service';\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tAboutComponent,\n\t\t// jqxChartComponent,\n\t\tAdminComponent,\n\t\t// CommentsComponent,\n\t\tLoginComponent,\n\t\tForumComponent,\n\t\tSignupComponent,\n\t\tProfileComponent,\n\t\tNewQuestionComponent,\n\t\tAllQuestionsComponent,\n\t\tSelectedQuestionComponent,\n\t\tEditQuestionComponent,\n\t\tSearchComponent,\n\t\tStatsComponent\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tHttpModule,\n\t\tClassifyModule,\n\t\tExploreModule,\n\t\tDatabaseModule,\n\t\tHomeModule,\n\t\tAppRoutingModule,\n\t\tBrowserAnimationsModule,\n\t\tNoopAnimationsModule,\n\t\tMaterialModule,\n\t\t// NgxChartsModule,\n\t\tReactiveFormsModule,\n\t\tMdInputModule,\n\t\tGrowlModule,\n\t\tEditorModule,\n\t\t// NgxMasonryModule,\n\t\tMdCardModule,\n\t\tChipsModule,\n\t\tListboxModule,\n\t\tButtonModule,\n\t\tConfirmDialogModule,\n\t\tMasonryModule,\n\t\tQuillModule,\n\t\tPasswordModule\n\n\t\t// NgMasonryGridModule\n\t\t// QuillModule\n\t\t// NgCytoscapeModule\n\t],\n\tproviders: [\n\t\tDataService,\n\t\tNcbiService,\n\t\tAdminService,\n\t\tAuthService,\n\t\tSession,\n\t\tCookieService,\n\t\tDiscussionService,\n\t\tConfirmationService,\n\t\tUserService\n\t],\n\tbootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\n\n@Component({\n  selector: 'besthit-metadata-ardb',\n  templateUrl: './ardb.component.html',\n  styleUrls: ['./ardb.component.css']\n})\nexport class BestHitArdbComponent implements OnInit {\n\n  public randomARG: any;\n  public alCoverage: number;\n  public render: boolean;\n\n  constructor(\n    private dataService: DataService,\n  ) {\n\n   }\n\n\n  ngOnInit() {\n    this.render = false;\n    this.randomARG = this.dataService.ARG;\n    this.alCoverage = 100 * this.randomARG['besthit']['alignments'][0]['algn_length'] / this.randomARG['entry']['length'].toFixed(0)\n    if(this.randomARG['besthit']){\n      this.render = true;\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/besthit/ardb/ardb.component.ts","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../../../services/data.service';\nimport { NULL_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'besthit-metadata-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\n\nexport class BestHitCardComponent implements OnInit {\n\n  public randomARG: Object;\n  public alCoverage: number;\n  public render: boolean;\n  public cars: any;\n  public color: string;\n  public predicted_nomenclature: Array<Object>;\n\n  constructor(\n    private dataService: DataService,\n  ) {}\n\n  get_subtype(element: any){\n    if(element.best_hit_database === 'ARDB' ){\n      return element.metadata.subtype;\n    }else{\n      return element.subtype;\n    }\n  }\n\n  get_best_hit_id(element: any){\n    if(element.best_hit_database === 'megares' ){\n      return element.best_hit.split('|')[1];\n    }else{\n      return element.best_hit;\n    }\n  }\n\n  get_coverage(element: any){\n      if (element.best_hit_database === 'ARDB') {\n          let coverage = (100 * element.algn_len / this.randomARG['entry'].length).toFixed(0);\n          return element.coverage <= 100 ? element.coverage : 100;\n      } else {\n          return element.coverage <= 100 ? element.coverage : 100;\n      }\n  }\n\n  get_bitscore_rate(element: any){\n    if(element.best_hit_database === 'CARD' ){\n      return (100*element.bitscore/element.optimum_bit_score).toFixed(0);\n    }else{\n      // return (100*element.bitscore/1000).toFixed(0);\n      return null;\n    }\n  }\n\n    get_antibiotic_class(element: any) {\n        if (element.best_hit_database === 'CARD') {\n\n            return element.metadata.filter(e => e.category_aro_class_name === \"Drug Class\").map(e => e.category_aro_name);\n\n\n        } else if (element.best_hit_database === 'ARDB') {\n            // return (100*element.bitscore/1000).toFixed(0);\n            return element.metadata.resistance_profile.map(e => e.type);\n        } else{\n            return [element.type];\n        }\n\n    }\n\n  get_nomenclature(keyword: string, _res: any) {\n    this.dataService.predict_nomenclature({ sentence:  keyword } )\n      .subscribe(res => {\n        _res = res;\n      });\n  }\n\n  ngOnInit() {\n    this.color = 'rgb(255,0,0)';\n    this.randomARG = this.dataService.ARG;\n    this.render = false;\n    this.cars = [];\n      this.predicted_nomenclature = [\n          {nomenclature: '', probability: 0}\n    ];\n    // this.alCoverage = 100*this.randomARG['besthit']['alignments'][0]['algn_len'] / this.randomARG['entry']['length'].toFixed(0)\n    // console.log(this.alCoverage)\n    if(this.randomARG['besthit']){\n    // traverse the alignments and create the table\n    let _max_bitscore = this.randomARG['besthit']['alignments'].map(e => {\n        return e.bitscore;\n    });\n\n    _max_bitscore = Math.max(..._max_bitscore);\n\n    this.randomARG['besthit']['alignments'].forEach(element => {\n        this.cars.push({\n            database: element.best_hit_database,\n            gene_name: this.get_subtype(element),\n            best_hit_id: this.get_best_hit_id(element),\n            similarity: element.identity.toFixed(2),\n            coverage: this.get_coverage(element),\n            bitscore_rate: 'rgba(' + (255 * element.bitscore / _max_bitscore).toFixed(0) + ',0,0,'+ element.bitscore / _max_bitscore +')' ,\n            bitscore: element.bitscore.toFixed(1),\n            antibiotic: this.get_antibiotic_class(element),\n        });\n    });\n\n    const _sentence = this.cars.map(e => {\n        return (e.bitscore > 50) ? e.gene_name + ' ' + e.antibiotic.join(' ') : '';\n    }\n    ).join(' ');\n\n        console.log(this.cars)\n\n    // this.get_nomenclature(_sentence, this.predicted_nomenclature);\n    this.dataService.predict_nomenclature({ sentence:  _sentence } )\n    .subscribe(res => {\n        this.predicted_nomenclature = res;\n    });\n    this.render = true;\n    }\n\n}\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/besthit/card/card.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\n\n\n@Component({\n  selector: 'app-generic',\n  templateUrl: './generic.component.html',\n  styleUrls: ['./generic.component.css']\n})\nexport class GenericComponent implements OnInit {\n\n  public randomARG: Object;\n  public alCoverage: number;\n  public render: boolean;\n\n  constructor(\n    private dataService: DataService,\n  ) { }\n\n  ngOnInit() {\n    this.render = false;\n    this.randomARG = this.dataService.ARG;\n    this.alCoverage = 100 * this.randomARG['besthit']['alignments'][0]['algn_length'] / this.randomARG['entry']['length'];\n    if(this.randomARG['besthit']) {\n      this.render = true;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/besthit/generic/generic.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClassifyComponent } from './classify.component';\n\nconst routes: Routes = [\n  { path:'', component: ClassifyComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClassifyRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/classify-routing.module.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MdInputModule } from '@angular/material';\n\nimport { MaterialModule } from '@angular/material';\nimport { CompatibilityModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\n// Visualization\n// import { NgxChartsModule} from '@swimlane/ngx-charts';\nimport { StarRatingModule } from 'angular-star-rating';\n\n// primeng\nimport { PanelModule } from 'primeng/primeng';\nimport { AutoCompleteModule } from 'primeng/primeng';\nimport { StepsModule } from 'primeng/primeng';\nimport { GrowlModule } from 'primeng/primeng';\nimport {ProgressBarModule} from 'primeng/components/progressbar/progressbar';\nimport {DataTableModule} from 'primeng/components/datatable/datatable';\nimport {AccordionModule} from 'primeng/components/accordion/accordion';\n\nimport { ClassifyComponent } from './classify.component';\nimport { ClassifyRoutingModule } from './classify-routing.module';\n\n// Metadata\nimport { UniprotComponent } from './metadata/uniprot/uniprot.component';\nimport { CardComponent } from './metadata/card/card.component';\nimport { ArdbComponent } from './metadata/ardb/ardb.component';\n\n// BestHit\nimport { BestHitCardComponent } from './besthit/card/card.component';\nimport { BestHitArdbComponent } from './besthit/ardb/ardb.component';\n\n// Genomes and MGE\nimport { GenomeComponent } from './genomes/genome.component';\n// import { GenomeModule } from './genomes/genome.module';\n\n// Curate\nimport { CurateComponent } from './curate/curate.component';\n\nimport { ConfirmDialogModule, ConfirmationService} from 'primeng/primeng';\nimport { DialogModule, ButtonModule, TabViewModule, CodeHighlighterModule } from 'primeng/primeng';\nimport { GenericComponent } from './besthit/generic/generic.component';\nimport { InstructionsComponent } from './instructions/instructions.component';\nimport { ExploreComponent } from './explore/explore.component'\n\n// tour walkthroug\n// import { HintModule } from 'angular-custom-tour';\nimport { ExploreModule } from './explore/explore.module';\nimport { CommentsComponent } from './comments/comments.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MdInputModule,\n    BrowserModule,\n    CompatibilityModule,\n\n    ClassifyRoutingModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    // NoopAnimationsModule,\n\n    // NgxChartsModule,\n    PanelModule,\n    AutoCompleteModule,\n    StepsModule,\n    StarRatingModule.forRoot(),\n    ConfirmDialogModule,\n    DialogModule,\n    ButtonModule,\n    TabViewModule,\n    CodeHighlighterModule,\n    GrowlModule,\n    ProgressBarModule,\n    DataTableModule,\n    AccordionModule,\n    ExploreModule\n    // HintModule,\n    // GenomeModule\n  ],\n  schemas: [\n    // CUSTOM_ELEMENTS_SCHEMA,\n  ],\n  declarations: [\n    ClassifyComponent,\n    UniprotComponent,\n    CardComponent,\n    ArdbComponent,\n    BestHitArdbComponent,\n    BestHitCardComponent,\n    GenomeComponent,\n    CurateComponent,\n    GenericComponent,\n    ExploreComponent,\n    InstructionsComponent,\n    CommentsComponent,\n  ],\n  providers: [\n    ConfirmationService\n  ],\n  bootstrap: [\n    ClassifyComponent\n  ],\n  entryComponents: [\n    InstructionsComponent\n  ]\n})\nexport class ClassifyModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/classify.module.ts","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../../services/data.service';\nimport { Session } from '../../../services/session.service'\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent implements OnInit {\n\n    public messages: any;\n    public date: any;\n    constructor(\n        private dataService: DataService,\n        private session: Session\n  ) { }\n\n    ngOnInit() {\n        this.date = new Date();\n        let timestamp = this.date.getTime()\n        this.messages = [\n            {\n                user: 'ARGminer Admin',\n                institution:'Virginia Tech',\n                date: this.date.toLocaleString(),\n                timestamp: timestamp,\n                message: 'Welcome to ARGminer, if you have any comment regarding the ARG, or want to start a discussion, just leave a message in the box below. Thanks!',\n                image: 'assets/images/admin.svg',\n                credit: \"<a href='https://www.freepik.com/free-vector/programmers-concept-with-flat-design_2546443.htm'>Designed by Freepik</a>\"\n            }\n        ]\n    }\n\n\n    send_message(event) {\n        if (event.key === \"Enter\") {\n            this.date = new Date();\n            this.messages.push({\n                user: this.session.get('online')>=1 ? this.session.get('user')['user']: 'unregistered user',\n                institution: this.session.get('online')>=1 ? this.session.get('user')['institution']:'unknown',\n                message: event.target.value,\n                image: 'assets/images/user1.svg',\n                date: this.date.toLocaleString(),\n                timestamp: this.date.getTime()\n            });\n\n            // clean form\n            event.target.value = '';\n\n          }\n    }\n\n    send_message_click(event) {\n\n        this.date = new Date();\n        this.messages.push({\n            user: this.session.get('online')>=1 ? this.session.get('user')['user']: 'unregistered user',\n            institution: this.session.get('online')>=1 ? this.session.get('user')['institution']:'unknown',\n            message: event.value,\n            image: 'assets/images/user1.svg',\n            date: this.date.toLocaleString(),\n            timestamp: this.date.getTime()\n        });\n\n        // clean form\n        event.value = '';\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/comments/comments.component.ts","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable'\n\nimport { DataService } from '../../../services/data.service';\nimport { Session } from '../../../services/session.service';\n\nimport {MenuItem} from 'primeng/primeng';\n\nimport {IStarRatingOnClickEvent, IStarRatingOnRatingChangeEven, IStarRatingIOnHoverRatingChangeEvent} from \"angular-star-rating\";\n\nimport { ClassifyComponent } from '../classify.component'\n\nimport {ConfirmationService} from 'primeng/primeng';\n\nimport { Message } from 'primeng/components/common/api';\n\nimport { ScoreAnnotation } from './score.class'\n\n@Component({\n  selector: 'app-curate',\n  templateUrl: './curate.component.html',\n  styleUrls: ['./curate.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    ScoreAnnotation\n  ]\n\n})\nexport class CurateComponent implements OnInit {\n\n  public step1: boolean;\n  public step2: boolean;\n  public step3: boolean;\n  public step4: boolean;\n  public display: boolean = false;\n  public overlay: Object;\n  public inspectedGenes: Array<String>;\n\n  public activeIndex: number = 0;\n\n  onRatingChangeResult:IStarRatingOnRatingChangeEven;\n\n  public options_type = [];\n  public group_options = [];\n  public mge_options = [\"Plasmid\",\"Virus\",\"Prophage\"];\n\n  public items: MenuItem[];\n\n  private randomARG: Object;\n  private antibiotic: Object;\n\n  public notification: Message[] = [];\n\n  public liveScore: any;\n  public liveScoreAnnotation: any;\n\n  myControl = new FormControl();\n  groupControl = new FormControl();\n  mgeControl = new FormControl();\n\n  filteredOptions: Observable<string[]>;\n  groupFilteredOptions: Observable<string[]>;\n  mgeFilteredOptions: Observable<string[]>;\n\n  constructor(\n    private dataService: DataService,\n    public classifyComponent: ClassifyComponent,\n      private confirmationService: ConfirmationService,\n    private session: Session\n  ) {\n\n  }\n\n  ngOnInit() {\n\n    this.inspectedGenes = [];\n    this.overlay = {\n      title:\"none\",\n      content:\"none\"\n    }\n    this.step1 = true;\n\n    // menu\n    this.items = [\n            {label: ''},\n            {label: ''},\n            {label: ''}\n        ];\n\n    // Get ARG data\n    this.randomARG = this.dataService.ARG;\n    this.liveScore = new ScoreAnnotation();\n\n    this.liveScoreAnnotation = {class: 0, group: 0, mechanism: 0};\n\n\n    this.antibiotic = {\n      class:null,\n      group:null,\n      mechanism:null,\n      onlineScore:{class:0, group:0, mechanism:0},\n      MGE:{},\n      comments:\"\",\n      rating:{},\n      gene_id: \"\",\n      token: \"------------\"\n    }\n\n\n    // Get the list of antibiotic types in the database\n    this.dataService.getListAntibioticClass()\n      .subscribe(\n        response =>{\n          for (let type of this.dataService.ATYPE){\n            this.options_type.push(type['type'])\n          }\n\n          // console.log(this.options)\n          this.filteredOptions = this.myControl.valueChanges\n            .startWith(null)\n            .map(val => val ? this.filter(val, this.options_type) : this.options_type.slice());\n\n        }\n      )\n\n    // Get list of antibiotic subtypes\n    this.dataService.getListAntibioticClass()\n      .subscribe(\n        response =>{\n          for (let type of this.dataService.ATYPE){\n            // this.group_options.push(type['subtype'])\n          }\n\n          // console.log(this.options)\n          this.groupFilteredOptions = this.groupControl.valueChanges\n            .startWith(null)\n            .map(val => val ? this.filter(val, this.group_options) : this.group_options.slice());\n\n        }\n      )\n\n    }\n\n  // Filter once typing the type of antibiotic\n  filter(val: string, Marray: any): string[] {\n    return Marray.filter(option => new RegExp(`${val}`, 'gi').test(option));\n  }\n\n  // setup the options under mobile genetic elements\n  mgeOptions(label: any, event: any){\n      this.antibiotic['MGE'][label] =\n        {\n          name:label,\n          value:event.checked\n        }\n  };\n\n  // keep track of the ratings bars\n  onRatingChange = (label:any, $event:IStarRatingOnRatingChangeEven) => {\n        // console.log(label, $event);\n        this.antibiotic['rating'][label] =\n          {\n            name:label,\n            value:$event['rating']\n          };\n  };\n\n\n\n  showDialog() {\n      this.display = true;\n  }\n\n\n  // to keep track of the changes between the steps\n  validate(value: any){\n    this.classifyComponent.scrollToMGEs();\n\n    if(value == 1){\n\n\n      this.liveScoreAnnotation = this.liveScore.score(this.classifyComponent.randomARG , this.antibiotic)\n      console.log(this.liveScoreAnnotation);\n\n      if(this.antibiotic['class']==null || this.antibiotic['group']==null || this.antibiotic['mechanism']==null){\n        this.classifyComponent.notification.push({severity:'error', summary:'Score', detail:'Your score is: 0 out of 100'});\n\n      }else if(this.liveScoreAnnotation.class < 50 || this.liveScoreAnnotation.group < 50 || this.liveScoreAnnotation.mechanism < 50){\n\n        let points = (this.liveScoreAnnotation.class + this.liveScoreAnnotation.group + this.liveScoreAnnotation.mechanism)/3;\n        this.classifyComponent.notification.push({severity:'error', summary:'Error', detail:'Your score is: '+points.toFixed(0)+' out of 100 <hr>Class Score: '+this.liveScoreAnnotation.class.toFixed(1) + '<br>Gene Name Score: ' + this.liveScoreAnnotation.group.toFixed(1) + '<br>Mechanism Score: ' + this.liveScoreAnnotation.mechanism.toFixed(1) });\n\n      }else{\n        this.classifyComponent.notification = [];\n        let points = (this.liveScoreAnnotation.class + this.liveScoreAnnotation.group + this.liveScoreAnnotation.mechanism)/3;\n        this.classifyComponent.notification.push({severity:'success', summary:'Success', detail:'Your score is: '+points.toFixed(0)+' out of 100 <hr>Class Score: '+this.liveScoreAnnotation.class.toFixed(1) + '<br>Gene Name Score: ' + this.liveScoreAnnotation.group.toFixed(1) + '<br>Mechanism Score: ' + this.liveScoreAnnotation.mechanism.toFixed(1) });\n\n        this.antibiotic['onlineScore'] = this.liveScoreAnnotation\n\n        this.classifyComponent.ARG_display = false;\n        this.classifyComponent.MGE_display = true;\n\n        console.log(this.classifyComponent.ARG_display, this.classifyComponent.MGE_display)\n\n        this.activeIndex = 1;\n        this.step1=false;\n        this.step2=true;\n      }\n\n\n    }else if(value ==2){\n\n\n      console.log(this.classifyComponent.ARG_display, this.classifyComponent.MGE_display)\n\n      this.step2 = false;\n      this.step3 = true;\n      this.activeIndex = 2;\n\n\n    }else if(value == 3){\n      this.classifyComponent.ARG_display = true;\n      this.classifyComponent.MGE_display = false;\n      this.step3 = false;\n      this.step1 = true;\n      this.activeIndex = 0;\n\n    }\n\n  }\n\n  submitReview(){\n    // console.log(this.antibiotic)\n    this.classifyComponent.ARG_display = true;\n      this.classifyComponent.MGE_display = false;\n    // show the overlay with the score\n    // this.showDialog()\n    this.antibiotic['token'] = Date.now();\n    this.dataService.insertCuration(this.antibiotic, this.session.get('user')['_id'])\n      .subscribe(\n        response =>{\n          // console.log(response)\n          // restart the form values to empty.\n          this.inspectedGenes.push(this.classifyComponent.randomARG['entry']['gene_id']);\n            this.continueReview();\n            // update the views and add the entry to the user\n\n          // alert(\"token: \"+this.antibiotic['token']);\n        }\n      )\n\n  }\n\ncontinueReview(){\n  // Restart and get a new gene\n  this.activeIndex = 0;\n  this.step1 = true;\n  this.step3 = false;\n\n  this.classifyComponent.randomARG['entry']['database'] = '-------------';\n  this.classifyComponent.randomARG['entry']['gene_id'] = '-----------';\n  this.classifyComponent.randomARG['entry']['subtype'] = '-----------';\n  this.classifyComponent.randomARG['entry']['type'] = '--------------';\n  this.classifyComponent.randomARG['entry']['inspected'] = '-----';\n  this.classifyComponent.randomARG['entry']['score'] = '----';\n\n  this.classifyComponent.loading = true;\n\n  this.antibiotic['class'] = null;\n  this.antibiotic['group'] = null;\n  this.antibiotic['mechanism'] = null;\n  this.antibiotic['onlineScore'] = {class:0, group:0, mechanism:0}\n\n  if(this.classifyComponent.conflictedArgSubtypeFlag){\n    this.classifyComponent.nextGeneConflictList();\n  }else if(this.classifyComponent.trainingARGFlag){\n    this.classifyComponent.trainingARGNextGene()\n  }else{\n   this.classifyComponent.nextGene();\n  }\n\n\n  this.display = false;\n\n}\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/curate/curate.component.ts","\nimport intersectBig from 'intersect/index.js';\n// import removeStopwords from 'stopword/lib/stopword.js'\n\nexport class ScoreAnnotation {\n\n    public texts: String = '';\n\n\n    constructor(){\n\n    }\n\n    getAllSubstrings(str, size) {\n        var i, j, result = [];\n\n        for (i = 0; i < str.length-size+1; i++) {\n\n            result.push(str.slice(i, i+size));\n\n        }\n        return result;\n      }\n\n    score(ARG: object, VAL: object){\n\n        this.texts = JSON.stringify(ARG['metadata']);\n\n        ARG['besthit'].alignments.forEach(element => {\n            if(element){\n                this.texts += JSON.stringify(element);\n            }\n        });\n\n        let unique = this.texts.replace(/\\W|\\_/g,\" \").toUpperCase().match(/.{1,3}/g).filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n        // let unique2 = this.texts.replace(/\\W|\\_/g,\" \").toUpperCase().match(/.{1,4}/g).filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n        let unique2 = this.getAllSubstrings(this.texts.replace(/\\W/g,\" \").toUpperCase(), 4).filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n\n\n\n        let ggroup = this.getAllSubstrings(JSON.stringify([VAL['group']]).replace(/\\W|\\_|null/g,\"\").toUpperCase(), 3).filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n        let gclass = this.getAllSubstrings(JSON.stringify([VAL['class']]).replace(/\\W|\\_|null/g,\"\").toUpperCase(),4).filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n        let gmech = this.getAllSubstrings(JSON.stringify([VAL['mechanism']]).replace(/\\W|\\_|null/g,\"\").toUpperCase(), 4).filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n\n\n        // console.log(gclass);\n\n\n        let iclass = intersectBig(unique2,gclass);\n        let igroup = intersectBig(unique,ggroup);\n        let imech = intersectBig(unique2,gmech);\n\n        // console.log(ggroup, gclass, gmech);\n        // console.log(iclass, igroup, imech);\n\n        if(gclass.length==0){gclass=[1]}\n        if(ggroup.length==0){ggroup=[1]}\n        if(gmech.length==0){gmech=[1]}\n\n        return {\n            class: 100*iclass.length/gclass.length,\n            group: 100*igroup.length/ggroup.length,\n            mechanism: 100*imech.length/gmech.length,\n        }\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/curate/score.class.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ExploreRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/explore/explore-routing.module.ts","export class PieChart {\n    greeting: string;\n    data: any;\n    colorScheme: any;\n    showLegend: boolean;\n    explodeSlices: boolean;\n    doughnut: boolean;\n    gradient: boolean;\n    showLabels: boolean;\n    ready: boolean;\n    dummy: any;\n\n    constructor(){\n        this.showLegend = false;\n        this.explodeSlices = false;\n        this.doughnut = false;\n        this.gradient = true;\n        this.showLabels = true;\n        this.colorScheme = {\n                domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n        };\n        this.ready = false;\n    }\n\n    draw(edata){\n\n        try{\n            if (edata.length>=1){\n                this.data = edata.sort((a, b) => b.value - a.value).slice(0, 3);\n                this.ready = true;\n            }else{\n                this.ready = false;\n            }\n        }catch(Error){\n            this.ready = false;\n        }\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/genomes/Charts.ts","import { Component, OnInit, Input } from '@angular/core';\nimport { DataService } from '../../../services/data.service';\n\n\nimport {PieChart} from './Charts';\n\n\n@Component({\n  selector: 'genome-metadata',\n  templateUrl: './genome.component.html',\n  styleUrls: ['./genome.component.css'],\n  providers: [PieChart]\n})\n\n\nexport class GenomeComponent implements OnInit {\n\n  @Input() gene_id: string;\n\n  public randomARG: Object;\n  private disease: any;\n  private AMR_phenotype: any;\n  private host: any;\n  public genomeCount: number;\n  public renderMobile: boolean;\n  public renderPathogen: boolean;\n  public plasmid: any;\n\n  constructor(\n    private dataService: DataService,\n    private pieChart: PieChart\n  ) {\n\n   }\n\n  ngOnInit() {\n    this.genomeCount = 0;\n    this.renderMobile = false;\n    this.renderPathogen = false;\n    this.randomARG = this.dataService.ARG;\n    this.disease = new PieChart();\n    this.plasmid = [];\n\n    this.disease.draw(this.randomARG['pathogen']['disease']);\n    this.AMR_phenotype = new PieChart();\n    this.AMR_phenotype.draw(this.randomARG['pathogen']['phenotype']);\n\n    this.host = new PieChart();\n    this.host.draw(this.randomARG['pathogen']['host']);\n\n    this.conditions()\n    this.render_plasmids()\n\n\n\n  }\n\n  onSelect(event) {\n    console.log(event);\n  }\n\n  render_plasmids() {\n    this.dataService.get_plasmid({ gene_id: this.randomARG['entry'].gene_id })\n      .subscribe(res => {\n        this.plasmid = res;\n      });\n  }\n\n  conditions() {\n    try {\n      this.genomeCount = 100*this.randomARG['pathogen'].genomes_pathogen/this.randomARG['pathogen'].genomes_count.toFixed(0)\n    } catch (error) {\n      this.genomeCount = 0;\n    }\n\n    if(this.randomARG['mobile'][0].status === true){\n      this.renderMobile = true;\n    }\n\n    if(this.randomARG['pathogen'].status === true){\n      this.renderPathogen = true;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/genomes/genome.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\n\n@Component({\n  selector: 'classify-metadata-ardb',\n  templateUrl: './ardb.component.html',\n  styleUrls: ['./ardb.component.css']\n})\nexport class ArdbComponent implements OnInit {\n\n  public randomARG: Object;\n  public render: boolean = false;\n\n  constructor(\n    private dataService: DataService,\n  ) {\n    \n   }\n\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n    if(this.randomARG['metadata'].status==true){ \n      this.render = true;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/metadata/ardb/ardb.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\n\n@Component({\n  selector: 'classify-metadata-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  public randomARG: Object;\n  public render: boolean = false;\n\n  constructor(\n    private dataService: DataService,\n  ) {\n    \n   }\n\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n    if(this.randomARG['metadata'].status==true){ \n      this.render = true;\n    }\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/metadata/card/card.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\nimport { NcbiService } from '../../../../services/ncbi.service';\n\n\n@Component({\n  selector: 'classify-metadata-uniprot',\n  templateUrl: './uniprot.component.html',\n  styleUrls: ['./uniprot.component.css']\n})\nexport class UniprotComponent implements OnInit {\n\n  public randomARG: Object;\n  public pubmed = [];\n  public render: boolean = false;\n  public renderError: boolean = false;\n\n  constructor(\n    private dataService: DataService,\n    private ncbiService: NcbiService,\n  ) {\n\n   }\n\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n\n    // GET all reference ids from pubmed:\n    if(this.randomARG['metadata'].status==false){\n      this.renderError = true;\n    }\n    if(this.randomARG['metadata'].status==true){\n      this.render = true;\n      this.randomARG['metadata'].references.forEach(element => {\n        if(element.citation.dbReferences){\n          element.citation.dbReferences.forEach(citation => {\n            if(citation.type == \"PubMed\"){\n              this.ncbiService.getPubMed(citation.id)\n                .subscribe( response=>{\n\n                  let str = response.text;\n                  let lstr = [];\n                    let inpos = 0;\n                    let denotations = []\n                    try {\n                        let denotations = response.denotations.sort((a, b) => b.span.begin - a.span.begin).reverse();\n                    } catch(err) {\n                        denotations = [];\n                    }\n                  // let denotations = response.denotations\n\n                  for(let pos of denotations){\n                    lstr.push({\"text\":str.substring(inpos, pos.span.begin), \"type\":\"paragraph\" })\n                    lstr.push({\"text\":str.substring(pos.span.begin, pos.span.end), \"type\":\"keyword\"})\n                    inpos = pos.span.end\n                  }\n                  lstr.push( str.substring( inpos, str.length ) )\n                  // console.log(denotations)\n                  citation['abstract'] = lstr\n\n                  }\n                )\n            }\n          });\n        }\n\n      });\n    }\n    // console.log(this.randomARG)\n\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/metadata/uniprot/uniprot.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DatabaseRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/database/database-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DatabaseRoutingModule } from './database-routing.module';\nimport { DatabaseComponent } from './database.component';\nimport { MdCardModule } from '@angular/material';\n\n@NgModule({\n\timports: [ CommonModule, DatabaseRoutingModule, MdCardModule ],\n\tdeclarations: [ DatabaseComponent ],\n\tbootstrap: [ DatabaseComponent ]\n})\nexport class DatabaseModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/database/database.module.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forum/search/search.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\n\nimport { HomeComponent } from './home.component';\nimport { NewsComponent } from './news/news.component';\n// import { DatabaseComponent } from '../database/database.component';\n\n@NgModule({\n\timports: [ CommonModule, HomeRoutingModule ],\n\tdeclarations: [ HomeComponent, NewsComponent ]\n})\nexport class HomeModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.module.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/news/news.component.ts","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../services/user.service';\nimport { Session } from '../../../services/session.service';\n\ninterface Stats {\n    score: number,\n    posts: number,\n    inspections: number,\n    views: number,\n    comments: number,\n    followers: number\n}\n\n@Component({\n\tselector: 'app-profile-stats',\n\ttemplateUrl: './stats.component.html',\n\tstyleUrls: [ './stats.component.css' ]\n})\nexport class StatsComponent implements OnInit {\n    private stats: Stats;\n    constructor(\n        private userService: UserService,\n        private session: Session\n    ) {}\n\n    ngOnInit() {\n        this.stats = {\n            score: 0,\n            posts: 0,\n            inspections: 0,\n            views: 0,\n            comments: 0,\n            followers: 0\n        }\n        console.log(this.session.get('user')['_id'])\n        this.userService.stats(this.session.get('user')['_id'])\n            .subscribe(e => {\n                this.stats = {\n                    score: e['posts'].length+e['inspections'].length+0.5*e['views']+e['comments']+e['followers'].length,\n                    posts: e['posts'].length,\n                    inspections: e['inspections'].length,\n                    views: e['views'],\n                    comments: e['comments'],\n                    followers: e['followers'].length\n                }\n            })\n\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/profile/stats/stats.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/about/about.component.css\n// module id = 270\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".box-vis {\\n    min-height: 190px !important;\\n    /* border-style: solid !important; */\\n    /* border-width: 1px; */\\n    /* border-color: rgba(0, 0, 0, 0.2); */\\n}\\n\\n.box-vis-2 {\\n    min-height: 50px !important;\\n    max-height: 80px !important;\\n}\\n\\n.box-plot {\\n    cursor: pointer;\\n    float: right;\\n    height: 30px;\\n    margin-left: 20px;\\n    width: 50%;\\n    position: relative;\\n    margin-right: 30px;\\n}\\n\\n.box-plot-component {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 0;\\n    overflow: hidden;\\n    border-style: solid;\\n    border-color: #030303\\n}\\n\\n.box-left {\\n    left: 0%;\\n    width: 50%;\\n    height: 20px;\\n    border-width: 1px;\\n    border-top-left-radius: 3px;\\n    border-bottom-left-radius: 3px;\\n    border-right-width: 0;\\n    background: #fff;\\n}\\n\\n.box-right {\\n    left: 50%;\\n    width: 50%;\\n    height: 20px;\\n    border-width: 1px;\\n    border-top-right-radius: 3px;\\n    border-bottom-right-radius: 3px;\\n    background: #fff;\\n}\\n\\n.box-mean {\\n    top: 3px;\\n    height: 14px;\\n    width: 15px;\\n    left: 50%;\\n    border: 1px solid #248;\\n    background: #abd;\\n    border-radius: 3px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/admin.component.css\n// module id = 271\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".container-par {\\n    width: 80%;\\n    margin: 0 auto;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 272\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/ardb/ardb.component.css\n// module id = 273\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Jua);\", \"\"]);\n\n// module\nexports.push([module.id, \".nomenclature-text {\\n    font-family: 'Jua', sans-serif;\\n    color: green\\n}\\n\\n.nomenclature-text-match {\\n    font-family: 'Jua', sans-serif;\\n    color: black !important;\\n    font-size: 17px !important;\\n}\\n\\nsvg {\\n    width: 100%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/card/card.component.css\n// module id = 274\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/generic/generic.component.css\n// module id = 275\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".curate-nav {\\n    right: 5%;\\n    width: 21.5%;\\n    overflow: scroll;\\n    max-height: 80%;\\n}\\n\\n.sequence {\\n    word-wrap: break-word;\\n    overflow-wrap: break-word;\\n}\\n\\n.user_growl {\\n    position: absolute !important;\\n    top: 20px !important;\\n    z-index: 9999 !important;\\n}\\n\\n\\n/*  */\\n\\n.intro-tour-hint-wrapper {\\n    position: absolute !important;\\n    background-color: rgba(255, 255, 255, .7) !important;\\n    text-align: center;\\n    font-size: 14px;\\n    color: #000;\\n    width: 100% !important;\\n}\\n\\n.box-step {\\n    border: solid 1px rgba(0, 0, 0, 1) !important;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.coffix {\\n    width: 25% !important;\\n    padding-right: 3.5% !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/classify.component.css\n// module id = 276\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/comments/comments.component.css\n// module id = 277\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".ui-steps .ui-steps-item {\\n    width: 33%;\\n}\\n\\n.ui-steps.steps-custom {\\n    margin-bottom: 10px;\\n}\\n\\n.ui-steps.steps-custom .ui-steps-item .ui-menuitem-link {\\n    height: 4px;\\n    /* padding: 0 1em; */\\n}\\n\\n.ui-steps.steps-custom .ui-steps-item .ui-steps-number {\\n    background-color: #0081c2;\\n    color: #FFFFFF;\\n    /* display: inline-block;  */\\n    width: 26px;\\n    /* border-radius: 5%; */\\n    margin-top: -20px;\\n    margin-bottom: 12px;\\n    font-size: 200%;\\n}\\n\\n.ui-steps.steps-custom .ui-steps-item .ui-steps-title {\\n    /* color: #555555;  */\\n    color: #FFFFFF;\\n    margin-top: -43px;\\n    font-weight: bold;\\n}\\n\\n.badge,\\n.ui-steps-item,\\n.ui-steps-number,\\np-dialog {\\n    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.2), 0 1px 6px 0 rgba(0, 0, 0, 0.19) !important;\\n    border-color: rgba(255, 255, 255, 0) !important;\\n}\\n\\n.box,\\n.box-primary,\\n.panel {\\n    box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.1), 0 1px 1px 0 rgba(0, 0, 0, 0.1) !important;\\n    border-color: rgba(0, 0, 0, 0.1) !important;\\n}\\n\\nmd-input-container textarea {\\n    background-color: rgba(0, 0, 0, 0.05) !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/curate/curate.component.css\n// module id = 278\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".close-btn {\\n    float: right;\\n    /* background: red; */\\n    /* color: white; */\\n    top: 10px;\\n    right: 0px;\\n    z-index: 1;\\n    position: relative;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/explore/explore.component.css\n// module id = 279\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/genomes/genome.component.css\n// module id = 280\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/instructions/instructions.component.css\n// module id = 281\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/ardb/ardb.component.css\n// module id = 282\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/card/card.component.css\n// module id = 283\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/uniprot/uniprot.component.css\n// module id = 284\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"ng2-cytoscape {\\n    height: 100vh;\\n    float: left;\\n    width: 100%;\\n    position: relative;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/database/database.component.css\n// module id = 285\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".box-fixed-height {\\n    height: auto !important;\\n}\\n\\n.masonry-item {\\n    background-color: #FFFFFF;\\n    color: #000;\\n}\\n\\n.icon-options:hover {\\n    color: red !important;\\n    cursor: pointer;\\n}\\n\\n.title-post:hover {\\n    color: rgba(21, 71, 120, 1) !important;\\n    cursor: pointer;\\n}\\n\\n.masonry-item:hover .text-muted {\\n    color: #FFFFFF;\\n}\\n\\n.text-body-box {\\n    word-wrap: break-word;\\n}\\n\\n.example-header-image {\\n    background-image: url(\" + require(\"../../../assets/images/admin.svg\") + \");\\n    background-size: cover;\\n    /* background-color: rgba(21, 171, 200, 1) !important; */\\n}\\n\\n.example-card {\\n    border: 1px #000000 !important;\\n    box-shadow: 0 0px 0px 0px rgba(0, 0, 0, .2), 0 0px 0px 0 rgba(0, 0, 0, .14), 0 0px 0px 0 rgba(0, 0, 0, .12) !important;\\n}\\n\\n.grid-item {\\n    width: 20%;\\n}\\n\\n.ui-summary {\\n    color: rgba(0, 0, 0, .54) !important;\\n    font-weight: 400 !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forum/all-questions/all-questions.component.css\n// module id = 286\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".no-gutter {\\n    padding-right: 0;\\n    padding-left: 0;\\n}\\n\\n.flex-box {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: horizontal;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: row;\\n            flex-direction: row;\\n}\\n\\n.flex-input {\\n    -webkit-box-flex: 2;\\n        -ms-flex-positive: 2;\\n            flex-grow: 2;\\n    border: none;\\n}\\n\\n.remove-tag:hover {\\n    cursor: pointer;\\n    color: #022b6d;\\n}\\n\\n.tag-line {\\n    display: inline-block;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forum/edit-question/edit-question.component.css\n// module id = 287\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".timeline {\\n    list-style: none;\\n    padding: 20px 0 20px;\\n    position: relative;\\n}\\n\\n.full-width {\\n    width: 100%;\\n    background-color: #ffffff !important;\\n}\\n\\n.timeline:before {\\n    top: 0;\\n    bottom: 0;\\n    position: absolute;\\n    content: \\\" \\\";\\n    width: 3px;\\n    background-color: #eeeeee;\\n    left: 0%;\\n    margin-left: -1.5px;\\n}\\n\\n.timeline>li {\\n    margin-bottom: 20px;\\n    position: relative;\\n}\\n\\n.timeline>li:before,\\n.timeline>li:after {\\n    content: \\\" \\\";\\n    display: table;\\n}\\n\\n.timeline>li:after {\\n    clear: both;\\n}\\n\\n.timeline>li:before,\\n.timeline>li:after {\\n    content: \\\" \\\";\\n    display: table;\\n}\\n\\n.timeline>li:after {\\n    clear: both;\\n}\\n\\n.timeline>li>.timeline-panel {\\n    width: 96%;\\n    float: left;\\n    border: 1px solid #d4d4d4;\\n    border-radius: 2px;\\n    padding: 20px;\\n    position: relative;\\n    box-shadow: 0 1px 6px rgba(0, 0, 0, 0.175);\\n}\\n\\n.timeline>li>.timeline-panel:before {\\n    position: absolute;\\n    top: 26px;\\n    right: -15px;\\n    display: inline-block;\\n    border-top: 15px solid transparent;\\n    border-left: 15px solid #ccc;\\n    border-right: 0 solid #ccc;\\n    border-bottom: 15px solid transparent;\\n    content: \\\" \\\";\\n}\\n\\n.timeline>li>.timeline-panel:after {\\n    position: absolute;\\n    top: 27px;\\n    right: -14px;\\n    display: inline-block;\\n    border-top: 14px solid transparent;\\n    border-left: 14px solid #fff;\\n    border-right: 0 solid #fff;\\n    border-bottom: 14px solid transparent;\\n    content: \\\" \\\";\\n}\\n\\n.timeline>li>.timeline-badge {\\n    color: #fff;\\n    width: 50px;\\n    height: 50px;\\n    line-height: 50px;\\n    font-size: 1.4em;\\n    text-align: center;\\n    position: absolute;\\n    top: 16px;\\n    left: 0%;\\n    margin-left: -25px;\\n    background-color: #999999;\\n    z-index: 100;\\n    border-top-right-radius: 50%;\\n    border-top-left-radius: 50%;\\n    border-bottom-right-radius: 50%;\\n    border-bottom-left-radius: 50%;\\n}\\n\\n.timeline>li.timeline-inverted>.timeline-panel {\\n    float: right;\\n}\\n\\n.timeline>li.timeline-inverted>.timeline-panel:before {\\n    border-left-width: 0;\\n    border-right-width: 15px;\\n    left: -15px;\\n    right: auto;\\n}\\n\\n.timeline>li.timeline-inverted>.timeline-panel:after {\\n    border-left-width: 0;\\n    border-right-width: 14px;\\n    left: -14px;\\n    right: auto;\\n}\\n\\n.timeline-badge.primary {\\n    background-color: #2e6da4 !important;\\n}\\n\\n.timeline-badge.success {\\n    background-color: #3f903f !important;\\n}\\n\\n.timeline-badge.warning {\\n    background-color: #f0ad4e !important;\\n}\\n\\n.timeline-badge.danger {\\n    background-color: #d9534f !important;\\n}\\n\\n.timeline-badge.info {\\n    background-color: #5bc0de !important;\\n}\\n\\n.timeline-title {\\n    margin-top: 0;\\n    color: inherit;\\n}\\n\\n.timeline-body>p,\\n.timeline-body>ul {\\n    margin-bottom: 0;\\n}\\n\\n.timeline-body>p+p {\\n    margin-top: 5px;\\n}\\n\\n@media (max-width: 767px) {\\n    ul.timeline:before {\\n        left: 40px;\\n    }\\n    ul.timeline>li>.timeline-panel {\\n        width: calc(100% - 90px);\\n        width: -webkit-calc(100% - 90px);\\n    }\\n    ul.timeline>li>.timeline-badge {\\n        left: 15px;\\n        margin-left: 0;\\n        top: 16px;\\n    }\\n    ul.timeline>li>.timeline-panel {\\n        float: right;\\n    }\\n    ul.timeline>li>.timeline-panel:before {\\n        border-left-width: 0;\\n        border-right-width: 15px;\\n        left: -15px;\\n        right: auto;\\n    }\\n    ul.timeline>li>.timeline-panel:after {\\n        border-left-width: 0;\\n        border-right-width: 14px;\\n        left: -14px;\\n        right: auto;\\n    }\\n}\\n\\n.a-link {\\n    cursor: pointer;\\n}\\n\\n.hand {\\n    cursor: pointer;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forum/forum.component.css\n// module id = 288\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".post-form {\\n    font-family: 'Sarabun', sans-serif !important;\\n}\\n\\n.no-gutter {\\n    padding-right: 0;\\n    padding-left: 0;\\n}\\n\\n.flex-box {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: horizontal;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: row;\\n            flex-direction: row;\\n}\\n\\n.flex-input {\\n    -webkit-box-flex: 2;\\n        -ms-flex-positive: 2;\\n            flex-grow: 2;\\n    border: none;\\n}\\n\\n.remove-tag:hover {\\n    cursor: pointer;\\n    color: #022b6d;\\n}\\n\\n.tag-line {\\n    display: inline-block;\\n}\\n\\n.categories {\\n    cursor: pointer;\\n}\\n\\n.categories-block {\\n    display: inline-block;\\n}\\n\\n.categories:hover {\\n    -webkit-transform: scale(1.1);\\n            transform: scale(1.1);\\n    color: #000000 !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forum/new-question/new-question.component.css\n// module id = 289\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forum/search/search.component.css\n// module id = 290\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".user-block p {\\n    padding: 0%;\\n}\\n\\n.icon-options:hover {\\n    color: red !important;\\n    cursor: pointer;\\n}\\n\\n.ui-view-post {\\n    font-family: 'Sarabun', sans-serif !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forum/selected-question/selected-question.component.css\n// module id = 291\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Encode+Sans+Expanded);\", \"\"]);\n\n// module\nexports.push([module.id, \".home-logo {\\n    font-family: 'Encode Sans Expanded', sans-serif !important;\\n    /* text-align: center; */\\n    color: #000;\\n    font-size: 1.6em;\\n}\\n\\n.home-font {\\n    font-family: 'Encode Sans Expanded', sans-serif !important;\\n}\\n\\n.home-font h4 {\\n    font-family: 'Encode Sans Expanded', sans-serif !important;\\n}\\n\\n.logo-text img {\\n    vertical-align: middle;\\n    height: 80px;\\n    width: 80px;\\n    /* border-right: solid 1px; */\\n}\\n\\n.funding img {\\n    /* height: 50px !important; */\\n    width: 100%;\\n    height: 50px;\\n    opacity: 0.8 !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 292\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/news/news.component.css\n// module id = 293\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".user_growl {\\n    position: absolute !important;\\n    top: 20px !important;\\n    z-index: 9999 !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = 294\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".example-header-image {\\n    background-image: url(\" + require(\"../../assets/images/admin.svg\") + \");\\n    background-size: cover;\\n    /* background-color: rgb(32, 47, 182) !important; */\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/profile.component.css\n// module id = 295\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/stats/stats.component.css\n// module id = 296\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signup/signup.component.css\n// module id = 297\n// module chunks = 0","module.exports = \"<div style=\\\"overflow: auto\\\" class=\\\"col-md-12\\\">\\n    <h2>Instructions</h2>\\n    <p>\\n        The goal of this platform is to validate and complement the information under the <strong> Current Annotation </strong> panel by looking at the data presented in the main section. Then, you will have to fill the form uder the <strong>ARG Annotation</strong>        section.\\n    </p>\\n    <br>\\n\\n    <img class=\\\"col-md-8 col-md-offset-2\\\" src=\\\"assets/images/demo.png\\\" alt=\\\"\\\">\\n\\n    <div class=\\\"col-md-12\\\">\\n\\n        <h4>1. Get familiar with the environment</h4>\\n        <p>\\n            In order to understand the structure of this website, please, click on the <strong>Tour</strong> button.\\n        </p>\\n        <h4>2. New user</h4>\\n        <p class=\\\"\\\">\\n            If this is the first time you enter the website, you are required to perform two classifications. To do so, click the <strong>New User</strong> button and perform two ARG annotations. An score with your performance will be prompted. <strong>All fields are required</strong>,\\n            values unrelated to the gene are not accepted.\\n        </p>\\n\\n        <h4>3. How to get a reward </h4>\\n        <p>\\n            Once you have done with the training, you are ready to start. First, click on <strong>Priority ARGs</strong> button and perform one annotation. After you done with the annotation you will get a token number. Please, copy and paste this token\\n            to the Amazon Mturk website and submit the form. If you plan to make another Hit <strong><span style=\\\"color:red\\\">DO NOT close the ARG-miner website.</span></strong> Other case you will have to do the training again.\\n        </p>\\n\\n        <h4>4. Perform a new Hit</h4>\\n        <p>\\n            First, open a new hit in Amazon Mturk, then, get back to this webpage and just click on the <strong>Other ARG Group</strong> button. Perform the annotation and submit the token to Amazon Mturk.\\n        </p>\\n\\n        <strong><h4 style=\\\"color:red\\\"> Please Be Aware! </h4></strong>\\n        <p>\\n            If you don't do the mandatory training, the system <strong>will not</strong> prompt the token.\\n        </p>\\n        <p>\\n            If the annotation contains random, unrelated or nonsense words, the HIT will be rejected.\\n        </p>\\n        <p>\\n            Only tokens are accepted, if you submit other values such as gene_id, the HIT will be rejected. Several workers are working in the same gene_id, if the token is not provided, we cannot check your performance.\\n        </p>\\n\\n    </div>\\n    <hr class=\\\"col-md-10\\\">\\n</div>\\n\\n<hr>\\n\\n\\n<md-expansion-panel class=\\\"\\\" [expanded]=\\\"false\\\">\\n    <md-expansion-panel-header>\\n        <md-panel-title>\\n            <h4>Micro-Tasks</h4>\\n        </md-panel-title>\\n    </md-expansion-panel-header>\\n    <h4>ARG identification</h4>\\n    <p>Please fill up the Antibiotic resistance class, group and mechanism (if any) of the gene based on the observation from the different resources.</p>\\n\\n    <p class=\\\"small\\\">The <strong>Blast alignment</strong> sections associate the queried gene to its closest antibiotic resistance gene from curated databases. From this section you need to look at the scores (Bitscore, evalue, identity and coverage). High identity and\\n        coverage represent close related sequences. Statistically significant alignments don't necesarly need high identity percentages. Therefore, pay attention to the Bitscores and Evalues. <strong>Note</strong>: A bitscore greater than 50 is considered\\n        significant if it spans at least 90% coverage.\\n    </p>\\n\\n\\n    <hr>\\n\\n    <h4> Mobile Genetic Elements</h4>\\n\\n    <p><strong>Horizontal Gene Transfer</strong></p>\\n    <p>Please check if there is any evidence that suggests the gene has been observed in a plasmid, prophage or virus.</p>\\n    <p class=\\\"small\\\">To complete this task please check the Plasmid, Virus, or Prophages sections. If there is not any section with plasmid, prophage or virus tags it means that there is not evidence that the gene is transfered by any of those mechanisms.\\n    </p>\\n    <p><strong>Pathogen Genomes</strong></p>\\n    <p>Please take a look at the pathogen genomes panel under the horizontal gene transfer section. </p>\\n    <p class=\\\"small\\\">This panel will show you the association of the queried gene against a set of ~100,000 bacterial genomes. You will get information about the association of the gene to pathogens (as percentages) as well as their antimicrobial phenotype (resistant,\\n        susceptible, intermediate). Rate your findigns according to the provided evidence.\\n\\n    </p>\\n\\n    <hr>\\n    <h4>Review and submit</h4>\\n    <p>This panel contains your observations for the queried gene.</p>\\n    <p><strong>Verify your observations</strong></p>\\n    <p>Please, make sure the values in the fields (ARG class, ARG group and ARG mechanism) correspond to what you have observed.</p>\\n    <p><strong>Rate your expertise</strong></p>\\n    <p>Please in a scale from 1 to 5 rate your confidence or expertice level, where 1 depicts a non expert evaluator, and 5 if you have experience working with Antibiotic Resistance Genes.\\n        <p>\\n            <p><strong>Rate your annotation confidence</strong></p>\\n            <p>Please in a scale from 1 to 5, rate your confidence in the curation of the queried gene where 1 means that there is a lack of evidence about the gene and 5 the data correlates with your observations.</p>\\n</md-expansion-panel>\\n<hr>\\n\\n<md-expansion-panel [expanded]=\\\"false\\\">\\n    <md-expansion-panel-header>\\n        <md-panel-title>\\n            <h4>MGEs and pathogens</h4>\\n        </md-panel-title>\\n    </md-expansion-panel-header>\\n    <p>\\n        Mobile Genetic Elements or MGEs are segments that encode proteins that mediates the movment of DNA within genomes. Plasmids are collection of stable funcional genetic elements. Plasmids can often be transferred to another cell. Bacteriophages can also\\n        transfer genetic material by accidentally package segments of DNA to inject into their host.\\n    </p>\\n    <p>\\n        To identify if the ARG is carried by plasmids, phages or viruses, the gene was aligned to the <a href=\\\"\\\">ACLAME</a> database. Scores provide insight into the presence of this gene into the MGE.\\n    </p>\\n    <p>\\n        Pathogens are invaders that attack their hosts. The most familiar are viruses and bacteria and they can cause a wide range of infections and diseases. To identify if the gene is hosted in a pathogen genome, the gene was matched to the <a href=\\\"\\\">PATRIC</a>        database. Then, we were able to identify the number of pathogen genomes that carry the gene.\\n    </p>\\n    <p class=\\\"small\\\">Each color represents a different scoring scale</p>\\n</md-expansion-panel>\\n\\n\\n\\n<hr>\\n\\n<md-expansion-panel [expanded]=\\\"false\\\">\\n    <md-expansion-panel-header>\\n        <md-panel-title>\\n            <h4>Similarity to known ARGs</h4>\\n        </md-panel-title>\\n    </md-expansion-panel-header>\\n    <p>\\n        To curate a gene as an ARG, it is necesary to validate its evidence. One way to do it is by looking at the information provided from curated databases such as the <a href=\\\"\\\">CARD</a> database. Thus, the entry was compared against the databases\\n        to reinforce, reject or modify the <strong>current annotation.</strong>\\n    </p>\\n    <p>\\n        For this comparison, the gene was aligned to the genes from the databases using blast and its best hit was extracted. For each database, a panel shows the quality of the alignment and the information regarding that best hit.\\n    </p>\\n\\n    <p> <span class=\\\"label bg-blue\\\">Tip</span> To identify the\\n        <strong> class of antibiotic </strong> consider looking at <u>middle</u> to <u>high</u> bitscore, evalue and coverage. However, to identify <strong> antibiotic resistance names </strong>, we would recomend to look at the panels where the sequence\\n        similarity is <u>high</u> with a <u>very strong</u> coverage.\\n    </p>\\n\\n</md-expansion-panel>\\n\\n<hr><br><br><br><br><br>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/about/about.component.html\n// module id = 393\n// module chunks = 0","module.exports = \"<div *ngIf='render && session.get(\\\"online\\\") == 2'>\\n    <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <div class=\\\"box-header with-border text-center\\\">\\n                <h4>Upgrade database</h4>\\n                <!-- <h3 class=\\\"box-title\\\">\\n                <strong>Main Actions</strong>\\n            </h3> -->\\n            </div>\\n            <div class=\\\"box-body\\\">\\n\\n\\n                <p class=\\\"small\\\">Publish a new version of the ARG-miner database. This database is updated once a considered number of genes have been curated. Once you click submit it will create a new version of the database and update the download links under the Donwloads\\n                    tab.\\n                </p>\\n\\n\\n                <!-- UPGRADE DATABASE FORM -->\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input mdInput placeholder=\\\"Database version\\\" [value]=\\\"databaseVersion\\\" #dversion>\\n                </md-input-container>\\n\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input type=\\\"text\\\" mdInput #dmessage maxlength=\\\"256\\\" placeholder=\\\"Comments\\\" [value]=\\\"databaseComments\\\">\\n\\n                    <md-hint align=\\\"end\\\">{{dmessage.value.length}} / 256</md-hint>\\n                </md-input-container>\\n\\n            </div>\\n            <div class=\\\"box-footer\\\">\\n                <br>\\n                <div class=\\\"col-md-12 text-center\\\"> <button (click)=\\\"upgradeDataBase(dversion.value, dmessage.value)\\\" class=\\\"bg-black\\\" color=\\\"default\\\" md-raised-button>Upgrade ARG-miner database</button><br><br></div>\\n\\n                <p class=\\\"small\\\">*The upgrading gets run in the background of the web server and the fasta file will be available under the downloads once the process is done.</p>\\n            </div>\\n        </div>\\n        <div class=\\\"box box-solid\\\">\\n            <div class=\\\"box-header with-border text-center\\\">\\n                <h4>Obtain Problematic Annotations</h4>\\n            </div>\\n            <div class=\\\"box-body\\\">\\n\\n                <p class=\\\"small\\\">Use this tool after you have accepted/rejected annotations from the crowdsourcing platform. This action will compute/update all those ARGs that have conflicting annotations e.g., the same gene name associated to several ARG categories.</p>\\n                <div class=\\\"text-center\\\"> <button (click)=\\\"updateConflictingARGs()\\\" class=\\\"bg-blue\\\" md-raised-button>Compute\\n            Problematic ARGs</button></div>\\n                <hr>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"col-sm-9\\\">\\n\\n        <div class=\\\"box-body\\\">\\n            <div class=\\\"box box-solid \\\">\\n                <div class=\\\"box-body\\\">\\n                    <md-input-container class='col-sm-12 col-sm-offset-0'>\\n                        <input #keyword type=\\\"search\\\" (keyup.enter)=\\\"search(keyword.value)\\\" mdInput placeholder=\\\"Search ARG \\\" value=\\\"\\\" />\\n                    </md-input-container>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngFor=\\\"let item of curatedARGs\\\" class=\\\"\\\">\\n            <!-- <div class=\\\"box-header with-border\\\"> -->\\n            <!-- <h3 class=\\\"box-title\\\">{{item.entry.gene_id}}</h3> -->\\n            <!-- </div> -->\\n\\n            <!-- <p>The gene <u>{{item.entry.gene_id}}</u> has been curated {{ item.inspected.length }} times.</p> -->\\n            <div class=\\\"col-md-12\\\">\\n\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"box box-solid box-primary\\\">\\n                        <div class=\\\"box-header\\\">\\n                            <h4 class=\\\"text-center\\\"> <strong> Current Annotation </strong></h4>\\n                        </div>\\n                        <div class=\\\"box-body\\\">\\n                            <ul class=\\\"clearfix\\\">\\n\\n                                <li *ngIf=\\\"item.entry.inspected > 1\\\">\\n                                    <span class=\\\"badge bg-red\\\"> <strong> Gene already curated </strong></span>\\n                                </li>\\n                                <li>\\n                                    <span class=\\\"users-list-date\\\">Antibiotic Class</span> {{ item.entry.type }}\\n                                </li>\\n                                <li>\\n                                    <span class=\\\"users-list-date\\\">ARG Name</span> {{ item.entry.subtype }}\\n                                </li>\\n                                <li>\\n                                    <span class=\\\"users-list-date\\\">Database</span> {{ item.entry.database }}\\n                                </li>\\n                                <li>\\n                                    <span class=\\\"users-list-date\\\">Gene ID</span> {{ item.entry.gene_id }}\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-md-8\\\">\\n\\n                    <div class=\\\"box box-solid box-primary\\\">\\n                        <div class=\\\"box-header\\\">\\n                            <h4 class=\\\"text-center\\\"> <strong> Weighted Annotation </strong> </h4>\\n                        </div>\\n\\n                        <div class=\\\"box-body\\\">\\n                            <ul class=\\\"clearfix\\\">\\n                                <li>\\n                                    <span class=\\\"users-list-date\\\">Antibiotic Class</span> {{ scores[0]['scores'][0]['name'] }}\\n                                </li>\\n                                <li>\\n                                    <span class=\\\"users-list-date\\\">ARG name</span> {{ scores[1]['scores'][0]['name'] }}\\n                                </li>\\n                                <li>\\n                                    <span class=\\\"users-list-date\\\">Antibiotic Resistance Mechanism</span> {{scores[2]['scores'][0]['name']}}\\n                                </li>\\n                            </ul>\\n\\n                        </div>\\n\\n                        <div class=\\\"box-footer\\\">\\n                            <button (click)=\\\"acceptAnnotation()\\\" class=\\\"pull-left bg-blue\\\" md-raised-button>Approve</button>\\n                            <button (click)=\\\"getARG(ARGindex)\\\" class=\\\"pull-right bg-red\\\" md-raised-button>Next Gene</button>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"box-body\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <!-- <h3 class=\\\"text-center\\\">Crowsourced Annotation</h3> -->\\n                    <div class=\\\"box box-solid with-border box-primary\\\">\\n                        <div class=\\\"box-body\\\">\\n\\n                            <div *ngFor=\\\"let kind of scores\\\" class=\\\"col-md-12\\\">\\n                                <!-- <hr> -->\\n                                <div>\\n                                    <h3>{{ kind.kind }}</h3>\\n                                    <p>This table shows the {{kind.kind}} results for the gene {{ item.entry.gene_id }}</p>\\n                                </div>\\n                                <br>\\n                                <table class=\\\"table table-responsive table-bordered text-center\\\">\\n                                    <tbody>\\n                                        <tr class=\\\"table-success\\\">\\n                                            <th>ARG {{kind.kind}}</th>\\n                                            <th>Counts</th>\\n                                            <th>Confidence/Expertise Score</th>\\n                                            <th>Majority Votes</th>\\n                                            <th>Validation Filter</th>\\n                                            <th>Score</th>\\n                                            <th>Weighted Score</th>\\n                                        </tr>\\n\\n                                        <tr *ngFor=\\\"let itemx of kind.scores\\\">\\n                                            <td>{{ itemx.name }}</td>\\n                                            <td>{{ itemx.counts }}</td>\\n                                            <td>{{ itemx.expertise_confidence_score.toFixed(4) }}</td>\\n                                            <td>{{ itemx.majority_voting_score.toFixed(2) }}</td>\\n                                            <td>{{ itemx.true_validation_filter_score.toFixed(2) }}</td>\\n                                            <td>{{ itemx.raw_score.toFixed(2) }}</td>\\n                                            <td>{{ itemx.score.toFixed(6) }}</td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                                <!-- <hr> -->\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n\\n\\n\\n                <div class=\\\"col-sm-12\\\">\\n                    <div class=\\\"box box-solid\\\">\\n                        <table class=\\\"table table-responsive table-bordered text-center\\\">\\n                            <tbody>\\n                                <tr class=\\\"table-success\\\">\\n                                    <th>Token</th>\\n                                    <th>Date</th>\\n                                    <th>Expertise</th>\\n                                    <th>Confidence</th>\\n                                    <th>Gene Name</th>\\n                                    <th>ARG Class</th>\\n                                    <th>ARG Mechanism</th>\\n                                </tr>\\n                                <tr *ngFor=\\\"let itemx of curatedARGs[0]['inspected']\\\">\\n                                    <td>{{ itemx.token }}</td>\\n                                    <td>{{ itemx.date }}</td>\\n                                    <td *ngIf=\\\"itemx.rating.expertise; else expertiseBlockA\\\">{{ (itemx.rating.expertise.value).toFixed(2) }}\\n                                    </td>\\n                                    <ng-template #expertiseBlockA>\\n                                        <td>0.00</td>\\n                                    </ng-template>\\n                                    <td *ngIf=\\\"itemx.rating.confidence; else confidenceBlockA\\\">{{ (itemx.rating.confidence.value).toFixed(2) }} </td>\\n                                    <ng-template #confidenceBlockA>\\n                                        <td>0.00</td>\\n                                    </ng-template>\\n                                    <td>{{ itemx.group }}</td>\\n                                    <td>{{ itemx.class }}</td>\\n                                    <td>{{ itemx.mechanism }}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n\\n\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/admin.component.html\n// module id = 394\n// module chunks = 0","module.exports = \"<div class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n    <div class=\\\"container-par\\\">\\n        <!-- <div class=\\\"col-md-12\\\"> -->\\n        <div class=\\\"navbar-header\\\">\\n            <!-- <div class=\\\"col-md-1\\\"> -->\\n            <!-- </div> -->\\n            <a routerLink=\\\"home\\\" class=\\\"navbar-brand\\\">ARGminer</a>\\n            <button class=\\\"navbar-toggle\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar-main\\\">\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n        </div>\\n\\n\\n\\n        <ul class=\\\"nav navbar-nav\\\">\\n            <li *ngIf='session.get(\\\"online\\\") >=1'>\\n                <a routerLink=\\\"profile\\\"> {{session.get('user')['user']}} </a>\\n            </li>\\n\\n            <li>\\n                <a routerLink=\\\"home\\\">Home</a>\\n            </li>\\n\\n            <li>\\n                <a routerLink=\\\"classify\\\">Inspect ARGs</a>\\n            </li>\\n\\n            <li>\\n                <a routerLink=\\\"forum\\\">Blog</a>\\n            </li>\\n\\n            <li>\\n                <a routerLink=\\\"database\\\">Database</a>\\n            </li>\\n\\n            <li>\\n                <a (click)=\\\"open_instructions()\\\"> Instructions</a>\\n            </li>\\n        </ul>\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n            <li *ngIf='session.get(\\\"online\\\") == false || session.get(\\\"online\\\") == 0 '><a routerLink=\\\"login\\\">Login</a></li>\\n            <li *ngIf='session.get(\\\"online\\\") == 2'><a routerLink=\\\"admin\\\">Admin</a></li>\\n            <li *ngIf='session.get(\\\"online\\\") >=1'><a (click)=\\\"logout()\\\">Logout</a></li>\\n\\n        </ul>\\n\\n        <!-- </div> -->\\n        <!-- </div> -->\\n    </div>\\n</div>\\n\\n\\n\\n<div class=\\\"container-par\\\">\\n    <br><br><br><br>\\n    <div class=\\\"wrapper\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 395\n// module chunks = 0","module.exports = \"<div *ngIf=\\\"render\\\">\\n    <div *ngFor=\\\"let bh of randomARG.besthit.alignments\\\">\\n        <div *ngIf=\\\"bh.best_hit_database=='ARDB'\\\" class=\\\"\\\">\\n\\n            <div class=\\\"box box-solid \\\">\\n                <div class=\\\"box-header with-border\\\">\\n                    <i class=\\\"fa fa-gears\\\"></i>\\n                    <h3 class=\\\"box-title\\\"><strong> {{ bh.best_hit_database }} </strong> Database </h3>\\n                </div>\\n\\n                <!-- /.box-header -->\\n                <div class=\\\"box-body\\\">\\n\\n                    <!-- <dd> -->\\n                    <h5>Resistance Mechanism</h5>\\n                    <p> {{bh.metadata.description}} </p>\\n                    <h5>AMR drug class / Gene family</h5>\\n                    <div *ngFor=\\\"let type of bh.metadata.resistance_profile\\\">\\n\\n                        <p-accordion>\\n                            <p-accordionTab [header]=\\\"type.type\\\">\\n                                <p *ngIf=\\\"type.description\\\"> {{ type.description }} </p>\\n                            </p-accordionTab>\\n                        </p-accordion>\\n\\n                    </div>\\n                    <!-- <dd> -->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/ardb/ardb.component.html\n// module id = 396\n// module chunks = 0","module.exports = \"<div *ngIf=\\\"render\\\">\\n\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-body\\\">\\n\\n            <p-dataTable [value]=\\\"cars\\\">\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Database</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        <strong> {{gene.database.toUpperCase()}} </strong>\\n                    </ng-template>\\n\\n                </p-column>\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Gene Name</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        {{gene.gene_name}}\\n                        <i *ngIf=\\\"gene.similarity>=80\\\" class=\\\"fa fa-check text-primary\\\"></i> <i span *ngIf=\\\"gene.similarity<80\\\" class=\\\"text-danger fa fa-exclamation-circle\\\"></i>\\n                    </ng-template>\\n                </p-column>\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Antibiotic Class</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n\\n                        <p *ngFor='let ant of gene.antibiotic'>{{ant}}</p>\\n\\n                    </ng-template>\\n                </p-column>\\n                <!-- <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Nomenclature</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        {{gene.gene_nomenclature}}\\n                    </ng-template>\\n                </p-column> -->\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Similarity</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        <p-progressBar [value]=\\\"gene.similarity\\\"></p-progressBar>\\n                    </ng-template>\\n                </p-column>\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Coverage</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        <p-progressBar [value]=\\\"gene.coverage\\\"></p-progressBar>\\n                    </ng-template>\\n                </p-column>\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Bitscore</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        <span [ngStyle]=\\\"{'color': gene.bitscore_rate}\\\"> <strong> {{gene.bitscore}} </strong> </span>\\n                        <!-- <p-progressBar style=\\\"display:inline\\\" [value]=\\\"gene.bitscore_rate\\\"></p-progressBar> -->\\n                    </ng-template>\\n                </p-column>\\n                <!-- <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Bitscore</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        {{ gene.bitscore }}\\n                    </ng-template>\\n                </p-column> -->\\n\\n\\n            </p-dataTable>\\n\\n            <br>\\n            <!-- <h5>Pay attention to:</h5> -->\\n            <p><i class=\\\"fa fa-check text-primary\\\"></i> <span> Strong evidence.</span> <br></p>\\n            <p><i class=\\\"text-danger fa fa-exclamation-circle\\\"></i> <span>Caution! <strong> not </strong> strong evidence,\\n          try to find a consensus from all gene names, if all gene names differ its recommended to keep the original\\n          gene name.</span></p>\\n\\n            <!-- nomenclature -->\\n            <hr>\\n\\n            <h5 class=\\\"\\\"><strong> Suggested Gene Nomenclature </strong></h5>\\n            <!-- <p>This is the suggested structure for the nomenclature of the gene name.</p> -->\\n            <h2 class=\\\"nomenclature-text\\\"> {{ predicted_nomenclature[0].nomenclature }} <strong class=\\\"nomenclature-text-match\\\">\\n          ({{100*predicted_nomenclature[0].probability.toFixed(2) }}% Match) </strong> </h2>\\n\\n\\n            <hr>\\n            <p>\\n                The structure of the gene nomenclature is retrieved by using a machine learning model that predicts the shape of the gene name. For instance, a gene name <strong>BACA</strong> with a nomenclature <strong> xxxX </strong>, should be written\\n                as <strong><i> bacA</i></strong>.\\n            </p>\\n\\n            <p-accordion>\\n                <p-accordionTab [header]=\\\"'Bacterial Gene Nomenclature (more)'\\\">\\n                    <h5>Antibiotic Resistance</h5>\\n                    <p>\\n                        Two and three letter designations are used for ARGs. There is not a real consensus in the nomenclature of ARGs and there are multiple ways in which ARGs are named. For instance, the gene APH(3') corresponds to a\\n                        <i> Phosphorylation of 2-deoxystreptamine aminoglycosides on the hydroxyl group at position 3' </i> does not compy with the suggested gene nomenclature making difficult to determine the real ARG name.\\n                    </p>\\n                    <p>\\n                        In ARG miner, we decided to build a machine learning model that predicts the structure of the gene name based on the information provided by the CARD database and the UniProt TreMBL database. Thus, only gene names from entries that have been experimentally\\n                        validated were subtracted to train the a text classifier. As result, ARGminer reports to users the likely structure of the gene name. For instance, when ARGminer prints xxxX it means the three first words are in lower case whereas\\n                        the latest word is in upper case (bacA, uppP, etc.). Other cases such as the <i>APH(3')-Ia</i> gene has a nomenclature <strong> XXX(N')-Xx </strong>, where x represents lower case, X upper case and N a number.\\n                    </p>\\n                </p-accordionTab>\\n            </p-accordion>\\n\\n            <!-- </div> -->\\n            <!-- <p class=\\\"small\\\"> <strong>*Bitscore Rate</strong>: Reffers to the rate between the alignment bitscore and the optimal bitscore curated by CARD for this ARG.</p> -->\\n\\n\\n        </div>\\n    </div>\\n\\n    <div *ngFor=\\\"let bh of randomARG.besthit.alignments\\\">\\n\\n        <div *ngIf=\\\"bh.best_hit_database=='CARD'\\\" class=\\\"\\\">\\n            <!-- <p>\\n                <strong> Scoring </strong>:\\n                <span class=\\\"label bg-red\\\">Very Weak</span>\\n                <span class=\\\"label bg-yellow\\\">Weak</span>\\n                <span class=\\\"label bg-green\\\">Middle</span>\\n                <span class=\\\"label bg-blue\\\">Strong</span>\\n                <span class=\\\"label bg-black\\\">Very Strong</span>\\n            </p> -->\\n            <div class=\\\"box box-solid \\\">\\n                <div class=\\\"box-header with-border\\\">\\n                    <i class=\\\"fa fa-gears\\\"></i>\\n                    <h3 class=\\\"box-title\\\"> <strong> {{ bh.best_hit_database }} </strong> Database </h3>\\n\\n                </div>\\n                <!-- /.box-header -->\\n                <div class=\\\"box-body\\\">\\n\\n                    <strong>\\n            <h5>AMR Gene Family (Antibiotic Class)</h5>\\n          </strong>\\n                    <div *ngFor=\\\"let meta of bh.metadata\\\">\\n                        <div *ngIf=\\\"meta.category_aro_class_name == 'AMR Gene Family'\\\">\\n                            <p-accordion>\\n                                <p-accordionTab [header]=\\\"meta.category_aro_name\\\">\\n                                    {{ meta.category_aro_description}}\\n                                </p-accordionTab>\\n                            </p-accordion>\\n                        </div>\\n                    </div>\\n\\n                    <strong>\\n            <h5>Resistance Mechanism</h5>\\n          </strong>\\n                    <div *ngFor=\\\"let meta of bh.metadata\\\">\\n                        <div *ngIf=\\\"meta.category_aro_class_name == 'Resistance Mechanism'\\\">\\n                            <p-accordion>\\n                                <p-accordionTab [header]=\\\"meta.category_aro_name\\\">\\n                                    {{ meta.category_aro_description}}\\n                                </p-accordionTab>\\n                            </p-accordion>\\n                        </div>\\n                    </div>\\n\\n                    <strong>\\n            <h5>Drug Class</h5>\\n          </strong>\\n                    <div *ngFor=\\\"let meta of bh.metadata\\\">\\n                        <div *ngIf=\\\"meta.category_aro_class_name == 'Drug Class'\\\">\\n                            <p-accordion>\\n                                <p-accordionTab [header]=\\\"meta.category_aro_name\\\">\\n                                    {{ meta.category_aro_description}}\\n                                </p-accordionTab>\\n                            </p-accordion>\\n                        </div>\\n                    </div>\\n\\n                    <!-- <button color=\\\"primary\\\" class=\\\"pull-left\\\" md-mini-fab> <i class=\\\"fa fa-chevron-left\\\"></i> </button> -->\\n                    <!-- <button color=\\\"primary\\\" class=\\\"pull-right\\\" md-mini-fab> <i class=\\\"fa fa-chevron-right\\\"></i> </button> -->\\n                </div>\\n                <!-- /.box-body -->\\n            </div>\\n            <!-- /.box -->\\n        </div>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/card/card.component.html\n// module id = 397\n// module chunks = 0","module.exports = \"<div *ngIf=\\\"render\\\">\\n    <div *ngFor=\\\"let bh of randomARG.besthit.alignments\\\">\\n        <div *ngIf=\\\"bh.best_hit_database!=='CARD' && bh.best_hit_database!=='ARDB'\\\" class=\\\"\\\">\\n            <div class=\\\"box box-solid \\\">\\n                <div class=\\\"box-header with-border\\\">\\n                    <i class=\\\"fa fa-gears\\\"></i>\\n\\n                    <h3 class=\\\"box-title\\\"><strong> {{ bh.best_hit_database }} </strong> Database </h3>\\n                </div>\\n                <div class=\\\"box-body\\\">\\n\\n                    <h5> Antibiotic Class: </h5>\\n\\n                    <p-accordion>\\n                        <p-accordionTab [header]=\\\"bh.type\\\">\\n                            <p *ngIf=\\\"bh.description\\\"> {{ bh.description }} </p>\\n                        </p-accordionTab>\\n                    </p-accordion>\\n\\n                    <!-- <strong> Gene Name: </strong> {{ bh.subtype }}<br> -->\\n                    <h5> Antibiotic Mechanism: </h5>\\n                    <p-accordion>\\n                        <p-accordionTab [header]=\\\"bh.mechanism\\\">\\n                            <p *ngIf=\\\"bh.description\\\"> {{ bh.description }} </p>\\n                        </p-accordionTab>\\n                    </p-accordion>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- <hr> -->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/generic/generic.component.html\n// module id = 398\n// module chunks = 0","module.exports = \"<p-growl class=\\\"user_growl\\\" [(value)]=\\\"notification\\\"></p-growl>\\n\\n<div *ngIf=\\\"!render\\\" class=\\\"col-md-0 col-md-offset-0\\\">\\n</div>\\n\\n<div *ngIf=\\\"render\\\">\\n    <!--Left panel-->\\n    <div class=\\\"col-sm-3 \\\">\\n        <!-- <div class=\\\"\\\"> -->\\n        <div *ngIf=\\\"randomARG.status==true\\\" class=\\\"\\\">\\n            <!-- <div class=\\\"col-md-12\\\"> -->\\n\\n            <div class=\\\"box box-solid \\\">\\n                <div class=\\\"box-header with-border\\\">\\n\\n\\n\\n                    <i class=\\\"fa fa-gears\\\"></i>\\n                    <!-- <p *ngIf=\\\"loading\\\"><md-progress-bar mode=\\\"indeterminate\\\"></md-progress-bar></p>  -->\\n                    <h3 class=\\\"box-title\\\"><strong>Gene to validate</strong> </h3>\\n\\n\\n                </div>\\n\\n                <!-- /.box-header -->\\n\\n                <!-- <tour-step class=\\\"intro-tour-hint-wrapper\\\" selector=\\\"step1\\\" order=\\\"1\\\" position=\\\"right\\\">\\n                        <div class=\\\"box box-step\\\">\\n                            <div class=\\\"box-header\\\">\\n                                <h3 class=\\\"box-title\\\">\\n                                    ARG you have to curate\\n                                </h3>\\n                            </div>\\n                            <div class=\\\"box-body\\\">\\n                                This panel shows you the basic information about the antibiotic reistance gene you need to inspect. Note this information may contain errors. Therefore, by comparing this information with the known ARGs databases you will be able to correct or accept\\n                                the current annotation.\\n                            </div>\\n                        </div>\\n                    </tour-step> -->\\n\\n                <div class=\\\"box-body\\\">\\n\\n                    <dl id=\\\"step1\\\" class=\\\"dl\\\">\\n                        <!-- <p> -->\\n                        <!-- </p> -->\\n                        <!-- <p> -->\\n\\n                        <!-- <strong>Gene Name:</strong> -->\\n                        <!-- <span class=\\\"\\\">{{ randomARG.entry.subtype }}</span> -->\\n                        <!-- </p> -->\\n                        <!-- <p> -->\\n                        <!-- <br> -->\\n                        <!-- <strong>Antibiotic Class:</strong> -->\\n                        <!-- <span class=\\\"\\\">{{ randomARG.entry.type }}</span> -->\\n                        <!-- </p> -->\\n                        <!-- <p> -->\\n                        <!-- <br> -->\\n                        <strong>Database:</strong>\\n                        <span class=\\\"\\\">{{ randomARG.entry.database }}</span>\\n                        <!-- </p> -->\\n                        <!-- <p> -->\\n                        <!-- <br>\\n                        <strong data-intro=\\\"step1\\\">Inspected:</strong>\\n                        <span class=\\\"\\\"></span> -->\\n                        <br>\\n                        <strong data-intro=\\\"step1\\\">Gene ID:</strong>\\n                        <span class=\\\"\\\">{{ randomARG.entry.gene_id }} ({{ randomARG.inspected.length }})</span>\\n                        <br>\\n                        <!-- </p> -->\\n                        <!-- <dt>Score:</dt> -->\\n                        <!-- <dd><span class=\\\"badge bg-blue\\\">{{ randomARG.entry.score }}</span></dd> -->\\n                    </dl>\\n\\n                    <div id=\\\"step3\\\">\\n                        <md-slide-toggle (change)=\\\"trainingARGEvent($event)\\\" [checked]=\\\"trainingARGFlag\\\"><strong>Enable Training</strong></md-slide-toggle>\\n                        <p class=\\\"small\\\">Enable this option if this is the first time you enter the website.</p>\\n                    </div>\\n                    <!-- <hr> -->\\n                    <div id=\\\"step4\\\">\\n                        <md-slide-toggle (change)=\\\"selectConflictedArgEvent($event)\\\" [checked]=\\\"conflictedArgSubtypeFlag\\\"><strong>Priority\\n                ARGs</strong></md-slide-toggle>\\n                        <p class=\\\"small\\\">This option selects ARGs with high priority of curation.</p>\\n                    </div>\\n                    <hr>\\n\\n\\n\\n                    <div *ngIf=\\\"loading==false && conflictedArgSubtypeFlag\\\">\\n\\n                        <h4> Conflicted ARGs </h4>\\n                        <p class=\\\"small\\\">This section contains the list of ARGs under the category {{ conflictingARGSubtype.subtype }} that present inconsistences respect its ARG class annotation.</p>\\n                        <!-- <div class=\\\"box-body\\\"> -->\\n                        <!-- <p> <strong>Gene:</strong> <mark>{{ conflictingARGSubtype.subtype }}</mark></p> -->\\n                        <div *ngFor=\\\"let item of conflictingARGSubtype.conflict\\\">\\n                            <strong>{{ item.class }}</strong> {{ item.genes.length }}\\n                        </div>\\n                        <hr>\\n                        <button (click)=\\\"nextGene()\\\" class=\\\"\\\" color=\\\"primary\\\" md-raised-button>Random ARG</button>\\n                        <button (click)=\\\"nextGeneConflictList()\\\" class=\\\"\\\" color=\\\"warn\\\" md-raised-button>Next ARG</button>\\n                        <!-- </div> -->\\n                    </div>\\n\\n                    <div *ngIf=\\\"conflictedArgSubtypeFlag==false && trainingARGFlag==false\\\" class=\\\"col-md-12 text-center\\\">\\n                        <button (click)=\\\"nextGene()\\\" class=\\\"\\\" color=\\\"primary\\\" md-raised-button>Random ARG</button>\\n                    </div>\\n\\n                    <div *ngIf=\\\"trainingARGFlag && conflictedArgSubtypeFlag==false\\\" class=\\\"col-md-12 text-center\\\">\\n                        <button (click)=\\\"trainingARGNextGene()\\\" class=\\\"\\\" color=\\\"primary\\\" md-raised-button>Next ARG</button>\\n                    </div>\\n\\n                    <!-- <div class=\\\"col-md-12 text-right\\\">\\n                            <button (click)=\\\"nextGene()\\\" class=\\\"\\\" color=\\\"red\\\" md-raised-button>Random</button>\\n                        </div> -->\\n\\n\\n                </div>\\n\\n                <!-- /.box-body -->\\n                <!-- </div> -->\\n                <!-- /.box -->\\n            </div>\\n\\n            <!-- <app-comments></app-comments> -->\\n\\n        </div>\\n\\n        <!-- <div class=\\\"col-md-12 box box-solid \\\">\\n\\n                <h4>Note about BitScores</h4>\\n                <p class=\\\"small\\\">A bitscore of 50 is considered significant if the alignment covers at least 90% of the reference sequence</p>\\n                <p class=\\\"small\\\">Bit-score does not depend on database size. The bit-score gives the same value for hits in databases of different sizes and hence can be used for searching in an constantly increasing database.</p>\\n                <p class=\\\"small\\\"> The higher the bitscore, the better the quality of the sequence alignment</p>\\n\\n            </div> -->\\n\\n    </div>\\n\\n\\n    <div class=\\\"col-sm-6 col-sm-offset-0\\\">\\n        <app-explore></app-explore>\\n        <div *ngIf=\\\"randomARG.status==true && loading==false && ARG_display\\\">\\n            <br>\\n            <div *ngFor=\\\"let bh of randomARG.besthit.alignments\\\">\\n                <besthit-metadata-ardb *ngIf=\\\"bh.best_hit_database=='ARDB'\\\"> </besthit-metadata-ardb>\\n                <besthit-metadata-card *ngIf=\\\"bh.best_hit_database=='CARD'\\\"> </besthit-metadata-card>\\n            </div>\\n            <!-- </md-tab> -->\\n\\n            <!-- OTHER DATABASES  -->\\n            <div id=\\\"step9\\\">\\n                <app-generic></app-generic>\\n            </div>\\n\\n            <!-- <h4 *ngIf=\\\"randomARG.entry.database=='UNIPROT'\\\">Metadata</h4> -->\\n\\n            <!--METADATA SECTION-->\\n            <div id=\\\"step6\\\">\\n                <classify-metadata-uniprot *ngIf=\\\"randomARG.entry.database=='UNIPROT'\\\"> </classify-metadata-uniprot>\\n            </div>\\n            <classify-metadata-card> </classify-metadata-card>\\n            <br>\\n            <div>\\n                <div class=\\\"box box-solid \\\">\\n                    <div class=\\\"box-header with-border\\\">\\n                        <h3 class=\\\"box-title\\\"> <strong>Protein sequence</strong> ({{ randomARG.entry.gene_id }}) </h3>\\n                    </div>\\n                    <div class=\\\"box-body\\\">\\n                        <p class=\\\"sequence small\\\"> ><strong>{{randomARG.entry.gene_id}}</strong> <br> {{ randomARG.entry.sequence }}\\n                        </p>\\n                    </div>\\n                </div>\\n            </div>\\n            <br>\\n        </div>\\n\\n        <div id=\\\"step10\\\">\\n            <genome-metadata *ngIf=\\\"randomARG.entry.database=='UNIPROT'\\\"></genome-metadata>\\n            <genome-metadata *ngIf=\\\"randomARG.entry.database=='CARD'\\\"></genome-metadata>\\n            <genome-metadata *ngIf=\\\"randomARG.entry.database=='ARDB'\\\"></genome-metadata>\\n        </div>\\n\\n    </div>\\n\\n\\n    <!-- <div class=\\\"col-sm-3\\\"> -->\\n    <div id=\\\"step11\\\" class=\\\"curate-nav\\\">\\n        <!-- <aside class=\\\"control-sidebar control-sidebar-open\\\"> -->\\n        <app-curate></app-curate>\\n        <!-- </aside> -->\\n    </div>\\n    <!-- </div> -->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/classify.component.html\n// module id = 399\n// module chunks = 0","module.exports = \"<div class=\\\"box box-success\\\">\\n    <div class=\\\"box-header ui-sortable-handle\\\" style=\\\"cursor: move;\\\">\\n        <i class=\\\"fa fa-comments-o\\\"></i>\\n\\n        <h3 class=\\\"box-title\\\">Comments</h3>\\n\\n    </div>\\n    <div class=\\\"slimScrollDiv\\\" style=\\\"position: relative; overflow: hidden; width: auto; height: 180px;\\\">\\n        <div #scrollMe [scrollTop]=\\\"scrollMe.scrollHeight\\\" class=\\\"box-body chat\\\" id=\\\"chat-box\\\" style=\\\"overflow: auto; width: auto; height: 180px;\\\">\\n            <div *ngFor='let message of messages' class=\\\"item\\\">\\n                <img [src]=\\\"message.image\\\" alt=\\\"user image\\\" class=\\\"online\\\">\\n\\n                <p class=\\\"message\\\">\\n                    <strong class=\\\"\\\"> {{message.user}} </strong> (<span>{{message.institution}}</span>) <br>\\n                    <small class=\\\"text-muted\\\"><i class=\\\"fa fa-clock-o\\\"></i> {{message.date}}</small> <br>\\n                    <small class=\\\"text-xs\\\">{{message.message}}</small>\\n                </p>\\n\\n            </div>\\n        </div>\\n        <div class=\\\"slimScrollBar\\\" style=\\\"background: rgb(0, 0, 0); width: 7px; position: absolute; top: 0px; opacity: 0.4; display: none; border-radius: 7px; z-index: 99; right: 1px; height: 184.911px;\\\"></div>\\n        <div class=\\\"slimScrollRail\\\" style=\\\"width: 7px; height: 100%; position: absolute; top: 0px; display: none; border-radius: 7px; background: rgb(51, 51, 51); opacity: 0.2; z-index: 90; right: 1px;\\\"></div>\\n    </div>\\n    <!-- /.chat -->\\n    <div class=\\\"box-footer\\\">\\n        <div class=\\\"input-group\\\">\\n            <!-- <md-input-container class=\\\"col-md-12\\\">\\n                <input type=\\\"text\\\" mdInput placeholder=\\\"User Name\\\" required>\\n            </md-input-container>\\n            <md-input-container class=\\\"col-md-12\\\">\\n                <input type=\\\"text\\\" mdInput placeholder=\\\"Institution\\\" required>\\n            </md-input-container> -->\\n            <input #message class=\\\"form-control\\\" placeholder=\\\"Type message ...\\\" (keydown)=\\\"send_message($event)\\\" required>\\n            <div class=\\\"input-group-btn\\\">\\n                <button (click)=\\\"send_message_click(message)\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/comments/comments.component.html\n// module id = 400\n// module chunks = 0","module.exports = \"<div>\\n    <div class=\\\"box\\\">\\n        <div class=\\\"box-body\\\">\\n            <p class=\\\"small\\\">Please copy and paste this token to the Mturk website.</p>\\n            <strong>Token:</strong> <code *ngIf=\\\"inspectedGenes.length >= classifyComponent.trainingARGTotal+1\\\">{{antibiotic.token}}</code>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"\\\">\\n    <div class=\\\"box box-solid box-primary\\\">\\n        <div class=\\\"box-body\\\">\\n            <p-steps styleClass=\\\"steps-custom\\\" [(activeIndex)]=\\\"activeIndex\\\" [readonly]=\\\"true\\\" [model]=\\\"items\\\"></p-steps>\\n\\n            <div *ngIf=\\\"step1 text-center\\\">\\n\\n                <!-- <div class=\\\"col-md-12\\\"> -->\\n                <h4 class=\\\"text-center\\\"><strong>ARG Annotation</strong></h4>\\n                <p>Please based on your observations add the corresponding data to the form below:</p>\\n\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input type=\\\"text\\\" [formControl]=\\\"groupControl\\\" [mdAutocomplete]=\\\"AGroup\\\" mdInput [(ngModel)]=\\\"antibiotic.group\\\" placeholder=\\\"Gene Name\\\">\\n                </md-input-container>\\n\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input type=\\\"text\\\" mdInput [formControl]=\\\"myControl\\\" [mdAutocomplete]=\\\"AClass\\\" [(ngModel)]=\\\"antibiotic.class\\\" placeholder=\\\"Antibiotic Class\\\">\\n                </md-input-container>\\n\\n                <md-autocomplete #AClass=\\\"mdAutocomplete\\\">\\n                    <md-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\" required>\\n                        {{ option }}\\n                    </md-option>\\n                </md-autocomplete>\\n\\n                <md-autocomplete #AGroup=\\\"mdAutocomplete\\\">\\n                    <md-option *ngFor=\\\"let option of groupFilteredOptions | async\\\" [value]=\\\"option\\\" required>\\n                        {{ option }}\\n                    </md-option>\\n                </md-autocomplete>\\n\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input type=\\\"text\\\" mdInput [(ngModel)]=\\\"antibiotic.mechanism\\\" placeholder=\\\"Antibiotic Mechanism\\\" required>\\n                </md-input-container>\\n\\n                <br><br>\\n\\n                <div class=\\\"col-md-12 text-center\\\">\\n                    <a (click)=\\\"validate(1)\\\" color=\\\"primary\\\" md-raised-button>Next</a>\\n                    <!-- <button (click)=\\\"reportARG()\\\" class=\\\"\\\" color=\\\"red\\\" md-raised-button>Report ARG</button> -->\\n                </div>\\n                <!-- </div> -->\\n\\n            </div>\\n\\n\\n\\n            <div *ngIf=\\\"step2\\\">\\n\\n\\n                <!-- <div class=\\\"col-md-12\\\"> -->\\n                <h4 class=\\\"text-center\\\"><strong>Mobile Genetic Elements</strong></h4>\\n                <div class=\\\"col-md-12\\\">\\n                    <p class=\\\"small\\\">Is there any evidence that suggests the ARG to be carried by any of the following: </p>\\n\\n                    <div *ngFor=\\\"let ht of mge_options\\\">\\n                        <md-checkbox value=\\\"{{ht}}\\\" (change)=\\\"mgeOptions(ht, $event)\\\">{{ ht }}</md-checkbox>\\n                    </div>\\n                    <p>How do you rate this evidence? </p>\\n                    <star-rating-comp (onRatingChange)=\\\"onRatingChange('mge',$event)\\\" [starType]=\\\"'svg'\\\" [rating]=\\\"0\\\" [labelPosition]=\\\"'top'\\\"></star-rating-comp>\\n                    <!-- <p class=\\\"small\\\"> Scores: 1 means there is not evidence and 5 means there is strong evidene that the gene is being carried by any of the three options.</p> -->\\n                </div>\\n\\n                <div class=\\\"col-md-12\\\">\\n                    <h4 class=\\\"text-center\\\"><strong>Pathogenic Genomes</strong></h4>\\n\\n                    <p>Is there evidence of any pathogenic genomes containing the gene? </p>\\n\\n                    <!-- <md-radio-group [(ngModel)]=\\\"antibiotic.pathGenome\\\">\\n                        <md-radio-button value=\\\"1\\\">Yes</md-radio-button> <br>\\n                        <md-radio-button value=\\\"2\\\">Not</md-radio-button> <br>\\n                    </md-radio-group> -->\\n\\n                    <!-- <p>How do you rate this evidence? </p> -->\\n                    <star-rating-comp (onRatingChange)=\\\"onRatingChange('genome',$event)\\\" [starType]=\\\"'svg'\\\" [rating]=\\\"0\\\" [labelPosition]=\\\"'top'\\\"></star-rating-comp>\\n                    <p class=\\\"small\\\">Scores: 1 means there is not evidence whereas 5 means there is strong evidence.</p>\\n                    <hr>\\n\\n                </div>\\n\\n\\n\\n                <div class=\\\"col-md-12 text-center\\\">\\n                    <button (click)=\\\"validate(2)\\\" color=\\\"primary\\\" md-raised-button>Next</button>\\n                </div>\\n                <!-- </div> -->\\n\\n\\n\\n            </div>\\n\\n            <div *ngIf=\\\"step3\\\">\\n                <div class=\\\"col-md-12 text-center\\\">\\n                    <h4>Overall Rating</h4>\\n                </div>\\n                <!-- <div class=\\\"col-md-12\\\"> -->\\n                <!-- <div class=\\\"col-md-12\\\"> -->\\n                <!-- <h4 class=\\\"text-center\\\"><strong>ARG annotation</strong></h4> -->\\n                <!-- <dl class=\\\"dl\\\"> -->\\n                <!-- <h4></h4>\\n                        <strong>ARG Class:</strong>\\n                        <span class=\\\"\\\"> {{ antibiotic.class }} </span>\\n                        <br>\\n\\n                        <strong>ARG Group:</strong>\\n                        <span class=\\\"\\\"> {{ antibiotic.group }} </span>\\n                        <br>\\n\\n                        <strong *ngIf=\\\"!antibiotic.mechanism==null\\\">ARG Mechanism:</strong>\\n                        <span *ngIf=\\\"!antibiotic.mechanism==null\\\">{{ antibiotic.mechanism }} </span> -->\\n\\n                <!-- </dl> -->\\n                <!-- <hr> -->\\n                <!-- </div> -->\\n\\n                <div class=\\\"col-md-12 col-md-offset-0 text-center\\\">\\n                    <p>Please rate the confidence in your observations</p>\\n                    <star-rating-comp (onRatingChange)=\\\"onRatingChange('confidence',$event)\\\" [starType]=\\\"'svg'\\\" [rating]=\\\"0\\\" [labelPosition]=\\\"'top'\\\"></star-rating-comp>\\n                    <hr>\\n                </div>\\n\\n                <div class=\\\"col-md-12 col-md-offset-0 text-center\\\">\\n                    <p>Please rate your level of expertise</p>\\n                    <star-rating-comp (onRatingChange)=\\\"onRatingChange('expertise',$event)\\\" [starType]=\\\"'svg'\\\" [rating]=\\\"0\\\" [labelPosition]=\\\"'top'\\\"></star-rating-comp>\\n                    <hr>\\n                </div>\\n\\n\\n\\n                <!-- <md-input-container class=\\\"col-md-12\\\">\\n                    <p>Please add any relevant comments</p>\\n                    <textarea mdInput [(ngModel)]=\\\"antibiotic.comments\\\" rows=\\\"5\\\"></textarea>\\n                </md-input-container> -->\\n\\n\\n                <div class=\\\"col-md-12 text-center\\\">\\n                    <button (click)=\\\"submitReview()\\\" class=\\\"\\\" color=\\\"green\\\" md-raised-button>Submit</button>\\n                    <button (click)=\\\"validate(3)\\\" class=\\\"\\\" color=\\\"red\\\" md-raised-button>Cancel</button>\\n                </div>\\n\\n\\n                <!-- </div> -->\\n            </div>\\n\\n\\n\\n        </div>\\n\\n    </div>\\n\\n    <div *ngIf=\\\"inspectedGenes.length>0\\\" class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header\\\">\\n            <h3 class=\\\"box-title\\\">Inspected genes: {{ inspectedGenes.length }}</h3>\\n        </div>\\n        <!-- <div class=\\\"box-body\\\">\\n\\n            <span *ngFor=\\\"let item of inspectedGenes\\\" class=\\\"badge\\\">\\n                {{ item }}\\n            </span>\\n        </div> -->\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/curate/curate.component.html\n// module id = 401\n// module chunks = 0","module.exports = \"<div class=\\\"box box-solid \\\">\\n    <div class=\\\"box-body\\\">\\n        <md-input-container class='col-sm-12 col-sm-offset-0'>\\n            <input #keyword type=\\\"search\\\" (keyup.enter)=\\\"search(keyword.value)\\\" mdInput placeholder=\\\"Search term \\\" [(ngModel)]=\\\"search_keyword\\\" />\\n        </md-input-container>\\n    </div>\\n</div>\\n\\n<div class=\\\"col-md-12\\\" *ngIf=\\\"loading_search\\\">\\n    <div class=\\\"sk-folding-cube\\\">\\n        <div class=\\\"sk-cube1 sk-cube\\\"></div>\\n        <div class=\\\"sk-cube2 sk-cube\\\"></div>\\n        <div class=\\\"sk-cube4 sk-cube\\\"></div>\\n        <div class=\\\"sk-cube3 sk-cube\\\"></div>\\n    </div>\\n</div>\\n\\n<!-- table with the search information -->\\n<!-- <div class=\\\"col-md-12\\\"> -->\\n<div *ngIf=\\\"search_on\\\">\\n    <a class=\\\"close-btn\\\" [style.cursor]=\\\"'pointer'\\\" (click)=\\\"close_search()\\\"> <i class=\\\"fa fa-times-circle fa-lg text-danger\\\"></i>\\n    </a>\\n    <p-dataTable [value]=\\\"search_general_result\\\" [rows]=\\\"5\\\" [paginator]=\\\"true\\\">\\n        <p-column>\\n            <ng-template pTemplate=\\\"header\\\">\\n                <th>Antibiotic Class</th>\\n            </ng-template>\\n            <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <strong> {{gene.type}} </strong>\\n            </ng-template>\\n        </p-column>\\n        <p-column>\\n            <ng-template pTemplate=\\\"header\\\">\\n                <th>Gene Name</th>\\n            </ng-template>\\n            <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <u>\\n          <a [style.color]=\\\"'blue'\\\" [style.cursor]=\\\"'pointer'\\\" (click)=\\\"explore_gene(gene)\\\"> {{gene.subtype}} </a>\\n\\n        </u>\\n\\n\\n            </ng-template>\\n        </p-column>\\n        <p-column>\\n            <ng-template pTemplate=\\\"header\\\">\\n                <th>Sequences</th>\\n            </ng-template>\\n            <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <!-- <strong> {{gene.count}} </strong> -->\\n                <span *ngFor=\\\"let _db of gene.db_counts\\\">\\n          <a [style.color]=\\\"'green'\\\" [style.cursor]=\\\"'pointer'\\\"> <u> {{_db['database']}} </u></a>\\n          <strong> ({{ _db['counts'] }}) </strong>\\n        </span>\\n            </ng-template>\\n        </p-column>\\n        <!-- <p-column>\\n        <ng-template pTemplate=\\\"header\\\">\\n            <th>Databases</th>\\n        </ng-template>\\n        <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n            <span *ngFor=\\\"let _db of gene.db_counts\\\"> {{_db['database']}}\\n                        <span class=\\\"badge\\\" bg-color=\\\"red\\\"> {{ _db['counts'] }} </span>\\n            </span>\\n        </ng-template>\\n    </p-column> -->\\n    </p-dataTable>\\n\\n    <br>\\n\\n    <p *ngIf=\\\"selected_gene.sequences\\\" class=\\\"text-center\\\"> {{search_index+1}} of {{ selected_gene.sequences.length }}\\n        <a [style.cursor]=\\\"'pointer'\\\" (click)=\\\"explore_next()\\\"> <i class=\\\"fa fa-arrow-alt-circle-right fa-lg\\\"></i> Next\\n\\n        </a>\\n    </p>\\n\\n</div>\\n<!-- </div> -->\\n<!-- <div class=\\\"col-md-12\\\">\\n        <span class='badge'>\\n          <strong> UNIPROT </strong>\\n        </span>\\n\\n        <span class='badge bg-green'>\\n          <strong> CARD/ARDB </strong>\\n        </span>\\n\\n        <span [style.cursor]=\\\"'pointer'\\\" *ngFor=\\\"let _gene of selected_gene.sequences\\\">\\n        <span class=\\\"badge\\\" *ngIf=\\\"_gene[1]=='UNIPROT'; else other_db\\\"> {{ _gene[0] }} </span>\\n\\n        <ng-template #other_db>\\n            <span class='badge bg-green'> {{ _gene[0] }} </span>\\n        </ng-template>\\n        </span>\\n\\n    </div> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/explore/explore.component.html\n// module id = 402\n// module chunks = 0","module.exports = \"<div class=\\\"box box-solid\\\">\\n    <div class=\\\"box-header with-border\\\">\\n        <i class=\\\"fa fa-tag\\\"></i>\\n        <h3 class=\\\"box-title\\\"><strong> PATRIC  </strong>database</h3>\\n    </div>\\n    <div *ngIf=\\\"plasmid.length > 0\\\" class=\\\"box-body\\\">\\n        <h4>Plasmids</h4>\\n        <p>\\n            Prevalence of <strong> {{ randomARG.entry.gene_id }} </strong> in plasmids from the <a href=\\\"\\\">PATRIC</a> database. Values represent the number of plasmids that contain this particular ARG and its AMR phenotype: resistant (<strong>R</strong>),\\n            susceptible (\\n            <strong>S</strong>), intermediate (<strong>I</strong>).\\n        </p>\\n        <p>\\n            ARGs were aligned against the plasmids from PATRIC database and only genes with an identity > 80% and a coverage of 90% were selected.\\n        </p>\\n        <br><br>\\n\\n        <div *ngFor=\\\"let _plasmid of plasmid\\\">\\n\\n            <p-dataTable [value]=\\\"_plasmid['taxa-counts']\\\" [rows]=\\\"5\\\" [paginator]=\\\"true\\\">\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Specices</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        <i> {{gene.taxa}} </i>\\n                    </ng-template>\\n                </p-column>\\n\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Counts</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        <strong> {{gene.plasmids}} </strong>\\n                    </ng-template>\\n                </p-column>\\n\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>R</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        <strong> {{gene.resistant}} </strong>\\n                    </ng-template>\\n                </p-column>\\n\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>S</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        <strong> {{gene.susceptible}} </strong>\\n                    </ng-template>\\n                </p-column>\\n\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>I</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        <strong> {{gene.intermediate}} </strong>\\n                    </ng-template>\\n                </p-column>\\n\\n            </p-dataTable>\\n\\n        </div>\\n\\n    </div>\\n\\n\\n    <div *ngIf=\\\"randomARG.pathogen.status==true\\\" class=\\\"box-body\\\">\\n        <h4>Pathogens</h4>\\n        <p>\\n            This section shows the proportion of pathogen bacteria that contains the gene {{ randomARG.entry['gene_id'] }} ( <strong>{{ randomARG.entry['subtype'] }}</strong>). Colors represent the quality of the evidence from very weak to very strong.\\n        </p>\\n        <p>\\n            <span class=\\\"label bg-red\\\">Very Weak</span>\\n            <span class=\\\"label bg-yellow\\\">Weak</span>\\n            <span class=\\\"label bg-green\\\">Middle</span>\\n            <span class=\\\"label bg-blue\\\">Strong</span>\\n            <span class=\\\"label bg-black\\\">Very Strong</span>\\n        </p>\\n\\n        <p>\\n            <strong>Pathogen Score:</strong>\\n            <span class=\\\"badge bg-red\\\" *ngIf=\\\"genomeCount<10\\\">\\n                                            {{(genomeCount).toFixed(1)}}%\\n                                        </span>\\n            <span class=\\\"badge bg-yellow\\\" *ngIf=\\\"genomeCount<20 && genomeCount>10\\\">\\n                                            {{(genomeCount).toFixed(1)}}%\\n                                        </span>\\n            <span class=\\\"badge bg-green\\\" *ngIf=\\\"genomeCount<30 && genomeCount>20\\\">\\n                                            {{(genomeCount).toFixed(1)}}%\\n                                        </span>\\n            <span class=\\\"badge bg-blue\\\" *ngIf=\\\"genomeCount<60 && genomeCount>30\\\">\\n                                            {{(genomeCount).toFixed(1)}}%\\n                                        </span>\\n            <span class=\\\"badge bg-black\\\" *ngIf=\\\"genomeCount<90 && genomeCount>60\\\">\\n                                            {{(genomeCount).toFixed(1)}}%\\n                                        </span>\\n        </p>\\n        <hr> The gene entry {{randomARG.entry.gene_id}} (<strong>{{ randomARG.entry.subtype }}</strong>) has been aligned to the <a href=\\\"https://www.patricbrc.org/\\\">PATRIC</a> database using strict cutoffs to ensure the existence of the gene (>80% identity,\\n        >90% coverage).\\n        <br><br><strong>{{ randomARG['pathogen'].genomes_count }}</strong> genomes contain this particular gene ({{randomARG.entry.gene_id}}). From those,\\n        <strong>{{ randomARG.pathogen.genomes_pathogen }}</strong> (\\n        <span class=\\\"badge bg-red\\\" *ngIf=\\\"genomeCount<10\\\">\\n                            {{(genomeCount).toFixed(1)}}%\\n                        </span>\\n        <span class=\\\"badge bg-yellow\\\" *ngIf=\\\"genomeCount<20 && genomeCount>10\\\">\\n                            {{(genomeCount).toFixed(1)}}%\\n                        </span>\\n        <span class=\\\"badge bg-green\\\" *ngIf=\\\"genomeCount<30 && genomeCount>20\\\">\\n                            {{(genomeCount).toFixed(1)}}%\\n                        </span>\\n        <span class=\\\"badge bg-blue\\\" *ngIf=\\\"genomeCount<60 && genomeCount>30\\\">\\n                            {{(genomeCount).toFixed(1)}}%\\n                        </span>\\n        <span class=\\\"badge bg-black\\\" *ngIf=\\\"genomeCount<90 && genomeCount>60\\\">\\n                            {{(genomeCount).toFixed(1)}}%\\n                        </span>) genomes are labeled as <u>pathogens</u>.\\n    </div>\\n\\n\\n</div>\\n\\n\\n<div *ngIf=\\\"renderMobile\\\" class=\\\"box box-solid\\\">\\n\\n    <div class=\\\"box-header with-border \\\">\\n        <i class=\\\"fa fa-tag\\\"></i>\\n        <h3 class=\\\"box-title\\\"><strong>ACLAME</strong> database </h3>\\n    </div>\\n\\n    <div class=\\\"box-body\\\">\\n        <p>\\n            This section contains evidence of ARGs being present in mobile-associated elements from the <a href=\\\"\\\">ACLAME</a> database.\\n        </p>\\n\\n    </div>\\n\\n    <div *ngFor=\\\"let item of randomARG.mobile\\\" class=\\\"box-body\\\">\\n        <div *ngIf=\\\"item.status==true && item.identity.mean>50\\\" class=\\\"\\\">\\n            <div class=\\\"box-body\\\">\\n                <dl class=\\\"dl-horizontal\\\">\\n                    <dt>Type:</dt>\\n                    <dd>\\n                        <strong><p *ngIf=\\\"item.type=='proph'\\\">Prophages</p></strong>\\n                        <strong><p *ngIf=\\\"item.type=='plasmid'\\\">Plasmids</p></strong>\\n                        <strong><p *ngIf=\\\"item.type=='vir'\\\">Viruses</p></strong>\\n                    </dd>\\n                    <dt>Count:</dt>\\n                    <dd> <span> {{ item.count }} </span></dd>\\n                    <dt>Similarity:</dt>\\n                    <dd> <span class=\\\"badge bg-{{ item.identity.color }}\\\"> {{ item.identity.mean }}%  {{ '&plusmn;' }} {{item.identity.std}} </span></dd>\\n                    <dt>BitScore:</dt>\\n                    <dd> <span class=\\\"badge bg-{{ item.bitscore.color }}\\\"> {{ item.bitscore.mean }} {{ '&plusmn;' }} {{item.bitscore.std}} </span></dd>\\n                    <dt>Coverage:</dt>\\n                    <dd> <span class=\\\"badge bg-{{ item.coverage.color }}\\\"> {{  (100*item.coverage.mean/randomARG.entry['length']).toFixed(0) }}% {{ '&plusmn;' }} {{(100*item.coverage.std/randomARG.entry['length']).toFixed(0)}} </span></dd>\\n                    <dt>Description:</dt>\\n                    <dd>{{ item.mge_description }}</dd>\\n                    <dt>Gene Aclame ID:</dt>\\n                    <dd>{{ item.mge_id }}</dd>\\n                </dl>\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"col-md-12\\\" [style.height]=\\\"'200px'\\\"></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/genomes/genome.component.html\n// module id = 403\n// module chunks = 0","module.exports = \"<div style=\\\"overflow: auto\\\" class=\\\"\\\">\\n    <h3>Instructions</h3>\\n    <p>\\n        The goal of this platform is to validate and complement the information under the <strong> Current Annotation </strong> panel by looking at the data presented in the main section. Then, you will have to fill the form uder the <strong>ARG Annotation</strong>        section.\\n    </p>\\n    <h4>1. Get familiar with the environment</h4>\\n    <p>\\n        In order to understand the structure of this website, please, click on the <strong>Tour</strong> button.\\n    </p>\\n    <h4>2. New user</h4>\\n    <p class=\\\"\\\">\\n        If this is the first time you enter the website, you are required to perform two classifications. To do so, click the <strong>New User</strong> button and perform three ARG annotations.\\n    </p>\\n\\n    <h4>3. How to get a reward </h4>\\n    <p>\\n        Once you have done with the training, you are ready to start. First, click on <strong>Priority ARGs</strong> button and perform one annotation. After you done with the annotation you will get a token number. Please, copy and paste this token to\\n        the Amazon Mturk website and submit the form. If you plan to make another Hit <strong><span style=\\\"color:red\\\">DO NOT close the ARG-miner website.</span></strong> Other case you will have to do the training again.\\n    </p>\\n\\n    <h4>4. Perform a new Hit</h4>\\n    <p>\\n        First, open a new hit in Amazon Mturk, then, get back to this webpage and just click on the <strong>Other ARG Group</strong> button. Perform the annotation and submit the token to Amazon Mturk.\\n    </p>\\n\\n    <strong><h4 style=\\\"color:red\\\"> Be Aware! </h4></strong>\\n    <p>\\n        If you don't do the mandatory training, the system <strong>will not</strong> prompt the token.\\n    </p>\\n    <p>\\n        If the annotation contains random, unrelated or nonsense words, the HIT will be rejected.\\n    </p>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/instructions/instructions.component.html\n// module id = 404\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/ardb/ardb.component.html\n// module id = 405\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/card/card.component.html\n// module id = 406\n// module chunks = 0","module.exports = \"<!-- <div *ngIf=\\\"randomARG.metadata.status==true\\\" class=\\\"\\\">\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header\\\">\\n            <h3 class=\\\"panel-title\\\"> <i class=\\\"fa fa-bug\\\"></i> <strong> Lineage (<a class=\\\"panel-title\\\" href=\\\"https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?id={{ randomARG.metadata.organism.taxonomy }}\\\">NCBI Taxonomy </a>) </strong></h3>\\n        </div>\\n\\n        <div class=\\\"box-body\\\">\\n            <div class=\\\"dl-vertical\\\">\\n                <span *ngFor=\\\"let item of randomARG.metadata.organism.lineage\\\">\\n          {{ item }} <strong>&rsaquo;</strong>\\n        </span>\\n            </div>\\n            <p *ngIf=\\\"randomARG.metadata.organism.names\\\"> <strong>Organism: </strong>{{ randomARG.metadata.organism.names[0].value }}</p>\\n        </div>\\n\\n    </div>\\n\\n</div> -->\\n\\n\\n\\n<div *ngIf=\\\"render\\\" class=\\\"\\\">\\n    <div class=\\\"box box-solid \\\">\\n        <div class=\\\"box-header with-border\\\">\\n            <i class=\\\"fa fa-tag\\\"></i>\\n\\n            <h3 class=\\\"box-title\\\"><strong>Metadata</strong></h3>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body\\\">\\n            <p *ngIf=\\\"randomARG.metadata.gene\\\"> <strong *ngIf=\\\"randomARG.metadata.gene[0].name\\\">Gene Name: </strong> <span class=\\\"\\\" *ngIf=\\\"randomARG.metadata.gene[0].name\\\"> {{ randomARG.metadata.gene[0].name.value }} </span></p>\\n            <p *ngIf=\\\"randomARG.metadata.protein.recommendedName\\\" class=\\\"\\\" data-original-title=\\\"\\\"> <strong>Protein: </strong> <span class=\\\"\\\"> {{ randomARG.metadata.protein.recommendedName.fullName.value }} </span> </p>\\n            <p *ngIf=\\\"randomARG.metadata.proteinExistence\\\" data-original-title=\\\"\\\"> <strong>Protein Existence: </strong> <span class=\\\"\\\">  {{ randomARG.metadata.proteinExistence }} </span> </p>\\n\\n            <p><strong>Sequence length (AA)</strong>: <span> {{ randomARG.entry['length'] }}</span></p>\\n\\n            <hr>\\n\\n            <span *ngFor=\\\"let item of randomARG.metadata.keywords\\\" class=\\\"badge bg-blue\\\" data-original-title=\\\"\\\"> {{ item.value }} </span>\\n\\n        </div>\\n        <!-- /.box-body -->\\n    </div>\\n    <!-- /.box -->\\n</div>\\n\\n\\n<div *ngIf=\\\"render\\\" class=\\\"\\\">\\n    <div class=\\\"box box-solid \\\">\\n        <div class=\\\"box-header with-border\\\">\\n            <i class=\\\"fa fa-object-group\\\"></i>\\n\\n            <h3 class=\\\"box-title\\\"><strong>Description</strong></h3>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body\\\">\\n            <dl class=\\\"dl-horizontal\\\">\\n                <div *ngFor=\\\"let item of randomARG.metadata.comments\\\">\\n                    <dt *ngIf=\\\"item.text\\\"> {{ item.type }}:</dt>\\n                    <dd *ngIf=\\\"item.text\\\"> {{ item.text[0].value }}</dd>\\n                    <br>\\n                </div>\\n            </dl>\\n\\n        </div>\\n        <!-- /.box-body -->\\n    </div>\\n    <!-- /.box -->\\n</div>\\n\\n\\n<div *ngIf=\\\"render\\\" class=\\\"\\\">\\n    <md-expansion-panel class=\\\"box box-solid\\\">\\n        <!-- <div class=\\\"box box-solid\\\"> -->\\n        <md-expansion-panel-header>\\n            <md-panel-title>\\n                <h4>Gene Ontology</h4>\\n            </md-panel-title>\\n            <md-panel-description>\\n                Functions and Biological Process\\n            </md-panel-description>\\n        </md-expansion-panel-header>\\n\\n\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body\\\">\\n            <dl class=\\\"dl-horizontal\\\">\\n                <div *ngFor=\\\"let item of randomARG.metadata.dbReferences\\\">\\n                    <dt *ngIf=\\\"item.type=='GO'\\\"> {{ item.id }}:</dt>\\n                    <dd *ngIf=\\\"item.type=='GO'\\\"> {{ item.properties.term }} <span class=\\\"badge bg-lightblue\\\">{{ item.properties.source }} </span></dd>\\n                    <br *ngIf=\\\"item.type=='GO'\\\">\\n                </div>\\n            </dl>\\n\\n        </div>\\n        <!-- /.box-body -->\\n    </md-expansion-panel>\\n    <!-- /.box -->\\n</div>\\n\\n<!-- <div *ngIf=\\\"randomARG.metadata.features\\\" class=\\\"\\\">\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header with-border\\\">\\n            <i class=\\\"fa fa-object-group\\\"></i>\\n\\n            <h3 class=\\\"box-title\\\"><strong>Domains</strong></h3>\\n        </div>\\n\\n        <div class=\\\"box-body\\\">\\n\\n            <table class=\\\"table table-bordered text-center\\\">\\n                <tbody>\\n                    <tr>\\n                        <th><span class=\\\"\\\">Type</span></th>\\n                        <th><span class=\\\"\\\">Position(s)</span></th>\\n                        <th><span class=\\\"\\\">Description</span></th>\\n                        <th><span class=\\\"\\\">Evidence</span></th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let item of randomARG.metadata.features\\\">\\n                        <th> <span *ngIf=\\\"item.type!=undefined\\\"> {{ item.type }}</span></th>\\n                        <th> <span *ngIf=\\\"item.begin!=undefined\\\">{{ item.begin }}-{{ item.end }}</span></th>\\n                        <th><span *ngIf=\\\"item.description!=undefined\\\">{{ item.description }}</span></th>\\n                        <th *ngIf=\\\"item.evidences\\\">\\n                            <span *ngIf=\\\"item.evidences[0].source\\\">{{ item.evidences[0].source.name }}</span>\\n                            <a *ngIf=\\\"item.evidences[0].source\\\" href=\\\"{{ item.evidences[0].source.url }}\\\">({{ item.evidences[0].source.id}})</a>\\n                        </th>\\n                    </tr>\\n\\n                </tbody>\\n            </table>\\n\\n        </div>\\n\\n    </div>\\n\\n</div> -->\\n\\n\\n<div *ngIf=\\\"render\\\" class=\\\"\\\">\\n    <md-expansion-panel class=\\\"box box-solid\\\">\\n        <!-- <div class=\\\"box box-solid\\\"> -->\\n        <md-expansion-panel-header>\\n            <md-panel-title>\\n                <h4>References</h4>\\n            </md-panel-title>\\n            <md-panel-description>\\n                Scientific papers that support the gene {{ randomARG.entry.gene_id }}\\n            </md-panel-description>\\n        </md-expansion-panel-header>\\n\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body\\\">\\n            <dl class=\\\"dl-horizontal\\\">\\n                <div *ngFor=\\\"let item of randomARG.metadata.references\\\">\\n                    <strong *ngIf=\\\"item.citation.authors\\\"> {{ item.citation.authors[0] }} {{ item.citation.authors[1] }} et al., </strong> {{ item.citation.title }} {{item.citation.publication.submissionDatabase}} ({{ item.citation.publicationDate }})\\n\\n                    <div *ngFor=\\\"let ref of item.citation.dbReferences\\\">\\n                        <strong>{{ ref.type }}</strong>: {{ ref.id }}\\n                        <div *ngIf=\\\"ref.abstract\\\">\\n\\n                            <span *ngFor=\\\"let kw of ref.abstract\\\">\\n                <span *ngIf=\\\"kw.type=='paragraph'\\\">{{ kw.text }}</span> <strong class=\\\"\\\" *ngIf=\\\"kw.type=='keyword'\\\">{{ kw.text }}</strong>\\n                            </span>\\n\\n                        </div>\\n\\n                    </div>\\n\\n                </div>\\n            </dl>\\n\\n        </div>\\n        <!-- /.box-body -->\\n        <!-- </div> -->\\n    </md-expansion-panel>\\n    <!-- /.box -->\\n</div>\\n\\n<div *ngIf=\\\"renderError\\\">\\n    <div class=\\\"alert alert-info alert-dismissible\\\">\\n        <h4><i class=\\\"icon fa fa-ban\\\"></i> {{ randomARG.entry.database }} Alert!</h4>\\n        <strong>There is a problem with this request!</strong>\\n        <p>\\n            {{ randomARG.metadata.errorMessage[0] }}\\n        </p>\\n        <p>\\n            Please take a look at the provided information to make the annotation.\\n        </p>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/uniprot/uniprot.component.html\n// module id = 407\n// module chunks = 0","module.exports = \"<div class=\\\"col-md-10 col-md-offset-1\\\">\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-body\\\">\\n            <h4>ARGminer database download</h4>\\n            <p>Here you can download the current and previous versions of ARGminer </p>\\n            <hr>\\n            <div *ngFor=\\\"let item of databases.reverse()\\\">\\n                <h4> <strong> {{ item.version }} </strong></h4>\\n                <h5>Release Comments</h5>\\n                <p> {{ item.comments }}</p>\\n\\n                <table class=\\\"table table-responsive table-bordered text-center\\\">\\n                    <tbody>\\n                        <tr class=\\\"table-success\\\">\\n                            <th>Download Links</th>\\n                            <th>Release date</th>\\n                            <th>Total ARG sequences</th>\\n                            <th>Known ARGs</th>\\n                            <th>Inspected ARGs</th>\\n                            <th>Potential ARGs</th>\\n                            <th>User validations</th>\\n                        </tr>\\n\\n                        <tr>\\n                            <td class=\\\"text-left\\\">\\n                                <a [href]=\\\"'http://bench.cs.vt.edu/ftp/argminer/release/'+item.version+'.A.fasta'\\\" target=\\\"_blank\\\">ARGminer-A</a>\\n                                <br> <a [href]=\\\"'http://bench.cs.vt.edu/ftp/argminer/release/'+item.version+'.B.fasta'\\\" target=\\\"_blank\\\">ARGminer-B</a>\\n                            </td>\\n                            <td>{{ item.release_date }}</td>\\n                            <td>{{ item.total_args + item.potential_args }}</td>\\n                            <td>{{ item.total_args }}</td>\\n                            <td>{{ item.inspected_args }}</td>\\n                            <td>{{ item.potential_args }}</td>\\n                            <td>{{ item.user_inspections }}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n\\n                <hr>\\n\\n            </div>\\n\\n            <h4>Structure of the database</h4>\\n            <div class=\\\"\\\">\\n                ARGminer is released as a two fasta files\\n                <ul>\\n                    <li>\\n                        <strong>ARGminer-vxx.A.fasta:</strong> Contains ARGs that have been inspected by either ARGminer or have been reported in other curated databases (CARD, Resfinder, ARG-ANNOT, SARGs)\\n                    </li>\\n                    <li>\\n                        <strong> ARGminer-vxx.B.fasta:</strong> This database contains all ARGs from ARGminer, including the potential ARGs that need inspection from UniProt. In most of the cases the UniProt genes lack of a proper gene nomenclature.\\n                    </li>\\n                </ul>\\n                To consider higher diversity, it is recommended to use the B database.\\n                <hr> The headers of the fasta file contain the ARG information (>GeneID|antibiotic classes|ARG name|Mechanism). See example below: <br> <br>\\n            </div>\\n            <pre>>ALX99516.1|multidrug;beta-lactam|AdeC|efflux pumps\\nMSKSTIVSRGLILSTLSIALVACVNMQAPQPAITSHIPQNFSQNHSGKMIAEKSYK</pre>\\n        </div>\\n        <div class=\\\"box-footer text-center\\\">\\n            <p class=\\\"small\\\">*ARGminer uses the antibiotic resistance annotation from <a href=\\\"https://bench.cs.vt.edu/deeparg/\\\" target=\\\"_blank\\\">deepARG-DB</a>, <a href=\\\"https://card.mcmaster.ca/home\\\" target=\\\"_blank\\\">CARD</a>, <a href=\\\"https://ardb.cbcb.umd.edu/\\\" target=\\\"_blank\\\">ARDB</a>,\\n                <a href=\\\"http://www.uniprot.org/\\\" target=\\\"_blank\\\">UniProt</a>,\\n                <a href=\\\"https://megares.meglab.org/\\\" target=\\\"_blank\\\">MEGARes</a>,\\n                <a href=\\\"http://aclame.ulb.ac.be/\\\" target=\\\"_blank\\\">ACLAME</a>, <a href=\\\"https://www.patricbrc.org/\\\" target=\\\"_blank\\\">PATRIC</a> and <a href=\\\"https://www.ncbi.nlm.nih.gov/pubmed/\\\" target=\\\"_blank\\\">PubMed</a> databases. ARGminer is free for\\n                academic use, in any othercase, please check each one of the cited resources.</p>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/database/database.component.html\n// module id = 408\n// module chunks = 0","module.exports = \"<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\" width=\\\"425\\\"></p-confirmDialog>\\n<br>\\n\\n\\n<masonry [options]=\\\"{ transitionDuration: '1s' }\\\">\\n    <masonry-brick *ngFor=\\\"let item of masonryItems \\\" class=\\\"brick col-md-4\\\">\\n\\n        <div class=\\\"box\\\">\\n            <md-card class=\\\"example-card\\\">\\n                <h4 class=\\\"title-post\\\" (click)=\\\"go_to_question(item)\\\">\\n                    <strong> <u> {{item.title}} </u> </strong>\\n                </h4>\\n\\n                <md-card-header>\\n                    <div md-card-avatar md-card-avatar [style.backgroundSize]=\\\"'cover'\\\" [style.backgroundImage]=\\\" 'url('+ item.user_image + ')' \\\"></div>\\n                    <md-card-subtitle>\\n                        <span> <strong> {{item.user}} </strong> - {{item.time_ago}}</span> <br>\\n                        <span class=\\\"badge\\\" *ngFor='let tag of item.tags'> <strong> {{tag.name}} </strong> </span>\\n\\n                    </md-card-subtitle>\\n                </md-card-header>\\n\\n                <md-card-content class=\\\"box-fixed-height\\\">\\n                    <br>\\n                    <div class=\\\"text-body-box ui-summary\\\" [innerHTML]=\\\"item.body.substring(0, 200).replace('h2', 'p').replace('h1', 'p').replace('<br>', '') \\\"></div>\\n                </md-card-content>\\n\\n                <md-card-actions>\\n                    <button (click)=\\\"go_to_question(item)\\\" md-button>VIEW</button>\\n                    <button (click)=\\\"edit_question(item._id)\\\" md-button [disabled]=\\\"session.get('user')['email'] !== item.email\\\">EDIT</button>\\n                    <button (click)='follow_post(item)' md-button [disabled]=\\\"session.get('online')==0\\\">{{ item.am_I_following}}</button>\\n                    <button (click)='remove_post(item._id, item.index)' md-button [disabled]=\\\"session.get('user')['email'] !== item.email\\\">REMOVE</button>\\n\\n                </md-card-actions>\\n\\n            </md-card>\\n        </div>\\n    </masonry-brick>\\n</masonry>\\n\\n<div class=\\\"col-md-12 text-center \\\">\\n    <a (click)=\\\"get_more_posts()\\\" class=\\\"btn btn-primary \\\"> <strong> Load More </strong></a>\\n</div>\\n\\n\\n\\n<div class=\\\"col-md-12 \\\">\\n    <br><br><br><br>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forum/all-questions/all-questions.component.html\n// module id = 409\n// module chunks = 0","module.exports = \"<div class=\\\"col-md-12\\\" *ngIf='session.get(\\\"online\\\") >=1'>\\n    <br><br><br>\\n    <div class=\\\"panel no-gutter\\\">\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <h4> <strong> Title </strong></h4>\\n            <md-input-container class=\\\"col-md-12 no-gutter\\\">\\n                <input mdInput [(value)]='title' placeholder=\\\"What is your ARG question, try to be specific!\\\" #ftitle>\\n            </md-input-container>\\n\\n\\n            <h4> <strong> Body </strong></h4>\\n            <!-- <p-editor [(ngModel)]=\\\"text\\\" ></p-editor> -->\\n            <quill-editor [style]=\\\"{'height':'450px'}\\\" [modules]=\\\"editor_modules\\\" [(ngModel)]=\\\"text\\\"></quill-editor>\\n\\n            <br><br>\\n\\n            <div class=\\\"col-md-12 no-gutter tag-line\\\">\\n                <h4> <strong> Tags </strong></h4>\\n            </div>\\n\\n            <div class=\\\"col-md-12 no-gutter\\\">\\n                <p-chips [(ngModel)]=\\\"tags\\\"></p-chips>\\n            </div>\\n\\n            <div class=\\\"col-md-12 no-gutter\\\">\\n                <br>\\n                <a (click)=\\\"update_post(ftitle.value)\\\" class=\\\"btn btn-primary\\\">Update</a>\\n                <a routerLink=\\\"/forum\\\" class=\\\"btn btn-danger\\\">Cancel</a>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forum/edit-question/edit-question.component.html\n// module id = 410\n// module chunks = 0","module.exports = \"<div class=\\\"col-md-12 col-md-offset-0\\\">\\n\\n\\n    <div class=\\\"col-md-12\\\">\\n        <a routerLink=\\\"new_question\\\" class=\\\"btn btn-primary pull-right\\\"> <strong> Create a new Post </strong></a>\\n        <a routerLink=\\\"/forum\\\" class=\\\"btn btn-info pull-right\\\">All Posts</a>\\n        <!-- <a (click)='view_search_bar()' class=\\\"btn btn-info pull-right\\\">Search</a> -->\\n    </div>\\n\\n    <div *ngIf=\\\"!hide_search\\\" class=\\\"col-md-12\\\">\\n        <div class=\\\"box-body\\\">\\n            <h4> Type and search by keywords </h4>\\n            <p-chips (onAdd)=\\\"search()\\\" (onRemove)=\\\"search()\\\" [(ngModel)]=\\\"keywords\\\"></p-chips>\\n            <span (click)='go_to_option(option)' class='badge bg-success hand' *ngFor=\\\"let option of navigation_options\\\">\\n        <strong>{{ option.label }}</strong></span>\\n        </div>\\n\\n        <div class=\\\"box-body\\\">\\n            <a class='a-link' (click)='go_to_blog_help()'>How to use ARGminer blog?</a> <br>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n\\n<div class=\\\"col-md-12\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\\n<div class=\\\"col-md-3 no-gutter\\\">\\n    <br><br><br>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forum/forum.component.html\n// module id = 411\n// module chunks = 0","module.exports = \"<div class=\\\"col-md-12\\\" *ngIf='session.get(\\\"online\\\") >=1'>\\n    <div class=\\\"col-md-12 post-form\\\">\\n        <!-- <div class=\\\"panel-body\\\"> -->\\n\\n        <div class=\\\"col-md-12 no-gutter\\\">\\n\\n            <md-input-container class=\\\"col-md-12 no-gutter\\\">\\n                <h3> Title </h3>\\n                <input mdInput placeholder=\\\"\\\" #ftitle>\\n            </md-input-container>\\n        </div>\\n\\n        <div class=\\\"col-md-12 no-gutter\\\">\\n            <!-- <h3> Body </h3> -->\\n            <div class=\\\"box\\\">\\n                <quill-editor [style]=\\\"{'height':'450px'}\\\" [modules]=\\\"editor_modules\\\" [(ngModel)]=\\\"text\\\"></quill-editor>\\n            </div>\\n        </div>\\n        <br><br>\\n\\n        <div class=\\\"col-md-12 no-gutter tag-line\\\">\\n            <h3> Categories</h3>\\n            <p>Click in at least one of the following categories: </p>\\n            <div class=\\\"categories-block\\\" *ngFor=\\\"let key of categories\\\">\\n                <span (click)='add_category(key)' class=\\\"badge bg-green categories\\\"> <strong> {{key.name}} </strong></span>\\n            </div>\\n            <br><br>\\n        </div>\\n\\n        <div class=\\\"col-md-12 no-gutter tag-line\\\">\\n            <h3> Tags </h3>\\n            <p-chips [(ngModel)]=\\\"keywords\\\"></p-chips>\\n            <p>And any other relevant keyword you consider relevant for your post. To add a tag <u>type the keyword and hit\\n          enter</u>.</p>\\n        </div>\\n\\n        <div class=\\\"col-md-12 no-gutter\\\">\\n            <br>\\n            <a (click)=\\\"post_question(ftitle.value)\\\" class=\\\"btn btn-primary\\\">Publish</a>\\n            <a routerLink=\\\"/forum\\\" class=\\\"btn btn-danger\\\">Cancel</a>\\n        </div>\\n        <!-- </div> -->\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forum/new-question/new-question.component.html\n// module id = 412\n// module chunks = 0","module.exports = \"\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forum/search/search.component.html\n// module id = 413\n// module chunks = 0","module.exports = \"<div class=\\\"col-md-12\\\">\\n    <br><br>\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"panel ui-view-post\\\">\\n\\n            <div class=\\\"panel-body\\\">\\n                <h2> <strong> {{post.title}} </strong> </h2>\\n                <span class=\\\"small\\\"> {{post.date}}</span><br>\\n                <span class=\\\"badge bg-yellow\\\" *ngFor='let tag of post.tags'>\\n          <strong>\\n            {{tag.name}}\\n          </strong>\\n        </span>\\n                <hr>\\n\\n                <!-- <hr> -->\\n                <!-- <quill-editor [style]=\\\"{'height':'auto'}\\\" [(ngModel)]=\\\"post.body\\\" [minLength]=\\\"3\\\" [required]=\\\"true\\\" [readOnly]=\\\"true\\\" [modules]=\\\"{toolbar: false}\\\"></quill-editor> -->\\n                <div class=\\\"text-body-box\\\" [innerHTML]=\\\"post.body\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"col-md-12\\\">\\n    <div *ngFor='let comment of post.comments' class=\\\"col-md-12\\\">\\n        <div class=\\\"panel no-gutter\\\">\\n            <div class=\\\"panel-body\\\">\\n                <div class=\\\"box-body chat\\\" id=\\\"chat-box\\\" style=\\\"overflow: auto; width: auto; height: auto;\\\">\\n                    <div class=\\\"item\\\">\\n                        <img alt=\\\"user image\\\" class=\\\"online\\\" [src]=\\\"'https://api.adorable.io/avatars/'+comment.email\\\">\\n                        <p class=\\\"message\\\">\\n                            <strong class=\\\"\\\"> {{comment.user}} </strong> (<span>{{comment.institution}}</span>) <br>\\n                            <small class=\\\"text-muted\\\"><i class=\\\"fa fa-clock-o\\\"></i> {{comment.date}}</small>\\n                            <i *ngIf=\\\"session.get('user')['email'] === comment.email\\\" (click)='remove_comment(comment)' class=\\\"fa fa-trash icon-options\\\" aria-hidden=\\\"true\\\"></i> <br>\\n\\n                            <quill-editor [style]=\\\"{'height':'auto'}\\\" [(ngModel)]=\\\"comment.body\\\" [minLength]=\\\"3\\\" [required]=\\\"true\\\" [readOnly]=\\\"true\\\" [modules]=\\\"{toolbar: false, imageResize: true}\\\"></quill-editor>\\n\\n                        </p>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"col-md-12\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"panel no-gutter\\\">\\n\\n            <div class=\\\"panel-body\\\">\\n                <h4> <strong>Your Comment</strong> </h4>\\n                <br>\\n                <!-- <p-editor [(ngModel)]=\\\"comment_body\\\" [style]=\\\"{'height':'250px'}\\\"></p-editor> -->\\n                <quill-editor [style]=\\\"{'height':'auto'}\\\" [modules]=\\\"editor_modules\\\" [(ngModel)]=\\\"comment_body\\\"></quill-editor>\\n                <hr>\\n                <a (click)='add_comment()' class=\\\"btn btn-primary\\\">Post your answer/comment</a>\\n                <a routerLink=\\\"/forum\\\" class=\\\"btn btn-danger\\\">Cancel</a>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forum/selected-question/selected-question.component.html\n// module id = 414\n// module chunks = 0","module.exports = \"<div class=\\\"container-fluid home-font\\\">\\n\\n    <div class=\\\"jumbotron\\\">\\n        <div class=\\\"row\\\">\\n\\n\\n            <div class=\\\"col-md-6\\\">\\n                <h1 class=\\\"display-3\\\">ARGminer</h1>\\n                <p class=\\\"lead\\\">\\n                    <strong>A</strong>ntibiotic <strong>R</strong>esistance <strong>G</strong>ene <strong>miner</strong> database\\n                </p>\\n                <hr class=\\\"my-4\\\">\\n                <p>An online resource for the inspection and curation of ARGs based on crowdsourcing as well as a platform to promote interaction and collaboration for the ARG scientific community.</p>\\n                <a routerLink=\\\"/classify\\\" class=\\\"btn btn-primary btn-large\\\">Inspect ARGs</a>\\n                <a routerLink=\\\"/database\\\" class=\\\"btn btn-primary btn-large\\\">Download</a>\\n                <a routerLink=\\\"/forum\\\" class=\\\"btn btn-primary btn-large\\\">Have questions?</a>\\n                <a routerLink=\\\"/login\\\" class=\\\"btn btn-primary btn-large\\\">Register</a>\\n            </div>\\n\\n            <div class=\\\"col-md-6 btn-holder\\\">\\n                <img src=\\\"assets/images/ARGminer_pipeline.svg\\\" alt=\\\"pipeline\\\">\\n                <!-- <a href='https://www.freepik.com/free-vector/ten-workflow-slide-templates-set_1371515.htm'>Designed by\\n              Katemangostar</a> -->\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n\\n    <hr class=\\\"my-4\\\">\\n\\n\\n    <div class=\\\"row\\\">\\n        <div *ngFor='let item of info' class=\\\"col-md-3 no-gutter\\\">\\n            <div class=\\\"panel panel-primary no-gutter\\\">\\n                <h3 class=\\\"panel-heading\\\">{{item.title}}</h3>\\n                <div class=\\\"panel-body\\\">\\n                    <h5 class=\\\"panel-title\\\">{{item.subtitle}}</h5>\\n                    <h6 class=\\\"panel-subtitle text-muted\\\">{{item.subsubtitle}}</h6>\\n                </div>\\n                <img [src]=\\\"item.image\\\" alt=\\\"Card image\\\">\\n                <!-- <a href='https://www.freepik.com/free-vector/hands-putting-puzzle-pieces-together_795183.htm'>Designed by Freepik</a> -->\\n                <div class=\\\"panel-body\\\">\\n                    <p class=\\\"panel-text\\\">\\n                        {{item.description}}\\n                    </p>\\n                </div>\\n\\n                <div class=\\\"panel-body\\\">\\n                    <a routerLink=\\\"/classify\\\" class=\\\"card-link\\\">Inspect ARGs</a>\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n    <hr class=\\\"my-4\\\">\\n\\n    <div class=\\\"row\\\">\\n        <!-- <a href='https://www.freepik.com/free-vector/modern-timeline-graphic-in-blue-and-green-tones_829202.htm'>Designed by Freepik</a> -->\\n        <div class=\\\"col-md-9\\\">\\n            <!-- <app-home-database></app-home-database> -->\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n            <!-- <a class=\\\"twitter-timeline\\\" data-height=\\\"400\\\" href=\\\"https://twitter.com/MetagenomicsVT?ref_src=twsrc%5Etfw\\\"></a> -->\\n        </div>\\n\\n    </div>\\n    <hr>\\n\\n\\n\\n</div>\\n\\n\\n\\n<div class=\\\"container-fluid\\\">\\n    <footer class=\\\"footer\\\" style=\\\"background:white\\\">\\n        <br><br>\\n\\n        <div class=\\\"col-md-2 col-md-offset-4 funding\\\" style=\\\"width:7%\\\">\\n            <img src=\\\"assets/images/nsf.jpg\\\" alt=\\\"\\\">\\n        </div>\\n        <div class=\\\"col-md-2 funding\\\">\\n            <img src=\\\"assets/images/vt.jpg\\\" alt=\\\"\\\">\\n        </div>\\n        <div class=\\\"col-md-2 funding\\\">\\n            <img src=\\\"assets/images/heard.png\\\" alt=\\\"\\\" style=\\\"width:60%\\\">\\n        </div>\\n        <br><br><br><br>\\n        <div class=\\\"col-md-12\\\"></div>\\n\\n    </footer>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 415\n// module chunks = 0","module.exports = \"<p>\\n  news works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/news/news.component.html\n// module id = 416\n// module chunks = 0","module.exports = \"<div class=\\\"col-md-3 col-md-offset-4\\\">\\n    <p-growl class=\\\"user_growl\\\" [(value)]=\\\"notification\\\"></p-growl>\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header text-center\\\">\\n            <h3 class=\\\"box-title\\\">Login</h3>\\n        </div>\\n        <div class=\\\"box-body\\\">\\n            <!-- <form class=\\\"example-form\\\"> -->\\n            <md-input-container class=\\\"col-md-12\\\">\\n                <input mdInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\" #uemail>\\n                <md-error *ngIf=\\\"emailFormControl.hasError('pattern')\\\">\\n                    Please enter a valid email address\\n                </md-error>\\n                <md-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n                    Email is <strong>required</strong>\\n                </md-error>\\n            </md-input-container>\\n            <br>\\n            <md-input-container class=\\\"col-md-12\\\">\\n                <input mdInput type=\\\"password\\\" placeholder=\\\"Password\\\" [formControl]=\\\"passwordFormControl\\\" #upass>\\n                <md-error *ngIf=\\\"passwordFormControl.hasError('pattern')\\\">\\n                    Please enter a valid email address\\n                </md-error>\\n                <md-error *ngIf=\\\"passwordFormControl.hasError('required')\\\">\\n                    Password is <strong>required</strong>\\n                </md-error>\\n            </md-input-container>\\n\\n            <!-- </form> -->\\n        </div>\\n\\n        <div class=\\\"box-footer text-center\\\">\\n            <button (click)=\\\"login(uemail.value, upass.value)\\\" class=\\\"bg-blue\\\" md-raised-button>Login</button>\\n            <button routerLink=\\\"/signup\\\" class=\\\"bg-green\\\" md-raised-button>Create Account</button>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = 417\n// module chunks = 0","module.exports = \"<div *ngIf='session.get(\\\"online\\\") >=1'>\\n\\n\\n    <div class=\\\"col-md-12 col-md-offset-0\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <md-card class=\\\"example-card\\\">\\n\\n                <md-card-header>\\n                    <div md-card-avatar [style.backgroundSize]=\\\"'cover'\\\" [style.backgroundImage]=\\\" 'url('+ user_image + ')' \\\">\\n                    </div>\\n                    <md-card-subtitle>\\n                        <span> <strong> {{ session.get('user')['user'] }} </strong></span> <br>\\n                        <span> {{ session.get('user')['institution'] }}</span> <br>\\n                        <span class=\\\"\\\"> {{ session.get('user')['email'] }} </span> <br>\\n                        <strong *ngIf=\\\"session.get('online')===2\\\"> Administrator</strong> <br>\\n                        <span>account created on: {{ session.get('user')['date'] }}</span> <br>\\n                    </md-card-subtitle>\\n                </md-card-header>\\n\\n\\n                <md-card-content class=\\\"box-fixed-height\\\">\\n                    <app-profile-stats></app-profile-stats>\\n                </md-card-content>\\n            </md-card>\\n        </div>\\n\\n    </div>\\n\\n\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <md-card class=\\\"example-card\\\">\\n                <h3>Settings</h3>\\n                <md-card-content class=\\\"box-fixed-height\\\">\\n                    <div class=\\\"ui-g ui-fluid\\\">\\n\\n                        <h4 class=\\\"first\\\">Change User Information</h4>\\n                        <div class=\\\"ui-g-12 ui-md-12\\\">\\n                            <div class=\\\"ui-inputgroup\\\">\\n                                <input type=\\\"text\\\" pInputText [placeholder]=\\\"info.user\\\" [(ngModel)]=\\\"info.user\\\">\\n                                <button (click)=\\\"change_info('user')\\\" pButton type=\\\"button\\\" label=\\\"Change\\\"></button>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"ui-g-12 ui-md-12\\\">\\n                            <div class=\\\"ui-inputgroup\\\">\\n                                <input type=\\\"text\\\" pInputText [placeholder]=\\\"info.institution\\\" [(ngModel)]=\\\"info.institution\\\">\\n                                <button (click)=\\\"change_info('institution')\\\" pButton type=\\\"button\\\" label=\\\"Change\\\"></button>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"ui-g-12 ui-md-12\\\">\\n                            <div class=\\\"ui-inputgroup\\\">\\n                                <input type=\\\"text\\\" pInputText [placeholder]=\\\"info.email\\\" [(ngModel)]=\\\"info.email\\\">\\n                                <button (click)=\\\"change_info('email')\\\" pButton type=\\\"button\\\" label=\\\"Change\\\"></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </md-card-content>\\n\\n                <md-card-content class=\\\"box-fixed-height\\\">\\n                    <h4>Change Password</h4>\\n                    <div class=\\\"ui-g ui-fluid\\\">\\n                        <div class=\\\"ui-g-12 ui-md-12\\\">\\n                            <div class=\\\"ui-inputgroup\\\">\\n                                <input type=\\\"password\\\" pPassword [(ngModel)]=\\\"pass.pass1\\\" placeholder='current password' />\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"ui-g-12 ui-md-12\\\">\\n                            <div class=\\\"ui-inputgroup\\\">\\n                                <input type=\\\"password\\\" pPassword [(ngModel)]=\\\"pass.pass2\\\" placeholder='new password' />\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"ui-g-12 ui-md-12\\\">\\n                            <div class=\\\"ui-inputgroup\\\">\\n                                <input type=\\\"password\\\" pPassword [(ngModel)]=\\\"pass.pass3\\\" placeholder='re-enter password' />\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"ui-g-12 ui-md-12\\\">\\n                            <div class=\\\"ui-inputgroup\\\">\\n                                <button (click)=\\\"change_password()\\\" pButton type=\\\"button\\\" label=\\\"Change Password\\\" class=\\\"ui-button-rounded\\\"></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </md-card-content>\\n\\n            </md-card>\\n        </div>\\n\\n    </div>\\n\\n\\n    <div *ngIf=\\\"session.get('online')===2\\\" class=\\\"col-md-12\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <md-card class=\\\"example-card\\\">\\n                <h3>Administration</h3>\\n                <md-card-content class=\\\"box-fixed-height\\\">\\n                    <div class=\\\"ui-g ui-fluid\\\">\\n\\n                        <h4 class=\\\"first\\\">Add or remove user from administration</h4>\\n                        <div class=\\\"col-md-12 col-md-offset-0\\\">\\n                            <div class=\\\"ui-inputgroup\\\">\\n                                <input type=\\\"text\\\" pInputText placeholder=\\\"user email\\\" [(ngModel)]=\\\"add_admin_email\\\">\\n                                <button (click)=\\\"search_user_by_email()\\\" pButton type=\\\"button\\\" label=\\\"Search User\\\"></button>\\n                            </div>\\n\\n                            <div *ngIf=\\\"new_admin_user\\\">\\n                                <br>\\n                                <ul class=\\\"list-group list-group-unbordered\\\">\\n                                    <li class=\\\"list-group-item\\\">\\n                                        <b>User Name</b> <a class=\\\"pull-right\\\">{{ new_admin_user.user }}</a>\\n                                    </li>\\n                                    <li class=\\\"list-group-item\\\">\\n                                        <b>User Score</b> <a class=\\\"pull-right\\\">{{ new_admin_user.views }}</a>\\n                                    </li>\\n                                    <li class=\\\"list-group-item\\\">\\n                                        <b>User Institution</b> <a class=\\\"pull-right\\\">{{ new_admin_user.institution }}</a>\\n                                    </li>\\n                                    <li class=\\\"list-group-item\\\">\\n                                        <b>User email</b> <a class=\\\"pull-right\\\">{{ new_admin_user.email }}</a>\\n                                    </li>\\n                                </ul>\\n\\n                                <button class=\\\"text-center\\\" (click)=\\\"confirm_administrator(2)\\\" pButton type=\\\"button\\\" label=\\\"Confirm User as Administrator\\\"></button>\\n                                <br><br>\\n                                <button class=\\\"text-center\\\" (click)=\\\"confirm_administrator(1)\\\" pButton type=\\\"button\\\" label=\\\"Remove User from Administration\\\"></button>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n\\n\\n                </md-card-content>\\n\\n            </md-card>\\n        </div>\\n\\n    </div>\\n\\n\\n    <div class=\\\"col-md-12\\\">\\n        <br><br><br><br><br><br><br><br><br><br><br>\\n        <br><br><br><br><br><br><br><br><br><br><br>\\n    </div>\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/profile.component.html\n// module id = 418\n// module chunks = 0","module.exports = \"<ul class=\\\"list-group list-group-unbordered\\\">\\n    <li class=\\\"list-group-item\\\">\\n        <b>ARGminer User Score</b> <a class=\\\"pull-right\\\">{{ stats.score }}</a>\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n        <b>Published Posts</b> <a class=\\\"pull-right\\\">{{ stats.posts }}</a>\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n        <b>Inspected ARGs</b> <a class=\\\"pull-right\\\"> {{ stats.inspections }}</a>\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n        <b>Post views</b> <a class=\\\"pull-right\\\"> {{ stats.views }}</a>\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n        <b>Post Comments</b> <a class=\\\"pull-right\\\"> {{ stats.comments }}</a>\\n    </li>\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/stats/stats.component.html\n// module id = 419\n// module chunks = 0","module.exports = \"<div class=\\\"col-md-3 col-md-offset-4\\\">\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header text-center\\\">\\n            <br>\\n            <h3 class=\\\"box-title\\\">Create an Account</h3>\\n        </div>\\n        <div class=\\\"box-body\\\">\\n            <form class=\\\"example-form\\\">\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input mdInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\" #uemail>\\n                    <md-error *ngIf=\\\"emailFormControl.hasError('pattern')\\\">\\n                        Please enter a valid email address\\n                    </md-error>\\n                    <md-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n                        Email is <strong>required</strong>\\n                    </md-error>\\n                </md-input-container>\\n\\n                <!-- name -->\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input mdInput placeholder=\\\"Name\\\" [formControl]=\\\"nameFormControl\\\" #uname>\\n                    <md-error *ngIf=\\\"nameFormControl.hasError('pattern')\\\">\\n                        Please enter a valid name\\n                    </md-error>\\n                    <md-error *ngIf=\\\"nameFormControl.hasError('required')\\\">\\n                        Name is <strong>required</strong>\\n                    </md-error>\\n                </md-input-container>\\n\\n                <!-- institution -->\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input mdInput placeholder=\\\"Institution\\\" [formControl]=\\\"institutionFormControl\\\" #uinstitution>\\n                    <md-error *ngIf=\\\"institutionFormControl.hasError('pattern')\\\">\\n                        Please enter a valid institution\\n                    </md-error>\\n                    <md-error *ngIf=\\\"institutionFormControl.hasError('required')\\\">\\n                        Institution is <strong>required</strong>\\n                    </md-error>\\n                </md-input-container>\\n\\n                <!-- password -->\\n                <br>\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input mdInput type=\\\"password\\\" placeholder=\\\"Password\\\" [formControl]=\\\"passwordFormControl\\\" #upass>\\n                    <md-error *ngIf=\\\"passwordFormControl.hasError('pattern')\\\">\\n                        Please enter a valid password\\n                    </md-error>\\n                    <md-error *ngIf=\\\"passwordFormControl.hasError('required')\\\">\\n                        Password is <strong>required</strong>\\n                    </md-error>\\n                    <md-error *ngIf=\\\"passwordFormControl.hasError('minlength')\\\">\\n                        Password is <strong>minimum length is 8 characters</strong>\\n                    </md-error>\\n                </md-input-container>\\n\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input mdInput type=\\\"password\\\" placeholder=\\\"Confirm password\\\" [formControl]=\\\"password2FormControl\\\" #upass2>\\n                    <md-error *ngIf=\\\"password2FormControl.hasError('pattern')\\\">\\n                        Please enter a valid password\\n                    </md-error>\\n                    <md-error *ngIf=\\\"password2FormControl.hasError('required')\\\">\\n                        Password is <strong>required</strong>\\n                    </md-error>\\n                    <md-error *ngIf=\\\"password2FormControl.hasError('minlength')\\\">\\n                        Password is <strong>minimum length is 8 characters</strong>\\n                    </md-error>\\n                </md-input-container>\\n\\n            </form>\\n        </div>\\n\\n        <div class=\\\"box-footer text-center\\\"> <button (click)=\\\"signup(uemail.value, uname.value, uinstitution.value, upass.value, upass2.value)\\\" class=\\\"bg-blue\\\" md-raised-button>Sign Up</button></div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signup/signup.component.html\n// module id = 420\n// module chunks = 0"],"sourceRoot":""}