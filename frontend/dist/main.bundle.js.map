{"version":3,"sources":["webpack:///./src/app/about/about.component.ts","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/services/data.service.ts","webpack:///./src/app/classify/instructions/instructions.component.ts","webpack:///./src/app/database/database.component.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/services/admin.service.ts","webpack:///./src/services/ncbi.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/admin/visualize.class.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/classify/besthit/ardb/ardb.component.ts","webpack:///./src/app/classify/besthit/card/card.component.ts","webpack:///./src/app/classify/besthit/generic/generic.component.ts","webpack:///./src/app/classify/classify-routing.module.ts","webpack:///./src/app/classify/classify.module.ts","webpack:///./src/app/classify/curate/curate.component.ts","webpack:///./src/app/classify/curate/score.class.ts","webpack:///./src/app/classify/genomes/Charts.ts","webpack:///./src/app/classify/genomes/genome.component.ts","webpack:///./src/app/classify/metadata/ardb/ardb.component.ts","webpack:///./src/app/classify/metadata/card/card.component.ts","webpack:///./src/app/classify/metadata/uniprot/uniprot.component.ts","webpack:///./src/app/database/database-routing.module.ts","webpack:///./src/app/database/database.module.ts","webpack:///./src/app/home/home-routing.module.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/about/about.component.css","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/app.component.css","webpack:///./src/app/classify/besthit/ardb/ardb.component.css","webpack:///./src/app/classify/besthit/card/card.component.css","webpack:///./src/app/classify/besthit/generic/generic.component.css","webpack:///./src/app/classify/classify.component.css","webpack:///./src/app/classify/curate/curate.component.css","webpack:///./src/app/classify/genomes/genome.component.css","webpack:///./src/app/classify/instructions/instructions.component.css","webpack:///./src/app/classify/metadata/ardb/ardb.component.css","webpack:///./src/app/classify/metadata/card/card.component.css","webpack:///./src/app/classify/metadata/uniprot/uniprot.component.css","webpack:///./src/app/database/database.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/app/classify/classify.component.ts","webpack:///./src/app/about/about.component.html","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/classify/besthit/ardb/ardb.component.html","webpack:///./src/app/classify/besthit/card/card.component.html","webpack:///./src/app/classify/besthit/generic/generic.component.html","webpack:///./src/app/classify/classify.component.html","webpack:///./src/app/classify/curate/curate.component.html","webpack:///./src/app/classify/genomes/genome.component.html","webpack:///./src/app/classify/instructions/instructions.component.html","webpack:///./src/app/classify/metadata/ardb/ardb.component.html","webpack:///./src/app/classify/metadata/card/card.component.html","webpack:///./src/app/classify/metadata/uniprot/uniprot.component.html","webpack:///./src/app/database/database.component.html","webpack:///./src/app/home/home.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/about/about.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { AdminService } from '../../services/admin.service';\nimport { DataService } from '../../services/data.service';\n\nimport { ComplexPieChart } from './visualize.class' \n\nimport {FormControl, Validators} from '@angular/forms';\n\nconst EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css'],\n  providers: [\n    ComplexPieChart,\n  ]\n})\nexport class AdminComponent implements OnInit {\n\n  private curatedARGs: Array<Object>;\n  private argClassChart: any;\n  private argGroupChart: any;\n  private argMechanismChart: any;\n  private wScore: any;\n  private weights: Array<number>;\n  private ARG: Object;\n  private ARGindex: any;\n  public online: boolean;\n  private emailFormControl: any;\n  private passwordFormControl: any;\n  private databaseVersion: string;\n  private databaseComments: string;\n  private datetime = new Date(0);\n\n\n  constructor(\n    private adminService: AdminService,\n    private dataService: DataService,\n  ) { }\n\n  ngOnInit() {\n\n\n\n    this.emailFormControl = new FormControl('', [\n      Validators.required,\n      Validators.pattern(EMAIL_REGEX)]\n    );\n\n    this.passwordFormControl = new FormControl('', [\n      Validators.required]\n    );\n\n    this.online = false;\n    this.databaseVersion = '';\n    this.databaseComments = '';\n    this.ARGindex=0;\n    this.getARG(this.ARGindex);\n    \n  }\n\n  acceptAnnotation(){\n    this.adminService.updateGene(this.ARG)\n      .subscribe( res => {\n        this.ARGindex += 1;\n        this.getARG(this.ARGindex);\n      })\n  }\n\n  updateConflictingARGs(){\n    this.adminService.updateConfilctingARGs()\n      .subscribe( res => {\n\n      })\n  }\n\n  login(email: string, password: string){\n    this.adminService.login({email: email, password: password})\n      .subscribe( res => {\n        // console.log(res);\n        this.online = res['token'];\n      });\n  }\n\n  upgradeDataBase(version: string, comments:string){\n    this.adminService.upgradeDatabase({version:version, comments: comments})\n      .subscribe( res => {\n        // console.log(res,'123456')\n        this.databaseVersion = null;\n        this.databaseComments = null;\n      });\n  }\n\n  getARG(idx: any){\n    this.argClassChart = new ComplexPieChart();\n    this.argGroupChart = new ComplexPieChart();\n    this.argMechanismChart = new ComplexPieChart();\n    this.wScore = 0;\n    this.weights = [1, 1, 1, 1, 1, 1, 1]; // [class, group, mechanism, mge, pathogen, expertise, confidence]\n    // this.ARGindex += 1;\n\n    this.adminService.getCuratedARGs(idx)\n    .subscribe(res => {\n      this.curatedARGs = res;\n      // console.log(this.curatedARGs[0]['inspected']);\n      this.argClassChart.draw(this.curatedARGs[0]['inspected'], 'class');\n      this.argGroupChart.draw(this.curatedARGs[0]['inspected'], 'group');\n      this.argMechanismChart.draw(this.curatedARGs[0]['inspected'], 'mechanism');\n\n      this.wScore = ( this.weights[0]*this.argClassChart.bestCategoryCounts/this.argClassChart.totalCategoryCounts +\n                    this.weights[1]*this.argGroupChart.bestCategoryCounts/this.argGroupChart.totalCategoryCounts +\n                    this.weights[2]*this.argMechanismChart.bestCategoryCounts/this.argMechanismChart.totalCategoryCounts +\n                    this.weights[3]*this.argClassChart.mge/(5*this.argClassChart.totalCategoryCounts) +\n                    this.weights[4]*this.argClassChart.pathogen/(5*this.argClassChart.totalCategoryCounts) +\n                    this.weights[5]*this.argClassChart.confidenc[ this.argClassChart.bestCategory ]/(5*this.argClassChart.totalCategoryCounts) + \n                    this.weights[6]*this.argClassChart.expertc[ this.argClassChart.bestCategory ]/(5*this.argClassChart.totalCategoryCounts) ).toFixed(2);\n      this.ARG = {\n        \"gene_id\": this.curatedARGs[0]['entry']['gene_id'],\n        \"type\": this.argClassChart.bestCategory,\n        \"subtype\": this.argGroupChart.bestCategory,\n        \"mechanism\": this.argMechanismChart.bestCategory,\n        \"score\": this.wScore,\n        \"MGEScore\": this.argClassChart.mge/(5*this.argClassChart.totalCategoryCounts),\n        \"pathogen_score\": this.argClassChart.pathogen/(5*this.argClassChart.totalCategoryCounts)\n      }\n      this.ARGindex += 1;\n\n      // console.log(this.curatedARGs[0])\n\n    });\n  }\n\n  search(keyword: string){\n    let indx = '0';\n    this.argClassChart = new ComplexPieChart();\n    this.argGroupChart = new ComplexPieChart();\n    this.argMechanismChart = new ComplexPieChart();\n    this.wScore = 0;\n    \n    this.dataService.searchAPI(keyword, indx)\n      .subscribe(response =>{\n        console.log(response)\n        this.curatedARGs = [response];\n        // console.log(this.curatedARGs[0]['inspected']);\n        this.argClassChart.draw(this.curatedARGs[0]['inspected'], 'class');\n        this.argGroupChart.draw(this.curatedARGs[0]['inspected'], 'group');\n        this.argMechanismChart.draw(this.curatedARGs[0]['inspected'], 'mechanism');\n  \n        this.wScore = ( this.weights[0]*this.argClassChart.bestCategoryCounts/this.argClassChart.totalCategoryCounts +\n                      this.weights[1]*this.argGroupChart.bestCategoryCounts/this.argGroupChart.totalCategoryCounts +\n                      this.weights[2]*this.argMechanismChart.bestCategoryCounts/this.argMechanismChart.totalCategoryCounts +\n                      this.weights[3]*this.argClassChart.mge/(5*this.argClassChart.totalCategoryCounts) +\n                      this.weights[4]*this.argClassChart.pathogen/(5*this.argClassChart.totalCategoryCounts) +\n                      this.weights[5]*this.argClassChart.confidenc[ this.argClassChart.bestCategory ]/(5*this.argClassChart.totalCategoryCounts) + \n                      this.weights[6]*this.argClassChart.expertc[ this.argClassChart.bestCategory ]/(5*this.argClassChart.totalCategoryCounts) ).toFixed(2);\n        this.ARG = {\n          \"gene_id\": this.curatedARGs[0]['entry']['gene_id'],\n          \"type\": this.argClassChart.bestCategory,\n          \"subtype\": this.argGroupChart.bestCategory,\n          \"mechanism\": this.argMechanismChart.bestCategory,\n          \"score\": this.wScore,\n          \"MGEScore\": this.argClassChart.mge/(5*this.argClassChart.totalCategoryCounts),\n          \"pathogen_score\": this.argClassChart.pathogen/(5*this.argClassChart.totalCategoryCounts)\n        }\n    });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/admin.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Location }   from '@angular/common';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\n\n\n@Injectable()\nexport class DataService {\n  \n  ARG: Object;\n  ATYPE: any;\n  host: string; \n  baseUrl: string;\n  randomConflictingArgSubtype: Object;\n  \n  constructor ( private http:Http,\n                private location: Location\n              ){\n    \n    if(location['_platformStrategy']._platformLocation._location.hostname == \"localhost\"){\n      this.baseUrl = location['_platformStrategy']._platformLocation._location.protocol + '//' + location['_platformStrategy']._platformLocation._location.hostname+\":5001\"\n    }else{\n      this.baseUrl = location['_platformStrategy']._platformLocation._location.protocol + '//' + location['_platformStrategy']._platformLocation._location.hostname+\"/argpedia_api\"\n    }\n    \n    \n    this.ARG = [];\n    this.randomConflictingArgSubtype = [];\n    \n  }\n\n  getRandomConflictingArgSubtype(){\n    return this.http.get(this.baseUrl+'/get/subtype/random/')\n      .map( res=> {\n        this.randomConflictingArgSubtype = res.json();\n      })\n  }\n\n  getRandomKnownARG() {\n    // console.log(this.baseUrl)\n    return this.http.get(this.baseUrl+'/get/arg/random/')\n      .map(res => {\n        try {\n          this.ARG = res.json()\n        } catch (error) {\n          this.ARG = {\"status\":false}\n        }\n        \n      })\n  }\n\n  searchAPI(keyword: string, index: string){\n    return this.http.get(this.baseUrl+'/get/search/?keyword='+keyword.replace(/\\s/g,'')+'&index='+index)\n      .map(res => {\n        return res.json()\n      })\n  }\n\n  getKnownARGInfo(gene_id: string){\n    return this.http.get(this.baseUrl+'/get/arg/info/'+gene_id)\n      .map(res => {\n        this.ARG = res.json()\n      })\n  }\n\n  getListAntibioticClass(){\n    return this.http.get(this.baseUrl+'/get/antibiotic/class')\n      .map(res => {\n        this.ATYPE = res.json()\n      })\n  }\n\n  getListAntibioticGroup(){\n    return this.http.get(this.baseUrl+'/get/antibiotic/group')\n      .map(res => {\n        this.ATYPE = res.json()\n      })\n  }\n\n  insertCuration(curation: Object){\n    curation['gene_id'] = this.ARG['entry']['gene_id'];\n    console.log(curation)\n    return this.http.post(this.baseUrl+'/post/curation', curation)\n      .map(res => {\n        return res.json()\n      })\n  }\n\ngetDatabaseList(){\n  return this.http.get(this.baseUrl+'/get/database/list')\n    .map( res => {\n      return res.json();\n    })\n}\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/data.service.ts","import { Component, OnInit } from '@angular/core';\nimport { Inject } from '@angular/core';\nimport {MdDialog, MdDialogRef, MD_DIALOG_DATA} from '@angular/material';\n\n// modal reference\nimport { ClassifyComponent } from '../classify.component'\n\n@Component({\n  selector: 'app-instructions',\n  templateUrl: './instructions.component.html',\n  styleUrls: ['./instructions.component.css']\n})\n\nexport class InstructionsComponent {\n\n  constructor(\n    public dialogRef: MdDialogRef<ClassifyComponent>,\n    @Inject(MD_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/instructions/instructions.component.ts","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-database',\n  templateUrl: './database.component.html',\n  styleUrls: ['./database.component.css']\n})\nexport class DatabaseComponent implements OnInit {\n  public databases: Object;\n  \n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit() {\n    this.dataService.getDatabaseList()\n      .subscribe(response => {\n        this.databases = response;\n      })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/database/database.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Location }   from '@angular/common';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\n\n\n@Injectable()\nexport class AdminService {\n  \n  baseUrl: string;\n  \n  constructor ( private http:Http,\n                private location: Location\n              ){\n    \n    if(location['_platformStrategy']._platformLocation._location.hostname == \"localhost\"){\n      this.baseUrl = location['_platformStrategy']._platformLocation._location.protocol + '//' + location['_platformStrategy']._platformLocation._location.hostname+\":5001\"\n    }else{\n      this.baseUrl = location['_platformStrategy']._platformLocation._location.protocol + '//' + location['_platformStrategy']._platformLocation._location.hostname+\"/argpedia_api\"\n    }\n    \n    \n  }\n\n\n  // ADMIN SECTION\n\n  getCuratedARGs(ixg: any){\n    return this.http.get(this.baseUrl+\"/admin/inspect/arg/\"+ixg)\n      .map( res => {\n        return res.json();\n      });\n  }\n\n  search(keyword: any){\n    return this.http.get(this.baseUrl+\"/admin/inspect/token/\"+keyword)\n      .map( res => {\n        return res.json();\n      });\n  }\n\n  updateGene(fields: object){\n    return this.http.post(this.baseUrl+\"/admin/update/arg/\", fields)\n      .map( res=>{\n        return res.json();\n      });\n  }\n\n  updateConfilctingARGs(){\n    return this.http.get(this.baseUrl+\"/admin/update/conflict/arg/\")\n      .map( res => {\n        return res.json();\n      });\n  }\n\n  login(cred: any){\n    return this.http.post(this.baseUrl+\"/admin/login/\", cred)\n      .map( res => {\n          return res.json();\n      });\n  }\n\n  upgradeDatabase(cred: any){\n    return this.http.post(this.baseUrl+\"/admin/upgrade/database/\", cred)\n      .map( res => {\n          return res.json();\n      });\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/admin.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\n\n\n@Injectable()\nexport class NcbiService {\n  \n  reference: any;\n  \n  constructor (private http:Http){\n\n  }\n\n  getPubMed(pubMedID: string) {\n    return this.http.get('https://www.ncbi.nlm.nih.gov/CBBresearch/Lu/Demo/RESTful/tmTool.cgi/BioConcept/'+pubMedID+'/JSON/')\n      .map(res => {\n        // this.reference = res.json()\n        // console.log(res.json())\n        try {\n          return res.json()\n        } catch (error) {\n          console.log(res)\n          return res.json()\n        }\n        \n      })\n  }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/ncbi.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 252;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 252\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","export class ComplexPieChart {\n    \n    greeting: string;\n    data: any;\n    colorScheme: any;\n    showLegend: boolean;\n    explodeSlices: boolean;\n    doughnut: boolean;\n    gradient: boolean;\n    showLabels: boolean;\n    ready: boolean;\n    dummy: any;\n    bestCategory: string;\n    mge: number;\n    pathogen: number;\n    bestCategoryCounts: any;\n    confidenc: any;\n    expertc: any;\n    totalCategoryCounts: number;\n\n    constructor(){\n        this.data = [];\n        this.totalCategoryCounts = 0;\n        this.bestCategoryCounts = 0;\n        this.confidenc = {};\n        this.expertc = {};\n        this.mge = 0;\n        this.pathogen = 0;\n        this.showLegend = false;\n        this.explodeSlices = false;\n        this.doughnut = false;\n        this.gradient = true;\n        this.showLabels = true;\n        this.bestCategory = \"---\";\n        this.bestCategoryCounts = 0;\n        this.colorScheme = {\n                domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n        };\n        this.ready = false;\n    }\n\n    draw(edata, key){\n\n        let counts = {};\n        // let mge = 0\n        edata.forEach(element => {\n            try {\n                element[key] = element[key].toLowerCase()\n            } catch (error) {\n                \n            }\n            \n            counts[element[key]] = counts[element[key]] ? counts[element[key]]+1: 1; \n            try {\n                this.confidenc[element[key]] = this.confidenc[element[key]] ? this.confidenc[element[key]]+element['rating']['confidence']['value']: element['rating']['confidence']['value']; \n            } catch (error) {\n                // element['rating']['confidence']['value'] = 0;\n            }\n            \n            try {\n                this.expertc[element[key]] = this.expertc[element[key]] ? this.expertc[element[key]]+element['rating']['expertise']['value']: element['rating']['expertise']['value']; \n            } catch (error) {\n                // element['rating']['expertise']['value'] = 0;\n            }\n            \n            try {\n                this.mge += element['rating']['mge']['value']\n            } catch (error) {\n                // element['rating']['mge']['value'] = 0;\n            }\n            \n            try {\n                this.pathogen += element['rating']['genome']['value']\n            } catch (error) {\n                // element['rating']['genome']['value'] = 0;\n            }\n            \n        });\n\n        // let data = [];\n        let CNTs = {};\n        for(var k in counts){ \n            this.data.push({name: k, value: counts[k], confidence:this.confidenc[k], expertice:this.expertc[k]});\n            CNTs[k] = this.confidenc[k]/edata.length + 1.2*this.expertc[k]/edata.length;\n        }\n\n        this.bestCategory = Object.keys(CNTs).reduce(function(a, b){ return CNTs[a] > CNTs[b] ? a : b });\n        this.bestCategoryCounts = counts[this.bestCategory];\n        this.totalCategoryCounts = edata.length;\n        this.ready = true;\n\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/visualize.class.ts","import { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { ClassifyComponent } from './classify/classify.component';\nimport { HomeComponent } from './home/home.component';\nimport { DatabaseComponent } from './database/database.component';\nimport { AboutComponent } from './about/about.component';\nimport { AdminComponent } from './admin/admin.component';\n\nexport const router: Routes = [\n    {\n        path: '',\n        children: [\n            { path: '', component: HomeComponent },\n            { path: 'classify', component: ClassifyComponent },\n            { path: 'home', component: HomeComponent },\n            { path: 'database', component: DatabaseComponent },\n            { path: 'about', component: AboutComponent },\n            { path: 'admin', component: AdminComponent },\n        ]\n    },\n];\n\nexport const AppRoutingModule: ModuleWithProviders = RouterModule.forRoot(router, {useHash: true});\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import { Component } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterialModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MdInputModule } from '@angular/material';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n// import { HomeComponent } from './home/home.component';\n// import { DatabaseComponent } from './database/database.component';\nimport { AboutComponent } from './about/about.component';\n\n// APP modules\nimport { ClassifyModule } from './classify/classify.module';\nimport { HomeModule } from './home/home.module';\nimport { DatabaseModule } from './database/database.module';\n\n// import {NgCytoscapeModule} from \"ng2-cytoscape/dist\";\n\n// Visualization\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\n\n// Services\nimport { DataService } from '../services/data.service';\nimport { NcbiService } from '../services/ncbi.service';\nimport { AdminService } from '../services/admin.service';\n\n\nimport 'hammerjs';\nimport { AdminComponent } from './admin/admin.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    // jqxChartComponent,\n    AdminComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ClassifyModule,\n    DatabaseModule,\n    HomeModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NoopAnimationsModule,\n    MaterialModule,\n    NgxChartsModule,\n    ReactiveFormsModule,\n    MdInputModule,\n    // NgCytoscapeModule\n  ],\n  providers: [\n    DataService,\n    NcbiService,\n    AdminService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\n\n@Component({\n  selector: 'besthit-metadata-ardb',\n  templateUrl: './ardb.component.html',\n  styleUrls: ['./ardb.component.css']\n})\nexport class BestHitArdbComponent implements OnInit {\n\n  public randomARG: any;\n  public alCoverage: number;\n  public render: boolean;\n\n  constructor(\n    private dataService: DataService,\n  ) {\n\n   }\n\n\n  ngOnInit() {\n    this.render = false;\n    this.randomARG = this.dataService.ARG;\n    this.alCoverage = 100 * this.randomARG['besthit']['alignments'][0]['algn_length'] / this.randomARG['entry']['length'].toFixed(0)\n    if(this.randomARG['besthit']){\n      this.render = true;\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/besthit/ardb/ardb.component.ts","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../../../services/data.service';\nimport { NULL_EXPR } from '@angular/compiler/src/output/output_ast';\n\n\n@Component({\n  selector: 'besthit-metadata-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class BestHitCardComponent implements OnInit {\n\n  public randomARG: Object;\n  public alCoverage: number;\n  public render: boolean;\n  public cars: any;\n\n  constructor(\n    private dataService: DataService,\n  ) {}\n\n  get_subtype(element: any){\n    if(element.best_hit_database === 'ARDB' ){\n      return element.metadata.subtype;\n    }else{\n      return element.subtype;\n    }\n  }\n\n  get_best_hit_id(element: any){\n    if(element.best_hit_database === 'megares' ){\n      return element.best_hit.split('|')[1];\n    }else{\n      return element.best_hit;\n    }\n  }\n\n  get_coverage(element: any){\n    if(element.best_hit_database === 'CARD' ){\n      return element.coverage;\n    }else{\n      return (100*element.algn_len / this.randomARG['entry'].length).toFixed(0);\n    }\n  }\n\n  get_bitscore_rate(element: any){\n    if(element.best_hit_database === 'CARD' ){\n      return (100*element.bitscore/element.optimum_bit_score).toFixed(0);\n    }else{\n      // return (100*element.bitscore/1000).toFixed(0);\n      return null;\n    }\n  }\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n    this.render = false;\n    this.cars = [];\n    this.alCoverage = 100*this.randomARG['besthit']['alignments'][0]['algn_len'] / this.randomARG['entry']['length'].toFixed(0)\n    // console.log(this.alCoverage)\n    if(this.randomARG['besthit']){\n      // traverse the alignments and create the table\n\n      this.randomARG['besthit']['alignments'].forEach(element => {\n        this.cars.push({\n          database: element.best_hit_database,\n          gene_name: this.get_subtype(element),\n          best_hit_id: this.get_best_hit_id(element),\n          similarity: element.identity,\n          coverage: this.get_coverage(element),\n          bitscore_rate: this.get_bitscore_rate(element),\n          bitscore: element.bitscore\n        });\n      });\n\n      this.render = true;\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/besthit/card/card.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\n\n\n@Component({\n  selector: 'app-generic',\n  templateUrl: './generic.component.html',\n  styleUrls: ['./generic.component.css']\n})\nexport class GenericComponent implements OnInit {\n\n  public randomARG: Object;\n  public alCoverage: number;\n  public render: boolean;\n\n  constructor(\n    private dataService: DataService,\n  ) { }\n\n  ngOnInit() {\n    this.render = false;\n    this.randomARG = this.dataService.ARG;\n    this.alCoverage = 100 * this.randomARG['besthit']['alignments'][0]['algn_length'] / this.randomARG['entry']['length'];\n    if(this.randomARG['besthit']) {\n      this.render = true;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/besthit/generic/generic.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClassifyComponent } from './classify.component';\n\nconst routes: Routes = [\n  { path:'', component: ClassifyComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClassifyRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/classify-routing.module.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MdInputModule } from '@angular/material';\n\nimport { MaterialModule } from '@angular/material';\nimport { CompatibilityModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\n// Visualization\n// import { NgxChartsModule} from '@swimlane/ngx-charts';\nimport { StarRatingModule } from 'angular-star-rating';\n\n// primeng\nimport { PanelModule } from 'primeng/primeng';\nimport { AutoCompleteModule } from 'primeng/primeng';\nimport { StepsModule } from 'primeng/primeng';\nimport { GrowlModule } from 'primeng/primeng';\nimport {ProgressBarModule} from 'primeng/components/progressbar/progressbar';\nimport {DataTableModule} from 'primeng/components/datatable/datatable';\n\nimport { ClassifyComponent } from './classify.component';\nimport { ClassifyRoutingModule } from './classify-routing.module';\n\n// Metadata\nimport { UniprotComponent } from './metadata/uniprot/uniprot.component';\nimport { CardComponent } from './metadata/card/card.component';\nimport { ArdbComponent } from './metadata/ardb/ardb.component';\n\n// BestHit\nimport { BestHitCardComponent } from './besthit/card/card.component';\nimport { BestHitArdbComponent } from './besthit/ardb/ardb.component';\n\n// Genomes and MGE\nimport { GenomeComponent } from './genomes/genome.component';\n// import { GenomeModule } from './genomes/genome.module';\n\n// Curate\nimport { CurateComponent } from './curate/curate.component';\n\nimport { ConfirmDialogModule, ConfirmationService} from 'primeng/primeng';\nimport { DialogModule, ButtonModule, TabViewModule, CodeHighlighterModule } from 'primeng/primeng';\nimport { GenericComponent } from './besthit/generic/generic.component';\nimport { InstructionsComponent } from './instructions/instructions.component';\n\n\n// tour walkthroug\n// import { HintModule } from 'angular-custom-tour';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MdInputModule,\n    BrowserModule,\n    CompatibilityModule,\n\n    ClassifyRoutingModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    // NoopAnimationsModule,\n\n    // NgxChartsModule,\n    PanelModule,\n    AutoCompleteModule,\n    StepsModule,\n    StarRatingModule.forRoot(),\n    ConfirmDialogModule,\n    DialogModule,\n    ButtonModule,\n    TabViewModule,\n    CodeHighlighterModule,\n    GrowlModule,\n    ProgressBarModule,\n    DataTableModule\n    // HintModule,\n    // GenomeModule\n  ],\n  schemas: [\n    // CUSTOM_ELEMENTS_SCHEMA,\n  ],\n  declarations: [\n    ClassifyComponent,\n      UniprotComponent,\n      CardComponent,\n      ArdbComponent,\n      BestHitArdbComponent,\n      BestHitCardComponent,\n      GenomeComponent,\n      CurateComponent,\n      GenericComponent,\n      InstructionsComponent\n  ],\n  providers: [\n    ConfirmationService\n  ],\n  bootstrap: [\n    ClassifyComponent\n  ],\n  entryComponents: [\n    InstructionsComponent\n  ]\n})\nexport class ClassifyModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/classify.module.ts","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable'\n\nimport { DataService } from '../../../services/data.service';\n\nimport {MenuItem} from 'primeng/primeng';\n\nimport {IStarRatingOnClickEvent, IStarRatingOnRatingChangeEven, IStarRatingIOnHoverRatingChangeEvent} from \"angular-star-rating\";\n\nimport { ClassifyComponent } from '../classify.component'\n\nimport {ConfirmationService} from 'primeng/primeng';\n\nimport { Message } from 'primeng/components/common/api';\n\nimport { ScoreAnnotation } from './score.class'\n\n@Component({\n  selector: 'app-curate',\n  templateUrl: './curate.component.html',\n  styleUrls: ['./curate.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    ScoreAnnotation\n  ]\n\n})\nexport class CurateComponent implements OnInit {\n\n  public step1: boolean;\n  public step2: boolean;\n  public step3: boolean;\n  public step4: boolean;\n  public display: boolean = false;\n  public overlay: Object;\n  public inspectedGenes: Array<String>;\n\n  public activeIndex: number = 0;\n\n  onRatingChangeResult:IStarRatingOnRatingChangeEven;\n\n  public options_type = [];\n  public group_options = [];\n  public mge_options = [\"Plasmid\",\"Virus\",\"Prophage\"];\n\n  public items: MenuItem[];\n\n  private randomARG: Object;\n  private antibiotic: Object;\n\n  public notification: Message[] = [];\n\n  public liveScore: any;\n  public liveScoreAnnotation: any;\n\n  myControl = new FormControl();\n  groupControl = new FormControl();\n  mgeControl = new FormControl();\n\n  filteredOptions: Observable<string[]>;\n  groupFilteredOptions: Observable<string[]>;\n  mgeFilteredOptions: Observable<string[]>;\n\n  constructor(\n    private dataService: DataService,\n    public classifyComponent: ClassifyComponent,\n    private confirmationService: ConfirmationService,\n  ) {\n\n  }\n\n  ngOnInit() {\n\n    this.inspectedGenes = [];\n    this.overlay = {\n      title:\"none\",\n      content:\"none\"\n    }\n    this.step1 = true;\n\n    // menu\n    this.items = [\n            {label: ''},\n            {label: ''},\n            {label: ''}\n        ];\n\n    // Get ARG data\n    this.randomARG = this.dataService.ARG;\n    this.liveScore = new ScoreAnnotation();\n\n    this.liveScoreAnnotation = {class: 0, group: 0, mechanism: 0};\n\n\n    this.antibiotic = {\n      class:null,\n      group:null,\n      mechanism:null,\n      onlineScore:{class:0, group:0, mechanism:0},\n      MGE:{},\n      comments:\"\",\n      rating:{},\n      gene_id: \"\",\n      token: \"------------\"\n    }\n\n\n    // Get the list of antibiotic types in the database\n    this.dataService.getListAntibioticClass()\n      .subscribe(\n        response =>{\n          for (let type of this.dataService.ATYPE){\n            this.options_type.push(type['type'])\n          }\n\n          // console.log(this.options)\n          this.filteredOptions = this.myControl.valueChanges\n            .startWith(null)\n            .map(val => val ? this.filter(val, this.options_type) : this.options_type.slice());\n\n        }\n      )\n\n    // Get list of antibiotic subtypes\n    this.dataService.getListAntibioticClass()\n      .subscribe(\n        response =>{\n          for (let type of this.dataService.ATYPE){\n            // this.group_options.push(type['subtype'])\n          }\n\n          // console.log(this.options)\n          this.groupFilteredOptions = this.groupControl.valueChanges\n            .startWith(null)\n            .map(val => val ? this.filter(val, this.group_options) : this.group_options.slice());\n\n        }\n      )\n\n    }\n\n  // Filter once typing the type of antibiotic\n  filter(val: string, Marray: any): string[] {\n    return Marray.filter(option => new RegExp(`${val}`, 'gi').test(option));\n  }\n\n  // setup the options under mobile genetic elements\n  mgeOptions(label: any, event: any){\n      this.antibiotic['MGE'][label] =\n        {\n          name:label,\n          value:event.checked\n        }\n  };\n\n  // keep track of the ratings bars\n  onRatingChange = (label:any, $event:IStarRatingOnRatingChangeEven) => {\n        // console.log(label, $event);\n        this.antibiotic['rating'][label] =\n          {\n            name:label,\n            value:$event['rating']\n          };\n  };\n\n\n\n  showDialog() {\n      this.display = true;\n  }\n\n\n  // to keep track of the changes between the steps\n  validate(value: any){\n    this.classifyComponent.scrollToMGEs();\n\n    if(value == 1){\n\n\n      this.liveScoreAnnotation = this.liveScore.score(this.classifyComponent.randomARG , this.antibiotic)\n      console.log(this.liveScoreAnnotation);\n\n      if(this.antibiotic['class']==null || this.antibiotic['group']==null || this.antibiotic['mechanism']==null){\n        this.classifyComponent.notification.push({severity:'error', summary:'Score', detail:'Your score is: 0 out of 100'});\n\n      }else if(this.liveScoreAnnotation.class < 70 || this.liveScoreAnnotation.group < 20 || this.liveScoreAnnotation.mechanism < 50){\n\n        let points = (this.liveScoreAnnotation.class + this.liveScoreAnnotation.group + this.liveScoreAnnotation.mechanism)/3;\n        this.classifyComponent.notification.push({severity:'error', summary:'Error', detail:'Your score is: '+points.toFixed(0)+' out of 100 <hr>Class Score: '+this.liveScoreAnnotation.class.toFixed(1) + '<br>Gene Name Score: ' + this.liveScoreAnnotation.group.toFixed(1) + '<br>Mechanism Score: ' + this.liveScoreAnnotation.mechanism.toFixed(1) });\n\n      }else{\n        this.classifyComponent.notification = [];\n        let points = (this.liveScoreAnnotation.class + this.liveScoreAnnotation.group + this.liveScoreAnnotation.mechanism)/3;\n        this.classifyComponent.notification.push({severity:'success', summary:'Success', detail:'Your score is: '+points.toFixed(0)+' out of 100 <hr>Class Score: '+this.liveScoreAnnotation.class.toFixed(1) + '<br>Gene Name Score: ' + this.liveScoreAnnotation.group.toFixed(1) + '<br>Mechanism Score: ' + this.liveScoreAnnotation.mechanism.toFixed(1) });\n\n        this.antibiotic['onlineScore'] = this.liveScoreAnnotation\n\n        this.classifyComponent.ARG_display = false;\n        this.classifyComponent.MGE_display = true;\n\n        console.log(this.classifyComponent.ARG_display, this.classifyComponent.MGE_display)\n\n        this.activeIndex = 1;\n        this.step1=false;\n        this.step2=true;\n      }\n\n\n    }else if(value ==2){\n\n\n      console.log(this.classifyComponent.ARG_display, this.classifyComponent.MGE_display)\n\n      this.step2 = false;\n      this.step3 = true;\n      this.activeIndex = 2;\n\n\n    }else if(value == 3){\n      this.classifyComponent.ARG_display = true;\n      this.classifyComponent.MGE_display = false;\n      this.step3 = false;\n      this.step1 = true;\n      this.activeIndex = 0;\n\n    }\n\n  }\n\n  submitReview(){\n    // console.log(this.antibiotic)\n    this.classifyComponent.ARG_display = true;\n      this.classifyComponent.MGE_display = false;\n    // show the overlay with the score\n    // this.showDialog()\n    this.antibiotic['token'] = Date.now();\n    this.dataService.insertCuration(this.antibiotic)\n      .subscribe(\n        response =>{\n          // console.log(response)\n          // restart the form values to empty.\n          this.inspectedGenes.push(this.classifyComponent.randomARG['entry']['gene_id']);\n          this.continueReview();\n          // alert(\"token: \"+this.antibiotic['token']);\n        }\n      )\n\n  }\n\ncontinueReview(){\n  // Restart and get a new gene\n  this.activeIndex = 0;\n  this.step1 = true;\n  this.step3 = false;\n\n  this.classifyComponent.randomARG['entry']['database'] = '-------------';\n  this.classifyComponent.randomARG['entry']['gene_id'] = '-----------';\n  this.classifyComponent.randomARG['entry']['subtype'] = '-----------';\n  this.classifyComponent.randomARG['entry']['type'] = '--------------';\n  this.classifyComponent.randomARG['entry']['inspected'] = '-----';\n  this.classifyComponent.randomARG['entry']['score'] = '----';\n\n  this.classifyComponent.loading = true;\n\n  this.antibiotic['class'] = null;\n  this.antibiotic['group'] = null;\n  this.antibiotic['mechanism'] = null;\n  this.antibiotic['onlineScore'] = {class:0, group:0, mechanism:0}\n\n  if(this.classifyComponent.conflictedArgSubtypeFlag){\n    this.classifyComponent.nextGeneConflictList();\n  }else if(this.classifyComponent.trainingARGFlag){\n    this.classifyComponent.trainingARGNextGene()\n  }else{\n   this.classifyComponent.nextGene();\n  }\n\n\n  this.display = false;\n\n}\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/curate/curate.component.ts","\nimport intersectBig from 'intersect/index.js';\n// import removeStopwords from 'stopword/lib/stopword.js'\n\nexport class ScoreAnnotation {\n\n    public texts: String = '';\n\n\n    constructor(){\n\n    }\n\n    getAllSubstrings(str, size) {\n        var i, j, result = [];\n\n        for (i = 0; i < str.length-size+1; i++) {\n\n            result.push(str.slice(i, i+size));\n\n        }\n        return result;\n      }\n\n    score(ARG: object, VAL: object){\n\n        this.texts = JSON.stringify(ARG['metadata']);\n\n        ARG['besthit'].alignments.forEach(element => {\n            if(element){\n                this.texts += JSON.stringify(element);\n            }\n        });\n\n        let unique = this.texts.replace(/\\W|\\_/g,\" \").toUpperCase().match(/.{1,3}/g).filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n        // let unique2 = this.texts.replace(/\\W|\\_/g,\" \").toUpperCase().match(/.{1,4}/g).filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n        let unique2 = this.getAllSubstrings(this.texts.replace(/\\W/g,\" \").toUpperCase(), 4).filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n\n\n\n        let ggroup = this.getAllSubstrings(JSON.stringify([VAL['group']]).replace(/\\W|\\_|null/g,\"\").toUpperCase(), 3).filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n        let gclass = this.getAllSubstrings(JSON.stringify([VAL['class']]).replace(/\\W|\\_|null/g,\"\").toUpperCase(),4).filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n        let gmech = this.getAllSubstrings(JSON.stringify([VAL['mechanism']]).replace(/\\W|\\_|null/g,\"\").toUpperCase(), 4).filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n\n\n        // console.log(gclass);\n\n\n        let iclass = intersectBig(unique2,gclass);\n        let igroup = intersectBig(unique,ggroup);\n        let imech = intersectBig(unique2,gmech);\n\n        // console.log(ggroup, gclass, gmech);\n        // console.log(iclass, igroup, imech);\n\n        if(gclass.length==0){gclass=[1]}\n        if(ggroup.length==0){ggroup=[1]}\n        if(gmech.length==0){gmech=[1]}\n\n        return {\n            class: 100*iclass.length/gclass.length,\n            group: 100*igroup.length/ggroup.length,\n            mechanism: 100*imech.length/gmech.length,\n        }\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/curate/score.class.ts","export class PieChart {\n    greeting: string;\n    data: any;\n    colorScheme: any;\n    showLegend: boolean;\n    explodeSlices: boolean;\n    doughnut: boolean;\n    gradient: boolean;\n    showLabels: boolean;\n    ready: boolean;\n    dummy: any;\n\n    constructor(){\n        this.showLegend = false;\n        this.explodeSlices = false;\n        this.doughnut = false;\n        this.gradient = true;\n        this.showLabels = true;\n        this.colorScheme = {\n                domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n        };\n        this.ready = false;\n    }\n\n    draw(edata){\n\n        try{\n            if (edata.length>=1){\n                this.data = edata.sort((a, b) => b.value - a.value).slice(0, 3);\n                this.ready = true;\n            }else{\n                this.ready = false;\n            }\n        }catch(Error){\n            this.ready = false;\n        }\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/genomes/Charts.ts","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../../services/data.service';\n\n\nimport {PieChart} from './Charts';\n\n\n@Component({\n  selector: 'genome-metadata',\n  templateUrl: './genome.component.html',\n  styleUrls: ['./genome.component.css'],\n  providers: [PieChart]\n})\n\n\nexport class GenomeComponent implements OnInit {\n\n  public randomARG: Object;\n  private disease: any;\n  private AMR_phenotype: any;\n  private host: any;\n  public genomeCount: number = 0;\n  public renderMobile: boolean = false;\n  public renderPathogen: boolean = false;\n    \n\n  constructor(\n    private dataService: DataService,\n    private pieChart: PieChart\n  ) {\n    \n   }\n\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n    this.disease = new PieChart();\n    // console.log(this.disease)\n    this.disease.draw(this.randomARG['pathogen']['disease']);\n    \n    this.AMR_phenotype = new PieChart();\n    this.AMR_phenotype.draw(this.randomARG['pathogen']['phenotype']);\n\n    this.host = new PieChart();\n    this.host.draw(this.randomARG['pathogen']['host']);\n\n    \n    try {\n      this.genomeCount = 100*this.randomARG['pathogen'].genomes_pathogen/this.randomARG['pathogen'].genomes_count.toFixed(0)\n    } catch (error) {\n      this.genomeCount = 0;\n    }\n    \n\n    \n    if(this.randomARG['mobile'][0].status == true){\n      this.renderMobile = true;\n    }\n\n    if(this.randomARG['pathogen'].status == true){\n      this.renderPathogen = true;\n    }\n\n  }\n  \n  onSelect(event) {\n    console.log(event);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/genomes/genome.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\n\n@Component({\n  selector: 'classify-metadata-ardb',\n  templateUrl: './ardb.component.html',\n  styleUrls: ['./ardb.component.css']\n})\nexport class ArdbComponent implements OnInit {\n\n  public randomARG: Object;\n  public render: boolean = false;\n\n  constructor(\n    private dataService: DataService,\n  ) {\n    \n   }\n\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n    if(this.randomARG['metadata'].status==true){ \n      this.render = true;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/metadata/ardb/ardb.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\n\n@Component({\n  selector: 'classify-metadata-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  public randomARG: Object;\n  public render: boolean = false;\n\n  constructor(\n    private dataService: DataService,\n  ) {\n    \n   }\n\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n    if(this.randomARG['metadata'].status==true){ \n      this.render = true;\n    }\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/metadata/card/card.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\nimport { NcbiService } from '../../../../services/ncbi.service';\n\n\n@Component({\n  selector: 'classify-metadata-uniprot',\n  templateUrl: './uniprot.component.html',\n  styleUrls: ['./uniprot.component.css']\n})\nexport class UniprotComponent implements OnInit {\n\n  public randomARG: Object;\n  public pubmed = [];\n  public render: boolean = false;\n  public renderError: boolean = false;\n\n  constructor(\n    private dataService: DataService,\n    private ncbiService: NcbiService,\n  ) {\n    \n   }\n\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n    \n    // GET all reference ids from pubmed:\n    if(this.randomARG['metadata'].status==false){\n      this.renderError = true;\n    }\n    if(this.randomARG['metadata'].status==true){ \n      this.render = true;\n      this.randomARG['metadata'].references.forEach(element => {\n        if(element.citation.dbReferences){\n          element.citation.dbReferences.forEach(citation => {\n            if(citation.type == \"PubMed\"){\n              this.ncbiService.getPubMed(citation.id)\n                .subscribe( response=>{\n                  \n                  let str = response.text;\n                  let lstr = [];\n                  let inpos = 0;\n                  let denotations = response.denotations.sort((a, b) => b.span.begin - a.span.begin).reverse();\n                  // let denotations = response.denotations\n\n                  for(let pos of denotations){\n                    lstr.push({\"text\":str.substring(inpos, pos.span.begin), \"type\":\"paragraph\" })\n                    lstr.push({\"text\":str.substring(pos.span.begin, pos.span.end), \"type\":\"keyword\"})\n                    inpos = pos.span.end\n                  }\n                  lstr.push( str.substring( inpos, str.length ) )\n                  // console.log(denotations)\n                  citation['abstract'] = lstr\n                    \n                  }\n                )\n            }\n          });\n        }\n\n      });\n    }\n    // console.log(this.randomARG)\n\n  }\n  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/metadata/uniprot/uniprot.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DatabaseRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/database/database-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DatabaseRoutingModule } from './database-routing.module';\nimport { DatabaseComponent } from './database.component'\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DatabaseRoutingModule,\n  ],\n  declarations: [\n    DatabaseComponent\n  ],\n  bootstrap: [\n    DatabaseComponent\n  ]\n})\nexport class DatabaseModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/database/database.module.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\n\nimport { HomeComponent } from './home.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HomeRoutingModule\n  ],\n  declarations: [\n    HomeComponent\n  ]\n})\nexport class HomeModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/about/about.component.css\n// module id = 565\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".box-vis {\\n    min-height: 190px !important;\\n    /* border-style: solid !important; */\\n    /* border-width: 1px; */\\n    /* border-color: rgba(0, 0, 0, 0.2); */\\n}\\n\\n.box-vis-2 {\\n    min-height: 50px !important;\\n    max-height: 80px !important;\\n}\\n\\n.box-plot {\\n    cursor: pointer;\\n    float: right;\\n    height: 30px;\\n    margin-left: 20px;\\n    width: 50%;\\n    position: relative;\\n    margin-right: 30px;\\n}\\n\\n.box-plot-component {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 0;\\n    overflow: hidden;\\n    border-style: solid;\\n    border-color: #030303\\n}\\n\\n.box-left {\\n    left: 0%;\\n    width: 50%;\\n    height: 20px;\\n    border-width: 1px;\\n    border-top-left-radius: 3px;\\n    border-bottom-left-radius: 3px;\\n    border-right-width: 0;\\n    background: #fff;\\n}\\n\\n.box-right {\\n    left: 50%;\\n    width: 50%;\\n    height: 20px;\\n    border-width: 1px;\\n    border-top-right-radius: 3px;\\n    border-bottom-right-radius: 3px;\\n    background: #fff;\\n}\\n\\n.box-mean {\\n    top: 3px;\\n    height: 14px;\\n    width: 15px;\\n    left: 50%;\\n    border: 1px solid #248;\\n    background: #abd;\\n    border-radius: 3px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/admin.component.css\n// module id = 566\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".container-par {\\n    width: 90%;\\n    margin: 0 auto;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 567\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/ardb/ardb.component.css\n// module id = 568\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/card/card.component.css\n// module id = 569\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/generic/generic.component.css\n// module id = 570\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".curate-nav {\\n    right: 5%;\\n    width: 21.5%;\\n    overflow: scroll;\\n    max-height: 80%;\\n}\\n\\n.sequence {\\n    word-wrap: break-word;\\n    overflow-wrap: break-word;\\n}\\n\\n.user_growl {\\n    position: absolute !important;\\n    top: 20px !important;\\n    z-index: 9999 !important;\\n}\\n\\n\\n/*  */\\n\\n.intro-tour-hint-wrapper {\\n    position: absolute !important;\\n    background-color: rgba(255, 255, 255, .7) !important;\\n    text-align: center;\\n    font-size: 14px;\\n    color: #000;\\n    width: 100% !important;\\n}\\n\\n.box-step {\\n    border: solid 1px rgba(0, 0, 0, 1) !important;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.coffix {\\n    width: 25% !important;\\n    padding-right: 3.5% !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/classify.component.css\n// module id = 571\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".ui-steps .ui-steps-item {\\n    width: 33%;\\n}\\n\\n.ui-steps.steps-custom {\\n    margin-bottom: 10px;\\n}\\n\\n.ui-steps.steps-custom .ui-steps-item .ui-menuitem-link {\\n    height: 4px;\\n    /* padding: 0 1em; */\\n}\\n\\n.ui-steps.steps-custom .ui-steps-item .ui-steps-number {\\n    background-color: #0081c2;\\n    color: #FFFFFF;\\n    /* display: inline-block;  */\\n    width: 26px;\\n    /* border-radius: 5%; */\\n    margin-top: -20px;\\n    margin-bottom: 12px;\\n    font-size: 200%;\\n}\\n\\n.ui-steps.steps-custom .ui-steps-item .ui-steps-title {\\n    /* color: #555555;  */\\n    color: #FFFFFF;\\n    margin-top: -43px;\\n    font-weight: bold;\\n}\\n\\n.badge,\\n.ui-steps-item,\\n.ui-steps-number,\\np-dialog {\\n    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.2), 0 1px 6px 0 rgba(0, 0, 0, 0.19) !important;\\n    border-color: rgba(255, 255, 255, 0) !important;\\n}\\n\\n.box,\\n.box-primary,\\n.panel {\\n    box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.1), 0 1px 1px 0 rgba(0, 0, 0, 0.1) !important;\\n    border-color: rgba(0, 0, 0, 0.1) !important;\\n}\\n\\nmd-input-container textarea {\\n    background-color: rgba(0, 0, 0, 0.05) !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/curate/curate.component.css\n// module id = 572\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/genomes/genome.component.css\n// module id = 573\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/instructions/instructions.component.css\n// module id = 574\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/ardb/ardb.component.css\n// module id = 575\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/card/card.component.css\n// module id = 576\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/uniprot/uniprot.component.css\n// module id = 577\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"ng2-cytoscape {\\n    height: 100vh;\\n    float: left;\\n    width: 100%;\\n    position: relative;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/database/database.component.css\n// module id = 578\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Encode+Sans+Expanded);\", \"\"]);\n\n// module\nexports.push([module.id, \".home-logo {\\n    font-family: 'Encode Sans Expanded', sans-serif !important;\\n    /* text-align: center; */\\n    color: #000;\\n    font-size: 1.6em;\\n}\\n\\n.home-font {\\n    font-family: 'Encode Sans Expanded', sans-serif !important;\\n}\\n\\n.home-font h4 {\\n    font-family: 'Encode Sans Expanded', sans-serif !important;\\n}\\n\\n.logo-text img {\\n    vertical-align: middle;\\n    height: 80px;\\n    width: 80px;\\n    /* border-right: solid 1px; */\\n}\\n\\n.funding img {\\n    /* height: 50px !important; */\\n    width: 100%;\\n    height: 50px;\\n    opacity: 0.8 !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 579\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { DataService } from '../../services/data.service';\n\nimport {Message} from 'primeng/components/common/api';\n// import { HintService } from 'angular-custom-tour'\n\nimport introJs  from \"intro.js/intro.js\";\n// const IntroJs = require(\"intro.js/intro.js\");\n\nimport { Inject } from '@angular/core';\nimport {MdDialog, MdDialogRef, MD_DIALOG_DATA} from '@angular/material';\n\n// import instructions component for modal window\nimport { InstructionsComponent } from './instructions/instructions.component'\n\n\n@Component({\n  templateUrl: './classify.component.html',\n  styleUrls: ['./classify.component.css'],\n  providers: [\n    // HintService\n  ],\n})\n\n\nexport class ClassifyComponent implements OnInit {\n\n  public randomARG: Object;\n  public conflictingARGSubtype: Object;\n  public render: Boolean;\n  public loading: Boolean = false;\n  public drawGenomes: Boolean = false;\n  public searchIndex: number = 0;\n  public conflictedArgSubtypeFlag: Boolean = false;\n  public conflictedArgSubtypeGeneListCounter: number = 1;\n  public conflictedArgSubtypeClassListCounter: number = 0;\n  public inspectedGenes: Array<string>;\n  public trainingGenes: Array<string>;\n  public trainingARGFlag: Boolean = false;\n  public trainingARGCount: number = 0;\n  public trainingARGTotal: number = 2;\n  public MGE_display: boolean;\n  public ARG_display: boolean;\n\n  public notification: Message[] = [];\n\n  constructor(\n    private dataService: DataService,\n    private router: Router,\n    public dialog: MdDialog\n    // public hintService: HintService\n\n  ){\n\n    this.trainingGenes = [\n      \"YP_490697.1\",\n      \"AAM15533.1\",\n      \"AAR84672.1\",\n      \"P52067\",\n      \"YP_042788\",\n      \"YP_416138\",\n      \"AAB53445.1\",\n      \"F0JWD5\",\n      \"A0A0D0NPG2\",\n      \"A0A0E9C576\",\n      \"AAN80811\",\n      \"A0A0Q9QYU5\",\n      \"ABC54722\",\n      \"YP_001346278\",\n      \"A0A0U9H4P4\",\n      \"Q1RPS3\",\n      \"J2LT98\",\n      \"P52067\",\n      \"D3V1W5\"\n    ]\n\n    this.dataService.getRandomKnownARG()\n      .subscribe(response =>{\n        this.randomARG = this.dataService.ARG;\n        this.render = true;\n    });\n\n\n  }\n\n\n  ngOnInit() {\n    this.MGE_display = false;\n    this.ARG_display = true;\n  }\n\n  selectConflictedArgEvent($event){\n    this.conflictedArgSubtypeFlag = $event.checked;\n    this.trainingARGFlag = false;\n    this.nextGene();\n    if(this.conflictedArgSubtypeFlag){\n      this.notification = [];\n      this.notification.push({severity:'info', summary:'Message', detail:'Enabled Conflicted ARGs'});\n    }\n  }\n\n  trainingARGEvent($event){\n    // the conflicting ARGs cannot be enabled.\n    this.conflictedArgSubtypeFlag = false;\n    this.trainingARGCount = 0;\n    this.trainingARGFlag = $event.checked;\n    this.search( this.trainingGenes[Math.floor(Math.random() * this.trainingGenes.length)] );\n    this.trainingARGCount+=1;\n\n    if(this.trainingARGFlag){\n      this.notification = [];\n      this.notification.push({severity:'info', summary:'Message', detail:'Enabled Training Mode'});\n    }\n  }\n\n  trainingARGNextGene(){\n    if(this.trainingARGCount < this.trainingARGTotal){\n      this.search( this.trainingGenes[Math.floor(Math.random() * this.trainingGenes.length)] );\n      this.trainingARGCount+=1;\n      // console.log(this.trainingARGCount, this.trainingARGTotal)\n    }else{\n      this.notification = [];\n      this.notification.push({severity:'success', summary:'End of Training', detail:'Training is done!'});\n      this.notification.push({severity:'info', summary:'Get Reward', detail:'Click on <strong>Priority ARGs</strong> to start'});\n      // this.notification.push({severity:'success', summary:'End of Training', detail:'You are ready to perform tasks with reward'});\n      this.trainingARGFlag = false;\n      this.nextGeneConflictList()\n    }\n  }\n\n  nextGeneConflictList(){\n    this.randomARG['entry']['database'] = '-------------';\n    this.randomARG['entry']['gene_id'] = '-------------';\n    this.randomARG['entry']['subtype'] = '----------';\n    this.randomARG['entry']['type'] = '--------------';\n    this.randomARG['entry']['inspected'] = '------';\n    this.randomARG['entry']['score'] = '------';\n    this.loading = true;\n\n    if(this.conflictedArgSubtypeFlag){\n\n      if (this.conflictedArgSubtypeGeneListCounter >= this.conflictingARGSubtype['conflict'][this.conflictedArgSubtypeClassListCounter]['genes'].length ){\n        this.conflictedArgSubtypeClassListCounter+=1;\n        this.conflictedArgSubtypeGeneListCounter = 0;\n        }\n\n      if(this.conflictedArgSubtypeClassListCounter == this.conflictingARGSubtype['conflict'].length){\n        this.conflictedArgSubtypeClassListCounter = 0;\n        this.conflictedArgSubtypeGeneListCounter = 1;\n        this.nextGene();\n      }else{\n        // console.log(this.conflictedArgSubtypeClassListCounter, this.conflictedArgSubtypeGeneListCounter)\n        this.dataService.getKnownARGInfo( this.conflictingARGSubtype['conflict'][this.conflictedArgSubtypeClassListCounter]['genes'][this.conflictedArgSubtypeGeneListCounter] )\n        .subscribe(res2=>{\n          this.randomARG = this.dataService.ARG\n          this.loading = false;\n        });\n\n        this.conflictedArgSubtypeGeneListCounter += 1;\n      }\n    }else{\n      this.nextGene();\n    }\n  }\n\n  nextGene(){\n    this.randomARG['entry']['database'] = '-------------';\n    this.randomARG['entry']['gene_id'] = '-------------';\n    this.randomARG['entry']['subtype'] = '----------';\n    this.randomARG['entry']['type'] = '--------------';\n    this.randomARG['entry']['inspected'] = '------';\n    this.randomARG['entry']['score'] = '------';\n    this.loading = true;\n\n    if(this.conflictedArgSubtypeFlag){\n      this.dataService.getRandomConflictingArgSubtype()\n        .subscribe(response => {\n          this.conflictingARGSubtype = this.dataService.randomConflictingArgSubtype;\n          // console.log(this.conflictingARGSubtype)\n          // Then, select the first ARG\n          this.dataService.getKnownARGInfo(this.conflictingARGSubtype['conflict'][0]['genes'][0])\n            .subscribe(res2=>{\n              this.randomARG = this.dataService.ARG\n              this.loading = false;\n          });\n      });\n    }else{\n      this.dataService.getRandomKnownARG()\n        .subscribe(response =>{\n          this.randomARG = this.dataService.ARG\n          // console.log(this.randomARG)\n          this.loading = false;\n      });\n    }\n  }\n\n  search(argID: string){\n    this.randomARG['entry']['database'] = '-------------';\n    this.randomARG['entry']['gene_id'] = '-----------';\n    this.randomARG['entry']['subtype'] = '-----------';\n    this.randomARG['entry']['type'] = '--------------';\n    this.randomARG['entry']['inspected'] = '-----';\n    this.randomARG['entry']['score'] = '----';\n    this.loading = true;\n\n    this.dataService.searchAPI(argID, this.searchIndex.toString())\n      .subscribe(response =>{\n        // this.loading = false;\n        this.dataService.getKnownARGInfo(response['entry']['gene_id'])\n          .subscribe(res2=>{\n            this.randomARG = this.dataService.ARG\n            // console.log(this.randomARG)\n            this.loading = false;\n          })\n\n    });\n\n  }\n\n  tabsEvent($event: any){\n    this.drawGenomes = false;\n    if($event.index == 2){\n      this.drawGenomes = true;\n    }\n  }\n\n  startTour(){\n    // this.intro.start();\n    // this.hintService.initialize({defaultPosition: 'bottom'});\n\n    introJs.introJs().setOptions({\n      steps: [\n          {\n            element: '#step1',\n            intro: \"<div class='text-center'><p class='small'>This panel contains the current annotation of the antibiotic resistance gene. This is the data you will have to validate or modify.</p> <p class='small'>*ARG stands for Antibiotic Resistance Gene.</p></div>\",\n            position: 'right'\n          },\n          // {\n          //   element: '#step2',\n          //   intro: \"<div class='text-center'><p class='small'>This panel contains the current crowdsourcing score and the number of times the gene has been validated (if available).</p></div>\",\n          //   position: 'right'\n          // },\n          {\n            element: '#step3',\n            intro: \"<div class='text-center'><p class=''>If this is the first time you visit this page, you need to perform at least two annotations (training). Once you done, you will be able start a real task.</p> </div>\",\n            position: 'right'\n          },\n          {\n            element: '#step4',\n            intro: \"<div class='text-center'><p class=''> Select ARGs that are priority to curate in the system. Those ARGs contain conflicting annotations, e.g., the have two or more associated classes. </div>\",\n            position: 'right'\n          },\n          // {\n          //   element: '#step5',\n          //   intro: \"<div class='text-center'><p class='small'>This search tool allow you to query for keywords and retrieve the associated genes.</p></div>\",\n          //   position: 'right'\n          // },\n          {\n            element: '#step11',\n            intro: \"<div class='text-center'><h4>Microtasks</h4><p class='small'>This panel contains the three main tasks required for the annotation of Antibiotic Resistance Genes. In this panel you will have to add your findings by following simple questions.</p><p>The top panel will prompt the token number once you done the training. You need to insert this token into the Amazon Mturk form.</p></div>\",\n            position: 'left'\n          },\n          {\n            element: '#step12',\n            intro: \"<div class='text-center'><h4>Tips for success!</h4><p class='small'>Some tips to get a fast and right annotation.</p></div>\",\n            position: 'right'\n          },\n          // {\n          //   element: '#step6',\n          //   intro: \"<div class='text-center'><p class='small'>This panel contains the information from the UniProt database, including taxonomy, domains, functions and gene ontology annotation.</p></div>\",\n          //   position: 'right'\n          // },\n          {\n            element: '#step7',\n            intro: \"<div class='text-center'><p class='small'>This section shows the query best hit compared to the CARD database. Please take a look at the description and scores.</p> </div>\",\n            position: 'right'\n          },\n          // {\n          //   element: '#step8',\n          //   intro: \"<div class='text-center'><p class='small'>This panel contains the closest gene from the ARDB database. Pay attention at the different scroes, identity, coverage, evalue and bitscore. The query is definitely close to the gene found in the ARDB database (99% identity, 100% coverage).</p></div>\",\n          //   position: 'right'\n          // },\n          // {\n          //   element: '#step9',\n          //   intro: \"<div class='text-center'><p class='small'>ARG best hit from the MegaRes database. This database contains hints about the Antibiotic Resistance Mechanism. </p></div>\",\n          //   position: 'left'\n          // },\n          {\n            element: '#step10',\n            intro: \"<div class='text-center'><p class='small'>This panel comprsises evidence of the queried gene being transferred by a <strong>Mobile Genetic Elements</strong> such as plasmids, phages or viruses and evidence of the gene being hosted by <strong>pathogenic bacteria</strong>.</p> </div>\",\n            position: 'right'\n          },\n\n        ]\n    }).start()\n    .oncomplete(\n        // this.nextGene()\n    );\n  }\n\n  openInstructions(): void {\n    let dialogRef = this.dialog.open(InstructionsComponent, {\n      width: '80%',\n      data: { train: 'three', animal: 'faa' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // console.log('The dialog was closed');\n      // this.animal = result;\n    });\n\n  }\n\n  scrollToMGEs(){\n    // this.content.scrollTo(0, this.target.nativeElement.offsetTop, 500);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/classify.component.ts","module.exports = \"<div style=\\\"overflow: auto\\\" class=\\\"col-md-12\\\">\\n    <h2>Instructions</h2>\\n    <p>\\n        The goal of this platform is to validate and complement the information under the <strong> Current Annotation </strong> panel by looking at the data presented in the main section. Then, you will have to fill the form uder the <strong>ARG Annotation</strong>        section.\\n    </p>\\n    <br>\\n\\n    <img class=\\\"col-md-8 col-md-offset-2\\\" src=\\\"assets/images/demo.png\\\" alt=\\\"\\\">\\n\\n    <div class=\\\"col-md-12\\\">\\n\\n        <h4>1. Get familiar with the environment</h4>\\n        <p>\\n            In order to understand the structure of this website, please, click on the <strong>Tour</strong> button.\\n        </p>\\n        <h4>2. New user</h4>\\n        <p class=\\\"\\\">\\n            If this is the first time you enter the website, you are required to perform two classifications. To do so, click the <strong>New User</strong> button and perform two ARG annotations. An score with your performance will be prompted. <strong>All fields are required</strong>,\\n            values unrelated to the gene are not accepted.\\n        </p>\\n\\n        <h4>3. How to get a reward </h4>\\n        <p>\\n            Once you have done with the training, you are ready to start. First, click on <strong>Priority ARGs</strong> button and perform one annotation. After you done with the annotation you will get a token number. Please, copy and paste this token\\n            to the Amazon Mturk website and submit the form. If you plan to make another Hit <strong><span style=\\\"color:red\\\">DO NOT close the ARG-miner website.</span></strong> Other case you will have to do the training again.\\n        </p>\\n\\n        <h4>4. Perform a new Hit</h4>\\n        <p>\\n            First, open a new hit in Amazon Mturk, then, get back to this webpage and just click on the <strong>Other ARG Group</strong> button. Perform the annotation and submit the token to Amazon Mturk.\\n        </p>\\n\\n        <strong><h4 style=\\\"color:red\\\"> Please Be Aware! </h4></strong>\\n        <p>\\n            If you don't do the mandatory training, the system <strong>will not</strong> prompt the token.\\n        </p>\\n        <p>\\n            If the annotation contains random, unrelated or nonsense words, the HIT will be rejected.\\n        </p>\\n        <p>\\n            Only tokens are accepted, if you submit other values such as gene_id, the HIT will be rejected. Several workers are working in the same gene_id, if the token is not provided, we cannot check your performance.\\n        </p>\\n\\n    </div>\\n    <hr class=\\\"col-md-10\\\">\\n</div>\\n\\n<hr>\\n\\n\\n<md-expansion-panel class=\\\"\\\" [expanded]=\\\"false\\\">\\n    <md-expansion-panel-header>\\n        <md-panel-title>\\n            <h4>Micro-Tasks</h4>\\n        </md-panel-title>\\n    </md-expansion-panel-header>\\n    <h4>ARG identification</h4>\\n    <p>Please fill up the Antibiotic resistance class, group and mechanism (if any) of the gene based on the observation from the different resources.</p>\\n\\n    <p class=\\\"small\\\">The <strong>Blast alignment</strong> sections associate the queried gene to its closest antibiotic resistance gene from curated databases. From this section you need to look at the scores (Bitscore, evalue, identity and coverage). High identity and\\n        coverage represent close related sequences. Statistically significant alignments don't necesarly need high identity percentages. Therefore, pay attention to the Bitscores and Evalues. <strong>Note</strong>: A bitscore greater than 50 is considered\\n        significant if it spans at least 90% coverage.\\n    </p>\\n\\n\\n    <hr>\\n\\n    <h4> Mobile Genetic Elements</h4>\\n\\n    <p><strong>Horizontal Gene Transfer</strong></p>\\n    <p>Please check if there is any evidence that suggests the gene has been observed in a plasmid, prophage or virus.</p>\\n    <p class=\\\"small\\\">To complete this task please check the Plasmid, Virus, or Prophages sections. If there is not any section with plasmid, prophage or virus tags it means that there is not evidence that the gene is transfered by any of those mechanisms.\\n    </p>\\n    <p><strong>Pathogen Genomes</strong></p>\\n    <p>Please take a look at the pathogen genomes panel under the horizontal gene transfer section. </p>\\n    <p class=\\\"small\\\">This panel will show you the association of the queried gene against a set of ~100,000 bacterial genomes. You will get information about the association of the gene to pathogens (as percentages) as well as their antimicrobial phenotype (resistant,\\n        susceptible, intermediate). Rate your findigns according to the provided evidence.\\n\\n    </p>\\n\\n    <hr>\\n    <h4>Review and submit</h4>\\n    <p>This panel contains your observations for the queried gene.</p>\\n    <p><strong>Verify your observations</strong></p>\\n    <p>Please, make sure the values in the fields (ARG class, ARG group and ARG mechanism) correspond to what you have observed.</p>\\n    <p><strong>Rate your expertise</strong></p>\\n    <p>Please in a scale from 1 to 5 rate your confidence or expertice level, where 1 depicts a non expert evaluator, and 5 if you have experience working with Antibiotic Resistance Genes.\\n        <p>\\n            <p><strong>Rate your annotation confidence</strong></p>\\n            <p>Please in a scale from 1 to 5, rate your confidence in the curation of the queried gene where 1 means that there is a lack of evidence about the gene and 5 the data correlates with your observations.</p>\\n</md-expansion-panel>\\n<hr>\\n\\n<md-expansion-panel [expanded]=\\\"false\\\">\\n    <md-expansion-panel-header>\\n        <md-panel-title>\\n            <h4>MGEs and pathogens</h4>\\n        </md-panel-title>\\n    </md-expansion-panel-header>\\n    <p>\\n        Mobile Genetic Elements or MGEs are segments that encode proteins that mediates the movment of DNA within genomes. Plasmids are collection of stable funcional genetic elements. Plasmids can often be transferred to another cell. Bacteriophages can also\\n        transfer genetic material by accidentally package segments of DNA to inject into their host.\\n    </p>\\n    <p>\\n        To identify if the ARG is carried by plasmids, phages or viruses, the gene was aligned to the <a href=\\\"\\\">ACLAME</a> database. Scores provide insight into the presence of this gene into the MGE.\\n    </p>\\n    <p>\\n        Pathogens are invaders that attack their hosts. The most familiar are viruses and bacteria and they can cause a wide range of infections and diseases. To identify if the gene is hosted in a pathogen genome, the gene was matched to the <a href=\\\"\\\">PATRIC</a>        database. Then, we were able to identify the number of pathogen genomes that carry the gene.\\n    </p>\\n    <p class=\\\"small\\\">Each color represents a different scoring scale</p>\\n</md-expansion-panel>\\n\\n\\n\\n<hr>\\n\\n<md-expansion-panel [expanded]=\\\"false\\\">\\n    <md-expansion-panel-header>\\n        <md-panel-title>\\n            <h4>Similarity to known ARGs</h4>\\n        </md-panel-title>\\n    </md-expansion-panel-header>\\n    <p>\\n        To curate a gene as an ARG, it is necesary to validate its evidence. One way to do it is by looking at the information provided from curated databases such as the <a href=\\\"\\\">CARD</a> database. Thus, the entry was compared against the databases\\n        to reinforce, reject or modify the <strong>current annotation.</strong>\\n    </p>\\n    <p>\\n        For this comparison, the gene was aligned to the genes from the databases using blast and its best hit was extracted. For each database, a panel shows the quality of the alignment and the information regarding that best hit.\\n    </p>\\n\\n    <p> <span class=\\\"label bg-blue\\\">Tip</span> To identify the\\n        <strong> class of antibiotic </strong> consider looking at <u>middle</u> to <u>high</u> bitscore, evalue and coverage. However, to identify <strong> antibiotic resistance names </strong>, we would recomend to look at the panels where the sequence\\n        similarity is <u>high</u> with a <u>very strong</u> coverage.\\n    </p>\\n\\n</md-expansion-panel>\\n\\n<hr><br><br><br><br><br>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/about/about.component.html\n// module id = 653\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"online\\\">\\n    <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <div class=\\\"box-header with-border text-center\\\">\\n                <h4>Upgrade database</h4>\\n                <!-- <h3 class=\\\"box-title\\\">\\n                <strong>Main Actions</strong>\\n            </h3> -->\\n            </div>\\n            <div class=\\\"box-body\\\">\\n\\n\\n                <p class=\\\"small\\\">Publish a new version of the ARG-miner database. This database is updated once a considered number of genes have been curated. Once you click submit it will create a new version of the database and update the download links under the Donwloads\\n                    tab.\\n                </p>\\n\\n\\n                <!-- UPGRADE DATABASE FORM -->\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input mdInput placeholder=\\\"Database version\\\" [value]=\\\"databaseVersion\\\" #dversion>\\n                </md-input-container>\\n\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input type=\\\"text\\\" mdInput #dmessage maxlength=\\\"256\\\" placeholder=\\\"Comments\\\" [value]=\\\"databaseComments\\\">\\n                    <md-hint align=\\\"start\\\"><strong>Don't disclose personal info</strong> </md-hint>\\n                    <md-hint align=\\\"end\\\">{{dmessage.value.length}} / 256</md-hint>\\n                </md-input-container>\\n\\n            </div>\\n            <div class=\\\"box-footer\\\">\\n                <br>\\n                <div class=\\\"col-md-12 text-center\\\"> <button (click)=\\\"upgradeDataBase(dversion.value, dmessage.value)\\\" class=\\\"bg-black\\\" color=\\\"default\\\" md-raised-button>Upgrade ARG-miner database</button><br><br></div>\\n\\n                <p class=\\\"small\\\">*The upgrading gets run in the background of the web server and the fasta file will be available under the downloads once the process is done.</p>\\n            </div>\\n        </div>\\n        <div class=\\\"box box-solid\\\">\\n            <div class=\\\"box-header with-border text-center\\\">\\n                <h4>Recompute Problematic Annotations</h4>\\n            </div>\\n            <div class=\\\"box-body\\\">\\n\\n                <p class=\\\"small\\\">Use this tool after you have accepted/rejected annotations from the crowdsourcing platform. This action will compute/update all those ARGs that have conflicting annotations e.g., the same gene name associated to several ARG categories.</p>\\n                <div class=\\\"text-center\\\"> <button (click)=\\\"updateConflictingARGs()\\\" class=\\\"bg-blue\\\" md-raised-button>Compute Problematic ARGs</button></div>\\n                <hr>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"col-sm-9\\\">\\n\\n        <div class=\\\"\\\">\\n            <div class=\\\"box box-solid \\\">\\n                <div class=\\\"box-body\\\">\\n                    <md-input-container class='col-sm-12 col-sm-offset-0'>\\n                        <input #keyword type=\\\"search\\\" (keyup.enter)=\\\"search(keyword.value)\\\" mdInput placeholder=\\\"Search term \\\" value=\\\"\\\" />\\n                    </md-input-container>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngFor=\\\"let item of curatedARGs\\\" class=\\\"box box-solid\\\">\\n            <!-- <div class=\\\"box-header with-border\\\"> -->\\n            <!-- <h3 class=\\\"box-title\\\">{{item.entry.gene_id}}</h3> -->\\n            <!-- </div> -->\\n            <div class=\\\"box-body\\\">\\n                <!-- <p>The gene <u>{{item.entry.gene_id}}</u> has been curated {{ item.inspected.length }} times.</p> -->\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"box box-solid with-border\\\">\\n                        <div class=\\\"box-body\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                                <h4 class=\\\"text-center\\\"> Current Annotation</h4>\\n                                <hr>\\n                                <p> <strong>Gene ID:</strong> {{ item.entry.gene_id }}</p>\\n                                <p><strong>ARG Name:</strong> {{ item.entry.subtype }} </p>\\n                                <p><strong>Gene Class:</strong> {{ item.entry.type }}</p>\\n                                <p><strong>ARG Database:</strong> {{ item.entry.database }}</p>\\n                            </div>\\n\\n                            <div class=\\\"col-md-8\\\">\\n                                <h4 class=\\\"text-center\\\"> Weighted Annotation</h4>\\n                                <hr>\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"col-md-4\\\">\\n                                        <!-- <strong>Score:</strong> {{ wScore }} -->\\n                                    </div>\\n                                    <div class=\\\"box-plot\\\">\\n                                        <div class=\\\"box-plot-component box-left\\\"></div>\\n                                        <div class=\\\"box-plot-component box-right\\\"></div>\\n                                        <div class=\\\"box-plot-component box-mean\\\" [style.left]=\\\"20*wScore+'%'\\\"></div>\\n                                    </div>\\n                                </div>\\n                                <!-- </p> -->\\n                                <!-- <p> <strong>Gene ID:</strong> {{ item.entry.gene_id }}</p> -->\\n                                <p><strong>ARG Name:</strong> {{ argGroupChart.bestCategory }} </p>\\n                                <p><strong>Gene Class:</strong> {{ argClassChart.bestCategory }} </p>\\n                                <p><strong>ARG Mechanism:</strong> {{ argMechanismChart.bestCategory }} </p>\\n                                <p><strong>MGEs Evidence Score:</strong> {{ (argClassChart.mge/item.inspected.length).toFixed(2)}} </p>\\n                                <p><strong>Pathogenic Evidence Score:</strong> {{ (argClassChart.pathogen/item.inspected.length).toFixed(2)}} </p>\\n\\n                                <!-- <p><strong>MGE Integron Evidence:</strong> {{ item.entry.subtype }} </p> -->\\n                                <!-- <p><strong>Genome Integron Evidence:</strong> {{ item.entry.subtype }} </p> -->\\n                                <hr>\\n                                <div class=\\\"text-center\\\">\\n                                    <button (click)=\\\"acceptAnnotation()\\\" class=\\\"badge bg-blue\\\" md-raised-button>Update Gene</button>\\n                                    <button (click)=\\\"getARG(ARGindex)\\\" class=\\\"badge bg-red\\\" md-raised-button>Next Gene</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-md-12\\\">\\n                    <h4 class=\\\"text-center\\\">Crowsourced Annotation</h4>\\n                    <div class=\\\"box box-solid with-border box-primary\\\">\\n                        <div class=\\\"box-body\\\">\\n                            <div class=\\\"col-md-8 box-vis text-center\\\" *ngIf=\\\"argClassChart.ready\\\">\\n                                <ngx-charts-advanced-pie-chart [scheme]=\\\"argClassChart.colorScheme\\\" [results]=\\\"argClassChart.data\\\" [gradient]=\\\"argClassChart.gradient\\\" (select)=\\\"onSelect($event)\\\">\\n                                </ngx-charts-advanced-pie-chart>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <strong><h4><span class=\\\"badge bg-red\\\"> Antbiotic Class </span></h4></strong>\\n                                <p>This panel shows the distribution of the crowsourced antibiotic classes for the gene {{ item.entry.gene_id }}</p>\\n                            </div>\\n\\n\\n                            <div class=\\\"col-md-12 text-center\\\">\\n                                <!-- <hr> -->\\n                                <table class=\\\"table table-responsive table-bordered text-center\\\">\\n                                    <tbody>\\n                                        <tr class=\\\"table-success\\\">\\n                                            <th>ARG Class</th>\\n                                            <th>Confidence Score</th>\\n                                            <th>Expertise Score</th>\\n                                            <th>Score (Cs+1.2*Es)</th>\\n                                        </tr>\\n\\n                                        <tr *ngFor=\\\"let itemx of argClassChart.data\\\">\\n                                            <td>{{itemx.name}}</td>\\n                                            <td>{{ ((itemx.confidence/itemx.value)*(itemx.value/argClassChart.totalCategoryCounts)).toFixed(2) }}</td>\\n                                            <td>{{ ((itemx.expertice/itemx.value)*(itemx.value/argClassChart.totalCategoryCounts)).toFixed(2) }}</td>\\n                                            <td> {{ ((itemx.confidence/itemx.value)*(itemx.value/argClassChart.totalCategoryCounts) + 1.2*((itemx.expertice/itemx.value)*(itemx.value/argClassChart.totalCategoryCounts))).toFixed(2) }} </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                                <!-- <hr> -->\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"box box-solid with-border box-primary\\\">\\n                        <div class=\\\"box-body\\\">\\n                            <div class=\\\"col-md-8 box-vis text-center\\\" *ngIf=\\\"argGroupChart.ready\\\">\\n                                <ngx-charts-advanced-pie-chart [scheme]=\\\"argGroupChart.colorScheme\\\" [results]=\\\"argGroupChart.data\\\" [gradient]=\\\"argGroupChart.gradient\\\" (select)=\\\"onSelect($event)\\\">\\n                                </ngx-charts-advanced-pie-chart>\\n                            </div>\\n\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <strong><h4><span class=\\\"badge bg-blue\\\"> Antbiotic Resistance Gene </span></h4></strong>\\n                                <p>This panel shows the distribution of the crowsourced antibiotic gene for what the entry {{ item.entry.gene_id }} has been identified.</p>\\n                            </div>\\n\\n                            <div class=\\\"col-md-12 text-center\\\">\\n                                <!-- <hr> -->\\n                                <table class=\\\"table table-responsive table-bordered text-center\\\">\\n                                    <tbody>\\n                                        <tr class=\\\"table-success\\\">\\n                                            <th>ARG</th>\\n                                            <th>Confidence Score</th>\\n                                            <th>Expertise Score</th>\\n                                            <th>Score (Cs+1.2*Es)</th>\\n                                        </tr>\\n                                        <tr *ngFor=\\\"let itemx of argGroupChart.data\\\">\\n                                            <td>{{itemx.name}}</td>\\n                                            <td>{{ (itemx.confidence/argClassChart.totalCategoryCounts).toFixed(2) }}</td>\\n                                            <td>{{ (itemx.expertice/argClassChart.totalCategoryCounts).toFixed(2) }}</td>\\n                                            <td>{{ ((itemx.confidence/argClassChart.totalCategoryCounts)+1.2*(itemx.expertice/argClassChart.totalCategoryCounts)).toFixed(2) }}</td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                                <!-- <hr> -->\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"box box-solid box-primary\\\">\\n                        <div class=\\\"box-body\\\">\\n                            <div class=\\\"col-md-8 box-vis text-center\\\" *ngIf=\\\"argMechanismChart.ready\\\">\\n                                <ngx-charts-advanced-pie-chart [scheme]=\\\"argMechanismChart.colorScheme\\\" [results]=\\\"argMechanismChart.data\\\" [gradient]=\\\"argMechanismChart.gradient\\\" (select)=\\\"onSelect($event)\\\">\\n                                </ngx-charts-advanced-pie-chart>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <strong><h4><span class=\\\"badge bg-success\\\"> ARG Mechanism </span></h4></strong>\\n                                <p>This panel shows the distribution of the crowsourced ARG mechanism identified for the gene {{ item.entry.gene_id }}.</p>\\n                            </div>\\n\\n                            <div class=\\\"col-md-12 text-center\\\">\\n                                <!-- <hr> -->\\n                                <table class=\\\"table table-responsive table-bordered text-center\\\">\\n                                    <tbody>\\n                                        <tr class=\\\"table-success\\\">\\n                                            <th>ARG Mechanism</th>\\n                                            <th>Confidence Score</th>\\n                                            <th>Expertise Score</th>\\n                                            <th>Score (Cs+1.2*Es)</th>\\n                                        </tr>\\n                                        <tr *ngFor=\\\"let itemx of argMechanismChart.data\\\">\\n                                            <td>{{itemx.name}}</td>\\n                                            <td>{{ (itemx.confidence/argClassChart.totalCategoryCounts).toFixed(2) }}</td>\\n                                            <td>{{ (itemx.expertice/argClassChart.totalCategoryCounts).toFixed(2) }}</td>\\n                                            <td>{{ ((itemx.confidence/argClassChart.totalCategoryCounts)+1.2*(itemx.expertice/argClassChart.totalCategoryCounts)).toFixed(2) }}</td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                                <!-- <hr> -->\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"col-sm-12\\\">\\n                    <table class=\\\"table table-responsive table-bordered text-center\\\">\\n                        <tbody>\\n                            <tr class=\\\"table-success\\\">\\n                                <th>Token</th>\\n                                <th>Expertise</th>\\n                                <th>Confidence</th>\\n                                <th>Gene Name</th>\\n                                <th>ARG Class</th>\\n                                <th>ARG Mechanism</th>\\n                            </tr>\\n                            <tr *ngFor=\\\"let itemx of curatedARGs[0]['inspected']\\\">\\n                                <td>{{ itemx.token }}</td>\\n                                <td *ngIf=\\\"itemx.rating.expertise; else expertiseBlockA\\\">{{ (itemx.rating.expertise.value).toFixed(2) }}</td>\\n                                <ng-template #expertiseBlockA>\\n                                    <td>0.00</td>\\n                                </ng-template>\\n                                <td *ngIf=\\\"itemx.rating.confidence; else confidenceBlockA\\\">{{ (itemx.rating.confidence.value).toFixed(2) }} </td>\\n                                <ng-template #confidenceBlockA>\\n                                    <td>0.00</td>\\n                                </ng-template>\\n                                <td>{{ itemx.group }}</td>\\n                                <td>{{ itemx.class }}</td>\\n                                <td>{{ itemx.mechanism }}</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n\\n\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n\\n\\n\\n</div>\\n\\n\\n<div class=\\\"col-md-3 col-md-offset-4\\\" *ngIf=\\\"online==false\\\">\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header text-center\\\">\\n            <h3 class=\\\"box-title\\\">Login</h3>\\n        </div>\\n        <div class=\\\"box-body\\\">\\n            <!-- <form class=\\\"example-form\\\"> -->\\n            <md-input-container class=\\\"col-md-12\\\">\\n                <input mdInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\" #uemail>\\n                <md-error *ngIf=\\\"emailFormControl.hasError('pattern')\\\">\\n                    Please enter a valid email address\\n                </md-error>\\n                <md-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n                    Email is <strong>required</strong>\\n                </md-error>\\n            </md-input-container>\\n            <br>\\n            <md-input-container class=\\\"col-md-12\\\">\\n                <input mdInput type=\\\"password\\\" placeholder=\\\"Password\\\" [formControl]=\\\"passwordFormControl\\\" #upass>\\n                <md-error *ngIf=\\\"passwordFormControl.hasError('pattern')\\\">\\n                    Please enter a valid email address\\n                </md-error>\\n                <md-error *ngIf=\\\"passwordFormControl.hasError('required')\\\">\\n                    Password is <strong>required</strong>\\n                </md-error>\\n            </md-input-container>\\n\\n            <!-- </form> -->\\n        </div>\\n\\n        <div class=\\\"box-footer text-center\\\"> <button (click)=\\\"login(uemail.value, upass.value)\\\" class=\\\"bg-blue\\\" md-raised-button>Login</button></div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/admin.component.html\n// module id = 654\n// module chunks = 1","module.exports = \"<div class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n    <div class=\\\"container-par\\\">\\n        <!-- <div class=\\\"col-md-12\\\"> -->\\n        <div class=\\\"navbar-header\\\">\\n            <!-- <div class=\\\"col-md-1\\\"> -->\\n            <!-- </div> -->\\n            <a routerLink=\\\"home\\\" class=\\\"navbar-brand\\\">ARG-miner</a>\\n            <button class=\\\"navbar-toggle\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar-main\\\">\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n        </div>\\n\\n        <div class=\\\"navbar-collapse collapse\\\" id=\\\"navbar-main\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n\\n                <li>\\n                    <a routerLink=\\\"home\\\">Home</a>\\n                </li>\\n\\n                <li>\\n                    <a routerLink=\\\"classify\\\">Classify</a>\\n                </li>\\n                <li>\\n                    <a routerLink=\\\"database\\\">Download</a>\\n                </li>\\n                <li>\\n                    <a routerLink=\\\"about\\\" target=\\\"_blank\\\">Instructions</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li><a routerLink=\\\"admin\\\">Admin</a></li>\\n            </ul>\\n\\n        </div>\\n        <!-- </div> -->\\n    </div>\\n</div>\\n\\n<hr>\\n<br>\\n<div class=\\\"container-par\\\">\\n    <!-- <div class=\\\"wrapper\\\"> -->\\n    <router-outlet></router-outlet>\\n    <!-- </div> -->\\n</div>\\n\\n<!-- <footer class=\\\"col-lg-12 main-footer\\\">\\n    <div class=\\\"pull-right\\\">\\n        <b>Version</b> 1.0\\n    </div>\\n    <strong>Copyright © 2016-2017 <a href=\\\"\\\">ZhangLab - Virginia Tech</a>.</strong> All rights reserved.\\n</footer> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 655\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"render\\\">\\n    <div *ngFor=\\\"let bh of randomARG.besthit.alignments\\\">\\n        <div *ngIf=\\\"bh.best_hit_database=='ARDB'\\\" class=\\\"\\\">\\n\\n            <div class=\\\"box box-solid \\\">\\n                <div class=\\\"box-header with-border\\\">\\n                    <i class=\\\"fa fa-gears\\\"></i>\\n                    <h3 class=\\\"box-title\\\"><strong> {{ bh.best_hit_database }} </strong> Database </h3>\\n                </div>\\n\\n                <!-- /.box-header -->\\n                <div class=\\\"box-body\\\">\\n\\n                    <!-- <dd> -->\\n                    <p> {{bh.metadata.description}} </p>\\n                    <div *ngFor=\\\"let type of bh.metadata.resistance_profile\\\">\\n                        <strong> <span class=\\\"strong\\\">{{ type.type }} </span> </strong>\\n                        <p *ngIf=\\\"type.description\\\"> {{ type.description }} </p>\\n                    </div>\\n                    <!-- <dd> -->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/ardb/ardb.component.html\n// module id = 656\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"render\\\">\\n\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-body\\\">\\n\\n            <p-dataTable [value]=\\\"cars\\\">\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Database</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        <strong> {{gene.database.toUpperCase()}} </strong>\\n                    </ng-template>\\n\\n                </p-column>\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Gene Name</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        {{gene.gene_name}}\\n                    </ng-template>\\n                </p-column>\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Similarity</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        <p-progressBar [value]=\\\"gene.similarity\\\"></p-progressBar>\\n                    </ng-template>\\n                </p-column>\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Coverage</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        <p-progressBar [value]=\\\"gene.coverage\\\"></p-progressBar>\\n                    </ng-template>\\n                </p-column>\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>*Bitscore Rate</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        <p-progressBar [value]=\\\"gene.bitscore_rate\\\"></p-progressBar>\\n                    </ng-template>\\n                </p-column>\\n                <p-column>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <th>Bitscore</th>\\n                    </ng-template>\\n                    <ng-template let-gene=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                        {{ gene.bitscore }}\\n                    </ng-template>\\n                </p-column>\\n\\n\\n            </p-dataTable>\\n\\n            <br>\\n            <p class=\\\"small\\\"> <strong>*Bitscore Rate</strong>: Reffers to the rate between the alignment bitscore and the optimal bitscore curated by CARD for this ARG.</p>\\n\\n\\n        </div>\\n    </div>\\n\\n    <div *ngFor=\\\"let bh of randomARG.besthit.alignments\\\">\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n        <div *ngIf=\\\"bh.best_hit_database=='CARD'\\\" class=\\\"\\\">\\n            <!-- <p>\\n                <strong> Scoring </strong>:\\n                <span class=\\\"label bg-red\\\">Very Weak</span>\\n                <span class=\\\"label bg-yellow\\\">Weak</span>\\n                <span class=\\\"label bg-green\\\">Middle</span>\\n                <span class=\\\"label bg-blue\\\">Strong</span>\\n                <span class=\\\"label bg-black\\\">Very Strong</span>\\n            </p> -->\\n            <div class=\\\"box box-solid \\\">\\n                <div class=\\\"box-header with-border\\\">\\n                    <i class=\\\"fa fa-gears\\\"></i>\\n                    <h3 class=\\\"box-title\\\"> <strong> {{ bh.best_hit_database }} </strong> Database </h3>\\n\\n                </div>\\n                <!-- /.box-header -->\\n                <div class=\\\"box-body\\\">\\n\\n\\n\\n                    <h4>AMR Gene Family (Antibiotic Class)</h4>\\n                    <div *ngFor=\\\"let meta of bh.metadata\\\">\\n                        <div *ngIf=\\\"meta.category_aro_class_name == 'AMR Gene Family'\\\">\\n                            <p>\\n                                <strong> {{ meta.category_aro_name }} </strong>: {{ meta.category_aro_description}} </p>\\n                        </div>\\n                    </div>\\n\\n                    <h4>Resistance Mechanism</h4>\\n                    <div *ngFor=\\\"let meta of bh.metadata\\\">\\n                        <div *ngIf=\\\"meta.category_aro_class_name == 'Resistance Mechanism'\\\">\\n                            <p>\\n                                <strong> {{ meta.category_aro_name }} </strong>: {{ meta.category_aro_description}} </p>\\n                        </div>\\n                    </div>\\n\\n                    <h4>Drug Class</h4>\\n                    <div *ngFor=\\\"let meta of bh.metadata\\\">\\n                        <div *ngIf=\\\"meta.category_aro_class_name == 'Drug Class'\\\">\\n                            <p>\\n                                <strong> {{ meta.category_aro_name }} </strong>: {{ meta.category_aro_description}} </p>\\n                        </div>\\n                    </div>\\n\\n                    <!-- <button color=\\\"primary\\\" class=\\\"pull-left\\\" md-mini-fab> <i class=\\\"fa fa-chevron-left\\\"></i> </button> -->\\n                    <!-- <button color=\\\"primary\\\" class=\\\"pull-right\\\" md-mini-fab> <i class=\\\"fa fa-chevron-right\\\"></i> </button> -->\\n                </div>\\n                <!-- /.box-body -->\\n            </div>\\n            <!-- /.box -->\\n        </div>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/card/card.component.html\n// module id = 657\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"render\\\">\\n    <div *ngFor=\\\"let bh of randomARG.besthit.alignments\\\">\\n        <div *ngIf=\\\"bh.best_hit_database!=='CARD' && bh.best_hit_database!=='ARDB'\\\" class=\\\"\\\">\\n            <div class=\\\"box box-solid \\\">\\n                <div class=\\\"box-header with-border\\\">\\n                    <i class=\\\"fa fa-gears\\\"></i>\\n\\n                    <h3 class=\\\"box-title\\\"><strong> {{ bh.best_hit_database }} </strong> Database </h3>\\n                </div>\\n                <div class=\\\"box-body\\\">\\n\\n                    <strong> Antibiotic Class: </strong> {{ bh.type }}<br>\\n                    <strong> Gene Name: </strong> {{ bh.subtype }}<br>\\n                    <strong> Antibiotic Mechanism: </strong> {{ bh.mechanism }}<br>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- <hr> -->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/generic/generic.component.html\n// module id = 658\n// module chunks = 1","module.exports = \"<p-growl class=\\\"user_growl\\\" [(value)]=\\\"notification\\\"></p-growl>\\n\\n<div class=\\\"\\\">\\n\\n    <div *ngIf=\\\"!render\\\" class=\\\"col-md-4 col-md-offset-4\\\">\\n    </div>\\n\\n    <div *ngIf=\\\"render\\\">\\n        <!--Left panel-->\\n        <div class=\\\"col-sm-3 affix coffix\\\">\\n            <!-- <div class=\\\"\\\"> -->\\n            <div *ngIf=\\\"randomARG.status==true\\\" class=\\\"\\\">\\n                <!-- <div class=\\\"col-md-12\\\"> -->\\n\\n                <div class=\\\"box box-solid box-primary\\\">\\n                    <div class=\\\"box-header with-border\\\">\\n\\n\\n\\n                        <i class=\\\"fa fa-gears\\\"></i>\\n                        <!-- <p *ngIf=\\\"loading\\\"><md-progress-bar mode=\\\"indeterminate\\\"></md-progress-bar></p>  -->\\n                        <h3 class=\\\"box-title\\\"><strong>Current Annotation </strong> </h3>\\n\\n                    </div>\\n\\n                    <!-- /.box-header -->\\n\\n                    <!-- <tour-step class=\\\"intro-tour-hint-wrapper\\\" selector=\\\"step1\\\" order=\\\"1\\\" position=\\\"right\\\">\\n                        <div class=\\\"box box-step\\\">\\n                            <div class=\\\"box-header\\\">\\n                                <h3 class=\\\"box-title\\\">\\n                                    ARG you have to curate\\n                                </h3>\\n                            </div>\\n                            <div class=\\\"box-body\\\">\\n                                This panel shows you the basic information about the antibiotic reistance gene you need to inspect. Note this information may contain errors. Therefore, by comparing this information with the known ARGs databases you will be able to correct or accept\\n                                the current annotation.\\n                            </div>\\n                        </div>\\n                    </tour-step> -->\\n\\n                    <div class=\\\"box-body\\\">\\n\\n                        <dl id=\\\"step1\\\" class=\\\"dl\\\">\\n                            <!-- <p> -->\\n                            <!-- </p> -->\\n                            <!-- <p> -->\\n\\n                            <strong>Gene Name:</strong>\\n                            <span class=\\\"\\\">{{ randomARG.entry.subtype }}</span>\\n                            <!-- </p> -->\\n                            <!-- <p> -->\\n                            <br>\\n                            <strong>Antibiotic Class:</strong>\\n                            <span class=\\\"\\\">{{ randomARG.entry.type }}</span>\\n                            <!-- </p> -->\\n                            <!-- <p> -->\\n                            <br>\\n                            <strong>Database:</strong>\\n                            <span class=\\\"\\\">{{ randomARG.entry.database }} ({{ randomARG.entry.gene_id }})</span>\\n                            <!-- </p> -->\\n                            <!-- <p> -->\\n                            <br>\\n                            <strong data-intro=\\\"step1\\\">Inspected:</strong>\\n                            <span class=\\\"\\\">{{ randomARG.inspected.length }}</span>\\n                            <br>\\n                            <!-- </p> -->\\n                            <!-- <dt>Score:</dt> -->\\n                            <!-- <dd><span class=\\\"badge bg-blue\\\">{{ randomARG.entry.score }}</span></dd> -->\\n                        </dl>\\n\\n                        <p class=\\\"small text-left\\\">\\n                            *ARG: <u><strong>A</strong>ntibiotic <strong>R</strong>esistance <strong>G</strong>ene</u>\\n                            <!-- <a (click)=\\\"startTour()\\\" class=\\\"badge bg-blue btn-xs\\\"><span class=\\\"\\\"> <strong> <i class=\\\"fa fa-compass\\\"></i> <u>Take a tour </u></strong> </span></a> -->\\n                        </p>\\n\\n\\n                        <hr>\\n                        <!-- <h4>Tutorial</h4> -->\\n\\n                        <!-- <div class=\\\"text-left\\\"> -->\\n\\n\\n\\n                        <!-- <a (click)=\\\"openInstructions()\\\" class=\\\"badge bg-red btn-xs\\\"><span class=\\\"\\\"> <strong> <u>Instructions</u></strong> </span></a> -->\\n                        <!-- </div> -->\\n                        <!-- <br> -->\\n                        <!-- <hr> -->\\n\\n                        <!-- <h4>Filter options</h4> -->\\n\\n                        <!-- <tour-step class=\\\"intro-tour-hint-wrapper\\\" selector=\\\"step2\\\" order=\\\"2\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <div class=\\\"box box-primary\\\">\\n                                    <div class=\\\"box-header\\\">\\n                                        <h3 class=\\\"box-title\\\">\\n                                            <strong>I am a New user</strong>\\n                                        </h3>\\n                                    </div>\\n                                    <div class=\\\"box-body\\\">\\n                                        If you are a new user, activate the new user button. You will have to complete 20 entries that will help you to get familiar with the system. I will also score your results based on the real annotation.\\n                                    </div>\\n                                    <div class=\\\"box-footer\\\">\\n\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                        </tour-step> -->\\n\\n                        <div id=\\\"step3\\\">\\n                            <md-slide-toggle (change)=\\\"trainingARGEvent($event)\\\" [checked]=\\\"trainingARGFlag\\\"><strong>New User</strong></md-slide-toggle>\\n                            <p class=\\\"small\\\">Enable this option if this is the first time you enter the website.</p>\\n                        </div>\\n                        <!-- <hr> -->\\n                        <div id=\\\"step4\\\">\\n                            <md-slide-toggle (change)=\\\"selectConflictedArgEvent($event)\\\" [checked]=\\\"conflictedArgSubtypeFlag\\\"><strong>Priority ARGs</strong></md-slide-toggle>\\n                            <p class=\\\"small\\\">This option selects ARGs with high priority of curation.</p>\\n                        </div>\\n                        <hr>\\n\\n\\n\\n                        <div *ngIf=\\\"loading==false && conflictedArgSubtypeFlag\\\">\\n\\n                            <h4> Conflicted ARGs </h4>\\n                            <p class=\\\"small\\\">This section contains the list of ARGs under the category {{ conflictingARGSubtype.subtype }} that present inconsistences respect its ARG class annotation.</p>\\n                            <!-- <div class=\\\"box-body\\\"> -->\\n                            <!-- <p> <strong>Gene:</strong> <mark>{{ conflictingARGSubtype.subtype }}</mark></p> -->\\n                            <div *ngFor=\\\"let item of conflictingARGSubtype.conflict\\\">\\n                                <strong>{{ item.class }}</strong> {{ item.genes.length }}\\n                            </div>\\n                            <hr>\\n                            <button (click)=\\\"nextGene()\\\" class=\\\"\\\" color=\\\"primary\\\" md-raised-button>Random ARG</button>\\n                            <button (click)=\\\"nextGeneConflictList()\\\" class=\\\"\\\" color=\\\"warn\\\" md-raised-button>Next ARG</button>\\n                            <!-- </div> -->\\n                        </div>\\n\\n                        <div *ngIf=\\\"conflictedArgSubtypeFlag==false && trainingARGFlag==false\\\" class=\\\"col-md-12 text-center\\\">\\n                            <button (click)=\\\"nextGene()\\\" class=\\\"\\\" color=\\\"primary\\\" md-raised-button>Random ARG</button>\\n                        </div>\\n\\n                        <div *ngIf=\\\"trainingARGFlag && conflictedArgSubtypeFlag==false\\\" class=\\\"col-md-12 text-center\\\">\\n                            <button (click)=\\\"trainingARGNextGene()\\\" class=\\\"\\\" color=\\\"primary\\\" md-raised-button>Next ARG</button>\\n                        </div>\\n\\n                        <!-- <div class=\\\"col-md-12 text-right\\\">\\n                            <button (click)=\\\"nextGene()\\\" class=\\\"\\\" color=\\\"red\\\" md-raised-button>Random</button>\\n                        </div> -->\\n\\n\\n                    </div>\\n\\n                    <!-- /.box-body -->\\n                    <!-- </div> -->\\n                    <!-- /.box -->\\n                </div>\\n            </div>\\n\\n            <!-- <div class=\\\"col-md-12 box box-solid \\\">\\n\\n                <h4>Note about BitScores</h4>\\n                <p class=\\\"small\\\">A bitscore of 50 is considered significant if the alignment covers at least 90% of the reference sequence</p>\\n                <p class=\\\"small\\\">Bit-score does not depend on database size. The bit-score gives the same value for hits in databases of different sizes and hence can be used for searching in an constantly increasing database.</p>\\n                <p class=\\\"small\\\"> The higher the bitscore, the better the quality of the sequence alignment</p>\\n\\n            </div> -->\\n\\n        </div>\\n\\n        <div class=\\\"col-sm-3\\\"></div>\\n        <div class=\\\"col-sm-6 col-sm-offset-0\\\">\\n\\n            <div id=\\\"step5\\\" class=\\\"\\\">\\n                <div class=\\\"box box-solid \\\">\\n                    <div class=\\\"box-body\\\">\\n                        <md-input-container class='col-sm-12 col-sm-offset-0'>\\n                            <input #keyword type=\\\"search\\\" (keyup.enter)=\\\"search(keyword.value)\\\" mdInput placeholder=\\\"Search term \\\" value=\\\"\\\" />\\n                        </md-input-container>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div *ngIf=\\\"loading==true\\\" class=\\\"col-md-4 col-md-offset-4\\\">\\n                <div class=\\\"col-sm-8 col-sm-offset-2\\\">\\n                    <object>\\n                <embed src=\\\"assets/images/loading_1.svg\\\" />\\n              </object>\\n                </div>\\n            </div>\\n\\n\\n            <div *ngIf=\\\"randomARG.status==true && loading==false && ARG_display\\\">\\n\\n                <md-expansion-panel id=\\\"step12\\\" class=\\\"box box-solid\\\" [expanded]=\\\"false\\\">\\n\\n                    <!-- <md-expansion-panel-header>\\n                        <md-panel-title>\\n                            Tips and Tricks\\n                        </md-panel-title>\\n                        <md-panel-description>\\n                            To get a successful annotation take into account the next tips:\\n                        </md-panel-description>\\n                    </md-expansion-panel-header> !-->\\n\\n                    <div class=\\\"box-body\\\">\\n                        <ul>\\n                            <li>\\n                                <strong>Gene Name:</strong> To validate the gene name take a look at the panels with <span class=\\\"label bg-blue\\\"> strong </span> and <span class=\\\"label bg-black\\\">very strong</span> evidence. If several panels have strong\\n                                evidence, select the gene name in the panel with the highest bitscore. If none of the panels have strong evidence, then, keep the <u>gene name</u> as in the <strong> current annotation</strong> and verify the Metadata section\\n                                (if available) for consensus.\\n                            </li>\\n                            <li>\\n                                <strong>Antibiotic Class:</strong> To validate the antibiotic class take a look at the descriptions from the databases. There is not restrction about evidence. But it is expected to see a consensus between the different\\n                                databases also check the Metadata section (if available).\\n                            </li>\\n                            <li>\\n                                <strong>Antibiotic Mechanism:</strong> Check the AMR profile and Metadata (if available) to find the antibiotic mechanism. If the evidence from the <strong>MEGARes</strong> database is <span class=\\\"label bg-green\\\"> middle </span>,\\n                                <span class=\\\"label bg-blue\\\"> strong </span> or <span class=\\\"label bg-black\\\"> very strong </span>, it is safe to set this mechanism. Other case, seek for consensus from the different panels and the Metadata section (if available).\\n                            </li>\\n                            <li>\\n                                If the evidence score from the reference databases is <span class=\\\"label bg-yellow\\\"> weak </span> or <span class=\\\"label bg-red\\\"> very weak </span>, check the Metadata section (if available).\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </md-expansion-panel>\\n\\n                <!-- <br> -->\\n                <!-- <h4>Similarity to known ARGs</h4> -->\\n                <!-- <md-tab-group (selectChange)=\\\"tabsEvent($event)\\\"> -->\\n                <!-- <md-tab  label=\\\"METADATA\\\"> -->\\n\\n\\n                <div *ngFor=\\\"let bh of randomARG.besthit.alignments\\\">\\n                    <!-- <p> {{ bh.best_hit_database }} </p>  -->\\n\\n                    <div id=\\\"step8\\\" *ngIf=\\\"bh.best_hit_database=='ARDB'\\\">\\n                        <besthit-metadata-ardb> </besthit-metadata-ardb>\\n                    </div>\\n                    <div id=\\\"step7\\\" *ngIf=\\\"bh.best_hit_database=='CARD'\\\">\\n                        <besthit-metadata-card> </besthit-metadata-card>\\n                    </div>\\n                </div>\\n                <!-- </md-tab> -->\\n\\n                <!-- OTHER DATABASES  -->\\n                <div id=\\\"step9\\\">\\n                    <app-generic></app-generic>\\n                </div>\\n\\n                <!-- <h4 *ngIf=\\\"randomARG.entry.database=='UNIPROT'\\\">Metadata</h4> -->\\n\\n                <!--METADATA SECTION-->\\n                <div id=\\\"step6\\\">\\n                    <classify-metadata-uniprot *ngIf=\\\"randomARG.entry.database=='UNIPROT'\\\"> </classify-metadata-uniprot>\\n                </div>\\n\\n\\n                <classify-metadata-card> </classify-metadata-card>\\n\\n\\n                <!-- </md-tab> -->\\n\\n                <!-- <md-tab  label=\\\"BEST HIT\\\"> -->\\n                <!-- <hr *ngIf=\\\"randomARG.entry.database=='UNIPROT'\\\"> -->\\n\\n\\n\\n                <!-- <h4>Mobile Genetic Elements (MGEs)</h4> -->\\n\\n\\n\\n                <!-- <md-tab  label=\\\"HORIZONTAL GENE TRANSFER\\\"> -->\\n                <!-- <div *ngIf=\\\"drawGenomes\\\"> -->\\n\\n                <!-- </div> -->\\n                <!-- </md-tab> -->\\n\\n                <!-- </md-tab-group> -->\\n                <br>\\n                <div>\\n                    <div class=\\\"box box-solid \\\">\\n                        <div class=\\\"box-header with-border\\\">\\n                            <h3 class=\\\"box-title\\\"> <strong>Protein sequence</strong> ({{ randomARG.entry.gene_id }}) </h3>\\n                        </div>\\n                        <div class=\\\"box-body\\\">\\n                            <p class=\\\"sequence small\\\"> ><strong>{{randomARG.entry.gene_id}}</strong> <br> {{ randomARG.entry.sequence }}</p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <br><br><br><br>\\n            </div>\\n        </div>\\n\\n\\n        <!-- <div class=\\\"col-sm-3\\\"> -->\\n        <div id=\\\"step11\\\" class=\\\"curate-nav affix clarify\\\">\\n            <!-- <aside class=\\\"control-sidebar control-sidebar-open\\\"> -->\\n            <app-curate></app-curate>\\n            <!-- </aside> -->\\n        </div>\\n        <!-- </div> -->\\n    </div>\\n\\n    <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n        <div id=\\\"step10\\\" *ngIf=\\\"MGE_display\\\">\\n            <genome-metadata *ngIf=\\\"randomARG.entry.database=='UNIPROT'\\\"></genome-metadata>\\n            <genome-metadata *ngIf=\\\"randomARG.entry.database=='CARD'\\\"></genome-metadata>\\n            <genome-metadata *ngIf=\\\"randomARG.entry.database=='ARDB'\\\"></genome-metadata>\\n        </div>\\n    </div>\\n    <!--</md-tab>-->\\n\\n    <!--<md-tab label=\\\"Novel ARGs\\\">Content 2</md-tab>-->\\n\\n    <!--<md-tab label=\\\"Potential ARGs\\\">Content 2</md-tab>-->\\n\\n    <!--</md-tab-group>-->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/classify.component.html\n// module id = 659\n// module chunks = 1","module.exports = \"<div>\\n    <div class=\\\"box\\\">\\n        <div class=\\\"box-body\\\">\\n            <p class=\\\"small\\\">Please copy and paste this token to the Mturk website.</p>\\n            <strong>Token:</strong> <code *ngIf=\\\"inspectedGenes.length >= classifyComponent.trainingARGTotal+1\\\">{{antibiotic.token}}</code>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"\\\">\\n    <div class=\\\"box box-solid box-primary\\\">\\n        <div class=\\\"box-body\\\">\\n            <p-steps styleClass=\\\"steps-custom\\\" [(activeIndex)]=\\\"activeIndex\\\" [readonly]=\\\"true\\\" [model]=\\\"items\\\"></p-steps>\\n\\n            <div *ngIf=\\\"step1 text-center\\\">\\n\\n                <!-- <div class=\\\"col-md-12\\\"> -->\\n                <h4 class=\\\"text-center\\\"><strong>ARG Annotation</strong></h4>\\n                <p>Please based on your observations add the corresponding data to the form below:</p>\\n\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input type=\\\"text\\\" [formControl]=\\\"groupControl\\\" [mdAutocomplete]=\\\"AGroup\\\" mdInput [(ngModel)]=\\\"antibiotic.group\\\" placeholder=\\\"Gene Name\\\">\\n                </md-input-container>\\n\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input type=\\\"text\\\" mdInput [formControl]=\\\"myControl\\\" [mdAutocomplete]=\\\"AClass\\\" [(ngModel)]=\\\"antibiotic.class\\\" placeholder=\\\"Antibiotic Class\\\">\\n                </md-input-container>\\n\\n                <md-autocomplete #AClass=\\\"mdAutocomplete\\\">\\n                    <md-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\" required>\\n                        {{ option }}\\n                    </md-option>\\n                </md-autocomplete>\\n\\n                <md-autocomplete #AGroup=\\\"mdAutocomplete\\\">\\n                    <md-option *ngFor=\\\"let option of groupFilteredOptions | async\\\" [value]=\\\"option\\\" required>\\n                        {{ option }}\\n                    </md-option>\\n                </md-autocomplete>\\n\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input type=\\\"text\\\" mdInput [(ngModel)]=\\\"antibiotic.mechanism\\\" placeholder=\\\"Antibiotic Mechanism\\\" required>\\n                </md-input-container>\\n\\n                <br><br>\\n\\n                <div class=\\\"col-md-12 text-center\\\">\\n                    <a (click)=\\\"validate(1)\\\" color=\\\"primary\\\" md-raised-button>Next</a>\\n                    <!-- <button (click)=\\\"reportARG()\\\" class=\\\"\\\" color=\\\"red\\\" md-raised-button>Report ARG</button> -->\\n                </div>\\n                <!-- </div> -->\\n\\n            </div>\\n\\n\\n\\n            <div *ngIf=\\\"step2\\\">\\n\\n\\n                <!-- <div class=\\\"col-md-12\\\"> -->\\n                <h4 class=\\\"text-center\\\"><strong>Mobile Genetic Elements</strong></h4>\\n                <div class=\\\"col-md-12\\\">\\n                    <p class=\\\"small\\\">Is there any evidence that suggests the ARG to be carried by any of the following: </p>\\n\\n                    <div *ngFor=\\\"let ht of mge_options\\\">\\n                        <md-checkbox value=\\\"{{ht}}\\\" (change)=\\\"mgeOptions(ht, $event)\\\">{{ ht }}</md-checkbox>\\n                    </div>\\n                    <p>How do you rate this evidence? </p>\\n                    <star-rating-comp (onRatingChange)=\\\"onRatingChange('mge',$event)\\\" [starType]=\\\"'svg'\\\" [rating]=\\\"0\\\" [labelPosition]=\\\"'top'\\\"></star-rating-comp>\\n                    <!-- <p class=\\\"small\\\"> Scores: 1 means there is not evidence and 5 means there is strong evidene that the gene is being carried by any of the three options.</p> -->\\n                </div>\\n\\n                <div class=\\\"col-md-12\\\">\\n                    <h4 class=\\\"text-center\\\"><strong>Pathogenic Genomes</strong></h4>\\n\\n                    <p>Is there evidence of any pathogenic genomes containing the gene? </p>\\n\\n                    <!-- <md-radio-group [(ngModel)]=\\\"antibiotic.pathGenome\\\">\\n                        <md-radio-button value=\\\"1\\\">Yes</md-radio-button> <br>\\n                        <md-radio-button value=\\\"2\\\">Not</md-radio-button> <br>\\n                    </md-radio-group> -->\\n\\n                    <!-- <p>How do you rate this evidence? </p> -->\\n                    <star-rating-comp (onRatingChange)=\\\"onRatingChange('genome',$event)\\\" [starType]=\\\"'svg'\\\" [rating]=\\\"0\\\" [labelPosition]=\\\"'top'\\\"></star-rating-comp>\\n                    <p class=\\\"small\\\">Scores: 1 means there is not evidence whereas 5 means there is strong evidence.</p>\\n                    <hr>\\n\\n                </div>\\n\\n\\n\\n                <div class=\\\"col-md-12 text-center\\\">\\n                    <button (click)=\\\"validate(2)\\\" color=\\\"primary\\\" md-raised-button>Next</button>\\n                </div>\\n                <!-- </div> -->\\n\\n\\n\\n            </div>\\n\\n            <div *ngIf=\\\"step3\\\">\\n                <div class=\\\"col-md-12 text-center\\\">\\n                    <h4>Overall Rating</h4>\\n                </div>\\n                <!-- <div class=\\\"col-md-12\\\"> -->\\n                <!-- <div class=\\\"col-md-12\\\"> -->\\n                <!-- <h4 class=\\\"text-center\\\"><strong>ARG annotation</strong></h4> -->\\n                <!-- <dl class=\\\"dl\\\"> -->\\n                <!-- <h4></h4>\\n                        <strong>ARG Class:</strong>\\n                        <span class=\\\"\\\"> {{ antibiotic.class }} </span>\\n                        <br>\\n\\n                        <strong>ARG Group:</strong>\\n                        <span class=\\\"\\\"> {{ antibiotic.group }} </span>\\n                        <br>\\n\\n                        <strong *ngIf=\\\"!antibiotic.mechanism==null\\\">ARG Mechanism:</strong>\\n                        <span *ngIf=\\\"!antibiotic.mechanism==null\\\">{{ antibiotic.mechanism }} </span> -->\\n\\n                <!-- </dl> -->\\n                <!-- <hr> -->\\n                <!-- </div> -->\\n\\n                <div class=\\\"col-md-12 col-md-offset-0 text-center\\\">\\n                    <p>Please rate the confidence in your observations</p>\\n                    <star-rating-comp (onRatingChange)=\\\"onRatingChange('confidence',$event)\\\" [starType]=\\\"'svg'\\\" [rating]=\\\"0\\\" [labelPosition]=\\\"'top'\\\"></star-rating-comp>\\n                    <hr>\\n                </div>\\n\\n                <div class=\\\"col-md-12 col-md-offset-0 text-center\\\">\\n                    <p>Please rate your level of expertise</p>\\n                    <star-rating-comp (onRatingChange)=\\\"onRatingChange('expertise',$event)\\\" [starType]=\\\"'svg'\\\" [rating]=\\\"0\\\" [labelPosition]=\\\"'top'\\\"></star-rating-comp>\\n                    <hr>\\n                </div>\\n\\n\\n\\n                <!-- <md-input-container class=\\\"col-md-12\\\">\\n                    <p>Please add any relevant comments</p>\\n                    <textarea mdInput [(ngModel)]=\\\"antibiotic.comments\\\" rows=\\\"5\\\"></textarea>\\n                </md-input-container> -->\\n\\n\\n                <div class=\\\"col-md-12 text-center\\\">\\n                    <button (click)=\\\"submitReview()\\\" class=\\\"\\\" color=\\\"green\\\" md-raised-button>Submit</button>\\n                    <button (click)=\\\"validate(3)\\\" class=\\\"\\\" color=\\\"red\\\" md-raised-button>Cancel</button>\\n                </div>\\n\\n\\n                <!-- </div> -->\\n            </div>\\n\\n\\n\\n        </div>\\n\\n    </div>\\n\\n    <div *ngIf=\\\"inspectedGenes.length>0\\\" class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header\\\">\\n            <h3 class=\\\"box-title\\\">Inspected genes: {{ inspectedGenes.length }}</h3>\\n        </div>\\n        <!-- <div class=\\\"box-body\\\">\\n\\n            <span *ngFor=\\\"let item of inspectedGenes\\\" class=\\\"badge\\\">\\n                {{ item }}\\n            </span>\\n        </div> -->\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/curate/curate.component.html\n// module id = 660\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"renderMobile\\\">\\n    <div *ngFor=\\\"let item of randomARG.mobile\\\" class=\\\"\\\">\\n        <div *ngIf=\\\"item.status==true && item.identity.mean>50\\\" class=\\\"\\\">\\n            <!-- <h4>Mobile Genetic Elements (MGEs)</h4> -->\\n            <p>\\n                <strong> Scoring </strong>:\\n                <span class=\\\"label bg-red\\\">Very Weak</span>\\n                <span class=\\\"label bg-yellow\\\">Weak</span>\\n                <span class=\\\"label bg-green\\\">Middle</span>\\n                <span class=\\\"label bg-blue\\\">Strong</span>\\n                <span class=\\\"label bg-black\\\">Very Strong</span>\\n            </p>\\n            <div class=\\\"box box-solid\\\">\\n                <!-- <div class=\\\"col-md-10 col-md-offset-1\\\"> -->\\n\\n                <div class=\\\"box-header with-border \\\">\\n                    <i class=\\\"fa fa-tag\\\"></i>\\n                    <h3 class=\\\"box-title\\\" *ngIf=\\\"item.type=='proph'\\\">Prophages</h3>\\n                    <h3 class=\\\"box-title\\\" *ngIf=\\\"item.type=='plasmid'\\\">Plasmids</h3>\\n                    <h3 class=\\\"box-title\\\" *ngIf=\\\"item.type=='vir'\\\">Viruses</h3>\\n\\n                </div>\\n\\n                <!-- </div> -->\\n\\n                <!-- <div class=\\\"col-md-12\\\"> -->\\n                <div class=\\\"box-body\\\">\\n                    <dl class=\\\"dl-horizontal\\\">\\n                        <dt>Type:</dt>\\n                        <dd>\\n                            <strong><p *ngIf=\\\"item.type=='proph'\\\">Prophages</p></strong>\\n                            <strong><p *ngIf=\\\"item.type=='plasmid'\\\">Plasmids</p></strong>\\n                            <strong><p *ngIf=\\\"item.type=='vir'\\\">Viruses</p></strong>\\n                        </dd>\\n                        <dt>Count:</dt>\\n                        <dd> <span> {{ item.count }} </span></dd>\\n                        <dt>Similarity:</dt>\\n                        <dd> <span class=\\\"badge bg-{{ item.identity.color }}\\\"> {{ item.identity.mean }}%  {{ '&plusmn;' }} {{item.identity.std}} </span></dd>\\n                        <dt>BitScore:</dt>\\n                        <dd> <span class=\\\"badge bg-{{ item.bitscore.color }}\\\"> {{ item.bitscore.mean }} {{ '&plusmn;' }} {{item.bitscore.std}} </span></dd>\\n                        <!-- <dt>Evalue (log):</dt> -->\\n                        <!-- <dd> <span class=\\\"badge bg-{{ item.evalue.color }}\\\"> {{ item.evalue.mean.toPrecision(2)}} {{ '&plusmn;' }} {{item.evalue.std.toPrecision(2)}} </span></dd> -->\\n                        <dt>Coverage:</dt>\\n                        <dd> <span class=\\\"badge bg-{{ item.coverage.color }}\\\"> {{  (100*item.coverage.mean/randomARG.entry['length']).toFixed(0) }}% {{ '&plusmn;' }} {{(100*item.coverage.std/randomARG.entry['length']).toFixed(0)}} </span></dd>\\n                        <dt>Description:</dt>\\n                        <dd>{{ item.mge_description }}</dd>\\n                        <dt>Gene Aclame ID:</dt>\\n                        <dd>{{ item.mge_id }}</dd>\\n                    </dl>\\n                </div>\\n                <!-- </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n<div *ngIf=\\\"renderPathogen\\\">\\n    <div *ngIf=\\\"randomARG.pathogen.status==true\\\" class=\\\"\\\">\\n        <!-- <div class=\\\"col-md-12\\\"> -->\\n        <!-- <h4>Bacterial Genomes</h4> -->\\n        <p>\\n            <strong> Scoring </strong>:\\n            <span class=\\\"label bg-red\\\">Very Weak</span>\\n            <span class=\\\"label bg-yellow\\\">Weak</span>\\n            <span class=\\\"label bg-green\\\">Middle</span>\\n            <span class=\\\"label bg-blue\\\">Strong</span>\\n            <span class=\\\"label bg-black\\\">Very Strong</span>\\n        </p>\\n        <div class=\\\"box box-solid\\\">\\n\\n\\n            <div class=\\\"box-header with-border\\\">\\n\\n                <!-- <div class=\\\"col-md-10 col-md-offset-1\\\">\\n                            <svg  width=\\\"50px\\\" height=\\\"50px\\\"  class=\\\"resistant\\\" />\\n                        </div> -->\\n                <i class=\\\"fa fa-bug\\\"></i>\\n                <h3 class=\\\"box-title\\\">Pathogenic Genomes</h3>\\n\\n            </div>\\n\\n\\n            <div class=\\\"\\\">\\n\\n                <div class=\\\"box-body\\\">\\n\\n                    <p>\\n                        <strong>Pathogen Score:</strong>\\n                        <span class=\\\"badge bg-red\\\" *ngIf=\\\"genomeCount<10\\\">\\n                                    {{(genomeCount).toFixed(1)}}%\\n                                </span>\\n                        <span class=\\\"badge bg-yellow\\\" *ngIf=\\\"genomeCount<20 && genomeCount>10\\\">\\n                                    {{(genomeCount).toFixed(1)}}%\\n                                </span>\\n                        <span class=\\\"badge bg-green\\\" *ngIf=\\\"genomeCount<30 && genomeCount>20\\\">\\n                                    {{(genomeCount).toFixed(1)}}%\\n                                </span>\\n                        <span class=\\\"badge bg-blue\\\" *ngIf=\\\"genomeCount<60 && genomeCount>30\\\">\\n                                    {{(genomeCount).toFixed(1)}}%\\n                                </span>\\n                        <span class=\\\"badge bg-black\\\" *ngIf=\\\"genomeCount<90 && genomeCount>60\\\">\\n                                    {{(genomeCount).toFixed(1)}}%\\n                                </span>\\n                    </p>\\n                    <hr> The gene entry {{randomARG.entry.gene_id}} (<strong>{{ randomARG.entry.subtype }}</strong>) has been aligned to the <a href=\\\"https://www.patricbrc.org/\\\">PATRIC</a> database using strict cutoffs to ensure the existence of the gene\\n                    (>90% identity, >90% coverage).\\n                    <br><br><strong>{{ randomARG['pathogen'].genomes_count }}</strong> genomes contain this particular gene ({{randomARG.entry.gene_id}}). From those,\\n                    <strong>{{ randomARG.pathogen.genomes_pathogen }}</strong> (\\n                    <span class=\\\"badge bg-red\\\" *ngIf=\\\"genomeCount<10\\\">\\n                    {{(genomeCount).toFixed(1)}}%\\n                </span>\\n                    <span class=\\\"badge bg-yellow\\\" *ngIf=\\\"genomeCount<20 && genomeCount>10\\\">\\n                    {{(genomeCount).toFixed(1)}}%\\n                </span>\\n                    <span class=\\\"badge bg-green\\\" *ngIf=\\\"genomeCount<30 && genomeCount>20\\\">\\n                    {{(genomeCount).toFixed(1)}}%\\n                </span>\\n                    <span class=\\\"badge bg-blue\\\" *ngIf=\\\"genomeCount<60 && genomeCount>30\\\">\\n                    {{(genomeCount).toFixed(1)}}%\\n                </span>\\n                    <span class=\\\"badge bg-black\\\" *ngIf=\\\"genomeCount<90 && genomeCount>60\\\">\\n                    {{(genomeCount).toFixed(1)}}%\\n                </span>) genomes are labeled as <u>pathogens</u>.\\n\\n\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!-- PIE CHARTS WITH THE DATA INFORMATION  -->\\n\\n        <md-expansion-panel class=\\\"box box-solid\\\" style=\\\"background:rgba(0,0,0,0)\\\">\\n\\n            <md-expansion-panel-header>\\n                <md-panel-title>\\n                    Disease and Antimicrobial Resistance profile\\n                </md-panel-title>\\n                <md-panel-description>\\n                    More information about Pathogens\\n                </md-panel-description>\\n            </md-expansion-panel-header>\\n\\n            <div *ngIf=\\\"disease.ready\\\" class=\\\"fig-panel\\\">\\n                <!-- <div class=\\\"box box-solid\\\"> -->\\n                <div class=\\\"box-header with-border\\\">\\n                    <!-- <i class=\\\"fa fa-bug\\\"></i> -->\\n                    <h3 class=\\\"box-title\\\">Genomes causing diseases</h3>\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <p>This figure shows the distribution of the bacterial genomes that are reported to cause or be involved in any diseases and contain the gene <u>{{ randomARG.entry.gene_id }}</u>.</p>\\n                    <!-- <ngx-charts-pie-grid [scheme]=\\\"disease.colorScheme\\\" [results]=\\\"disease.data\\\" (select)=\\\"onSelect($event)\\\"></ngx-charts-pie-grid> -->\\n                </div>\\n                <!-- </div> -->\\n            </div>\\n\\n            <!-- PIE CHARTS WITH THE DATA INFORMATION  -->\\n            <div *ngIf=\\\"AMR_phenotype.ready\\\" class=\\\" fig-panel\\\">\\n                <!-- <div class=\\\"box box-solid\\\"> -->\\n                <div class=\\\"box-header with-border\\\">\\n                    <!-- <i class=\\\"fa fa-bug\\\"></i> -->\\n                    <h3 class=\\\"box-title\\\">Genomes with Antimicrobial Resistance phenotype</h3>\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <p>This figure shows the existing antimicrobial resistance phenotype from the genomes.</p>\\n                    <!-- <ngx-charts-pie-grid [scheme]=\\\"AMR_phenotype.colorScheme\\\" [results]=\\\"AMR_phenotype.data\\\" (select)=\\\"onSelect($event)\\\"></ngx-charts-pie-grid> -->\\n                </div>\\n                <!-- </div> -->\\n            </div>\\n\\n            <!-- PIE CHARTS WITH THE DATA INFORMATION  -->\\n            <div *ngIf=\\\"host.ready\\\" class=\\\"fig-panel\\\">\\n                <!-- <div class=\\\"box box-solid\\\"> -->\\n                <div class=\\\"box-header with-border\\\">\\n                    <!-- <i class=\\\"fa fa-bug\\\"></i> -->\\n                    <h3 class=\\\"box-title\\\">Bacterial hosts</h3>\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <p>This figure shows the distribution of the host organisms. The number of genomes corresponds to the genomes with it reported hosts.</p>\\n                    <!-- <ngx-charts-pie-grid [scheme]=\\\"host.colorScheme\\\" [results]=\\\"host.data\\\" (select)=\\\"onSelect($event)\\\"></ngx-charts-pie-grid> -->\\n                </div>\\n                <!-- </div> -->\\n            </div>\\n        </md-expansion-panel>\\n\\n\\n\\n\\n\\n        <!-- </div> -->\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/genomes/genome.component.html\n// module id = 661\n// module chunks = 1","module.exports = \"<div style=\\\"overflow: auto\\\" class=\\\"\\\">\\n    <h3>Instructions</h3>\\n    <p>\\n        The goal of this platform is to validate and complement the information under the <strong> Current Annotation </strong> panel by looking at the data presented in the main section. Then, you will have to fill the form uder the <strong>ARG Annotation</strong>        section.\\n    </p>\\n    <h4>1. Get familiar with the environment</h4>\\n    <p>\\n        In order to understand the structure of this website, please, click on the <strong>Tour</strong> button.\\n    </p>\\n    <h4>2. New user</h4>\\n    <p class=\\\"\\\">\\n        If this is the first time you enter the website, you are required to perform two classifications. To do so, click the <strong>New User</strong> button and perform three ARG annotations.\\n    </p>\\n\\n    <h4>3. How to get a reward </h4>\\n    <p>\\n        Once you have done with the training, you are ready to start. First, click on <strong>Priority ARGs</strong> button and perform one annotation. After you done with the annotation you will get a token number. Please, copy and paste this token to\\n        the Amazon Mturk website and submit the form. If you plan to make another Hit <strong><span style=\\\"color:red\\\">DO NOT close the ARG-miner website.</span></strong> Other case you will have to do the training again.\\n    </p>\\n\\n    <h4>4. Perform a new Hit</h4>\\n    <p>\\n        First, open a new hit in Amazon Mturk, then, get back to this webpage and just click on the <strong>Other ARG Group</strong> button. Perform the annotation and submit the token to Amazon Mturk.\\n    </p>\\n\\n    <strong><h4 style=\\\"color:red\\\"> Be Aware! </h4></strong>\\n    <p>\\n        If you don't do the mandatory training, the system <strong>will not</strong> prompt the token.\\n    </p>\\n    <p>\\n        If the annotation contains random, unrelated or nonsense words, the HIT will be rejected.\\n    </p>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/instructions/instructions.component.html\n// module id = 662\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/ardb/ardb.component.html\n// module id = 663\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/card/card.component.html\n// module id = 664\n// module chunks = 1","module.exports = \"<!-- <div *ngIf=\\\"randomARG.metadata.status==true\\\" class=\\\"\\\">\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header\\\">\\n            <h3 class=\\\"panel-title\\\"> <i class=\\\"fa fa-bug\\\"></i> <strong> Lineage (<a class=\\\"panel-title\\\" href=\\\"https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?id={{ randomARG.metadata.organism.taxonomy }}\\\">NCBI Taxonomy </a>) </strong></h3>\\n        </div>\\n       \\n        <div class=\\\"box-body\\\">\\n            <div class=\\\"dl-vertical\\\">\\n                <span *ngFor=\\\"let item of randomARG.metadata.organism.lineage\\\">\\n          {{ item }} <strong>&rsaquo;</strong>\\t\\n        </span>\\n            </div>\\n            <p *ngIf=\\\"randomARG.metadata.organism.names\\\"> <strong>Organism: </strong>{{ randomARG.metadata.organism.names[0].value }}</p>\\n        </div>\\n        \\n    </div>\\n    \\n</div> -->\\n\\n\\n\\n<div *ngIf=\\\"render\\\" class=\\\"\\\">\\n    <div class=\\\"box box-solid \\\">\\n        <div class=\\\"box-header with-border\\\">\\n            <i class=\\\"fa fa-tag\\\"></i>\\n\\n            <h3 class=\\\"box-title\\\"><strong>Metadata</strong></h3>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body\\\">\\n            <p *ngIf=\\\"randomARG.metadata.gene\\\"> <strong *ngIf=\\\"randomARG.metadata.gene[0].name\\\">Gene Name: </strong> <span class=\\\"\\\" *ngIf=\\\"randomARG.metadata.gene[0].name\\\"> {{ randomARG.metadata.gene[0].name.value }} </span></p>\\n            <p *ngIf=\\\"randomARG.metadata.protein.recommendedName\\\" class=\\\"\\\" data-original-title=\\\"\\\"> <strong>Protein: </strong> <span class=\\\"\\\"> {{ randomARG.metadata.protein.recommendedName.fullName.value }} </span> </p>\\n            <p *ngIf=\\\"randomARG.metadata.proteinExistence\\\" data-original-title=\\\"\\\"> <strong>Protein Existence: </strong> <span class=\\\"\\\">  {{ randomARG.metadata.proteinExistence }} </span> </p>\\n\\n            <p><strong>Sequence length (AA)</strong>: <span> {{ randomARG.entry['length'] }}</span></p>\\n\\n            <hr>\\n\\n            <span *ngFor=\\\"let item of randomARG.metadata.keywords\\\" class=\\\"badge bg-blue\\\" data-original-title=\\\"\\\"> {{ item.value }} </span>\\n\\n        </div>\\n        <!-- /.box-body -->\\n    </div>\\n    <!-- /.box -->\\n</div>\\n\\n\\n<div *ngIf=\\\"render\\\" class=\\\"\\\">\\n    <div class=\\\"box box-solid \\\">\\n        <div class=\\\"box-header with-border\\\">\\n            <i class=\\\"fa fa-object-group\\\"></i>\\n\\n            <h3 class=\\\"box-title\\\"><strong>Description</strong></h3>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body\\\">\\n            <dl class=\\\"dl-horizontal\\\">\\n                <div *ngFor=\\\"let item of randomARG.metadata.comments\\\">\\n                    <dt *ngIf=\\\"item.text\\\"> {{ item.type }}:</dt>\\n                    <dd *ngIf=\\\"item.text\\\"> {{ item.text[0].value }}</dd>\\n                    <br>\\n                </div>\\n            </dl>\\n\\n        </div>\\n        <!-- /.box-body -->\\n    </div>\\n    <!-- /.box -->\\n</div>\\n\\n\\n<div *ngIf=\\\"render\\\" class=\\\"\\\">\\n    <md-expansion-panel class=\\\"box box-solid\\\">\\n        <!-- <div class=\\\"box box-solid\\\"> -->\\n        <md-expansion-panel-header>\\n            <md-panel-title>\\n                <h4>Gene Ontology</h4>\\n            </md-panel-title>\\n            <md-panel-description>\\n                Functions and Biological Process\\n            </md-panel-description>\\n        </md-expansion-panel-header>\\n\\n\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body\\\">\\n            <dl class=\\\"dl-horizontal\\\">\\n                <div *ngFor=\\\"let item of randomARG.metadata.dbReferences\\\">\\n                    <dt *ngIf=\\\"item.type=='GO'\\\"> {{ item.id }}:</dt>\\n                    <dd *ngIf=\\\"item.type=='GO'\\\"> {{ item.properties.term }} <span class=\\\"badge bg-lightblue\\\">{{ item.properties.source }} </span></dd>\\n                    <br *ngIf=\\\"item.type=='GO'\\\">\\n                </div>\\n            </dl>\\n\\n        </div>\\n        <!-- /.box-body -->\\n    </md-expansion-panel>\\n    <!-- /.box -->\\n</div>\\n\\n<!-- <div *ngIf=\\\"randomARG.metadata.features\\\" class=\\\"\\\">\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header with-border\\\">\\n            <i class=\\\"fa fa-object-group\\\"></i>\\n\\n            <h3 class=\\\"box-title\\\"><strong>Domains</strong></h3>\\n        </div>\\n        \\n        <div class=\\\"box-body\\\">\\n\\n            <table class=\\\"table table-bordered text-center\\\">\\n                <tbody>\\n                    <tr>\\n                        <th><span class=\\\"\\\">Type</span></th>\\n                        <th><span class=\\\"\\\">Position(s)</span></th>\\n                        <th><span class=\\\"\\\">Description</span></th>\\n                        <th><span class=\\\"\\\">Evidence</span></th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let item of randomARG.metadata.features\\\">\\n                        <th> <span *ngIf=\\\"item.type!=undefined\\\"> {{ item.type }}</span></th>\\n                        <th> <span *ngIf=\\\"item.begin!=undefined\\\">{{ item.begin }}-{{ item.end }}</span></th>\\n                        <th><span *ngIf=\\\"item.description!=undefined\\\">{{ item.description }}</span></th>\\n                        <th *ngIf=\\\"item.evidences\\\">\\n                            <span *ngIf=\\\"item.evidences[0].source\\\">{{ item.evidences[0].source.name }}</span>\\n                            <a *ngIf=\\\"item.evidences[0].source\\\" href=\\\"{{ item.evidences[0].source.url }}\\\">({{ item.evidences[0].source.id}})</a>\\n                        </th>\\n                    </tr>\\n                    \\n                </tbody>\\n            </table>\\n\\n        </div>\\n  \\n    </div>\\n\\n</div> -->\\n\\n\\n<div *ngIf=\\\"render\\\" class=\\\"\\\">\\n    <md-expansion-panel class=\\\"box box-solid\\\">\\n        <!-- <div class=\\\"box box-solid\\\"> -->\\n        <md-expansion-panel-header>\\n            <md-panel-title>\\n                <h4>References</h4>\\n            </md-panel-title>\\n            <md-panel-description>\\n                Scientific papers that support the gene {{ randomARG.entry.gene_id }}\\n            </md-panel-description>\\n        </md-expansion-panel-header>\\n\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body\\\">\\n            <dl class=\\\"dl-horizontal\\\">\\n                <div *ngFor=\\\"let item of randomARG.metadata.references\\\">\\n                    <strong> {{ item.citation.authors[0] }} {{ item.citation.authors[1] }} et al., </strong> {{ item.citation.title }} {{item.citation.publication.submissionDatabase}} ({{ item.citation.publicationDate }})\\n\\n                    <div *ngFor=\\\"let ref of item.citation.dbReferences\\\">\\n                        <strong>{{ ref.type }}</strong>: {{ ref.id }}\\n                        <div *ngIf=\\\"ref.abstract\\\">\\n\\n                            <span *ngFor=\\\"let kw of ref.abstract\\\">\\n                <span *ngIf=\\\"kw.type=='paragraph'\\\">{{ kw.text }}</span> <strong class=\\\"\\\" *ngIf=\\\"kw.type=='keyword'\\\">{{ kw.text }}</strong>\\n                            </span>\\n\\n                        </div>\\n\\n                    </div>\\n\\n                </div>\\n            </dl>\\n\\n        </div>\\n        <!-- /.box-body -->\\n        <!-- </div> -->\\n    </md-expansion-panel>\\n    <!-- /.box -->\\n</div>\\n\\n<div *ngIf=\\\"renderError\\\">\\n    <div class=\\\"alert alert-info alert-dismissible\\\">\\n        <h4><i class=\\\"icon fa fa-ban\\\"></i> {{ randomARG.entry.database }} Alert!</h4>\\n        <strong>There is a problem with this request!</strong>\\n        <p>\\n            {{ randomARG.metadata.errorMessage[0] }}\\n        </p>\\n        <p>\\n            Please take a look at the provided information to make the annotation.\\n        </p>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/uniprot/uniprot.component.html\n// module id = 665\n// module chunks = 1","module.exports = \"<div class=\\\"col-md-10 col-md-offset-1\\\">\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-body\\\">\\n            <h4>ARGminer database download</h4>\\n            <table class=\\\"table table-responsive table-bordered text-center\\\">\\n                <tbody>\\n                    <tr class=\\\"table-success\\\">\\n                        <th>Database</th>\\n                        <th>Version</th>\\n                        <th>Comments</th>\\n                    </tr>\\n\\n                    <tr *ngFor=\\\"let item of databases\\\">\\n                        <td><a [href]=\\\"'http://bench.cs.vt.edu/ftp/argminer/release/'+item.version+'.fasta'\\\" target=\\\"_blank\\\">ARGminer-DB</a></td>\\n                        <td>{{ item.version }}</td>\\n                        <td>{{ item.comments }}</td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n            <br>\\n            <h4>Structure</h4>\\n            <p class=\\\"small\\\">ARGminer annotation can be downloaded as a fasta file. The annotation of each entry is reported in the fasta header as follows:</p>\\n            <code>\\n                >gene_id | score:0 | validated:True/False | ARG-Class | ARG-name | ARG-mechanism | MGE-score:0 | Pat-score:0  \\n            </code>\\n            <br><br>\\n            <p class=\\\"small\\\">\\n                <strong>Score: </strong> Score of the validated entry.\\n                <br><strong> Validated:</strong> flag to show if the ARG has been validated.\\n                <br><strong>Pat(Pathogen):</strong> Evidence of the ARG being carried by a pathogen.\\n                <br><strong>MGE(Mobile Genetic Element):</strong> Evidence of the ARG being carried by a mobie element e.g., plasmids.\\n            </p>\\n            <p class=\\\"small\\\">Genes that have not been validated conserve their original annotation (deepARG-DB)</p>\\n        </div>\\n        <div class=\\\"box-footer text-center\\\">\\n            <p class=\\\"small\\\">*ARGminer uses the antibiotic resistance annotation from <a href=\\\"https://bench.cs.vt.edu/deeparg/\\\" target=\\\"_blank\\\">deepARG-DB</a>, <a href=\\\"https://card.mcmaster.ca/home\\\" target=\\\"_blank\\\">CARD</a>, <a href=\\\"https://ardb.cbcb.umd.edu/\\\" target=\\\"_blank\\\">ARDB</a>,\\n                <a href=\\\"http://www.uniprot.org/\\\" target=\\\"_blank\\\">UniProt</a>,\\n                <a href=\\\"https://megares.meglab.org/\\\" target=\\\"_blank\\\">MEGARes</a>,\\n                <a href=\\\"http://aclame.ulb.ac.be/\\\" target=\\\"_blank\\\">ACLAME</a>, <a href=\\\"https://www.patricbrc.org/\\\" target=\\\"_blank\\\">PATRIC</a> and <a href=\\\"https://www.ncbi.nlm.nih.gov/pubmed/\\\" target=\\\"_blank\\\">PubMed</a> databases. ARGminer is free for\\n                academic use, in any othercase, please check each one of the cited resources.</p>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/database/database.component.html\n// module id = 666\n// module chunks = 1","module.exports = \"<div class=\\\"container-fluid home-font\\\">\\n\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-body\\\">\\n            <div class=\\\"logo-text text-center\\\">\\n                <!-- <img src=\\\"assets/images/logo.svg\\\" alt=\\\"\\\" /> -->\\n                <span class=\\\"home-logo\\\"><strong>ARG-miner:</strong>  A database and crowdsourcing platform for the curation of antibiotic resistance genes</span>\\n                <hr>\\n            </div>\\n            <p>\\n                Welcome to ARG-miner, a powerful open access web-platform dedicated to the inspection, curation and exploration of <strong>A</strong>ntibiotic <strong>R</strong>esitance <strong>G</strong>enes (ARGs). ARG-miner offers a novel approach\\n                to validate the ARGs annotation by inspecting their metadata and relationship with known ARGs resources. It enables the detection of genes that have evidence of being transferred by mobile genetic elements and evidence about the pathogenic\\n                hosts. We use a set of different databases including: <a href=\\\"https://bench.cs.vt.edu/deeparg/\\\" target=\\\"_blank\\\">deepARG-DB</a>, <a href=\\\"https://card.mcmaster.ca/home\\\" target=\\\"_blank\\\">CARD</a>, <a href=\\\"https://ardb.cbcb.umd.edu/\\\" target=\\\"_blank\\\">ARDB</a>,\\n                <a href=\\\"http://www.uniprot.org/\\\" target=\\\"_blank\\\">UniProt</a>,\\n                <a href=\\\"https://megares.meglab.org/\\\" target=\\\"_blank\\\">MEGARes</a>,\\n                <a href=\\\"http://aclame.ulb.ac.be/\\\" target=\\\"_blank\\\">ACLAME</a>, <a href=\\\"https://www.patricbrc.org/\\\" target=\\\"_blank\\\">PATRIC</a> and <a href=\\\"https://www.ncbi.nlm.nih.gov/pubmed/\\\" target=\\\"_blank\\\">PubMed</a>.\\n            </p>\\n            <hr>\\n            <a class=\\\"btn btn-primary \\\" href=\\\"#/classify\\\">Get Started</a>\\n            <a class=\\\"btn btn-primary \\\" href=\\\"#/database\\\">Download</a>\\n\\n        </div>\\n    </div>\\n    <hr>\\n\\n    <!-- <div class=\\\"col-md-12\\\">\\n        <img src=\\\"assets/images/main.svg\\\" alt=\\\"\\\">\\n    </div> -->\\n\\n    <div class=\\\"col-md-3\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <div class=\\\"box-body\\\">\\n                <h4 class=\\\"\\\">Structured Database</h4>\\n                <p>\\n                    The annotation of ARGs is structured into three different levels: Antibiotic Class, Antibiotic Resistance Gene, and Antibiotic Resitance Mechanism.\\n                </p>\\n                <!-- <div class=\\\"col-md-12 col-md-offset-0\\\">\\n                    <img src=\\\"assets/images/main.svg\\\" alt=\\\"\\\">\\n                </div> -->\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"col-md-3\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <div class=\\\"box-body\\\">\\n                <h4 class=\\\"\\\">Mobile Genetic Elements (MGEs)</h4>\\n                <p>\\n                    ARG-miner provides evidence of the ARGs being transferred by <strong>M</strong>obile <strong>G</strong>enetic <strong>E</strong>lements (MGEs) such as Plasmids, Viruses and Phages.\\n                </p>\\n                <p>\\n                    This information enables the identification of ARGs that are critical for propagation and disemination to different environments. This is crucial for the interpretation of risk assessments studies.\\n                </p>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\" col-md-3\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <div class=\\\"box-body\\\">\\n                <h4 class=\\\"\\\">Pathogen-carried ARGs</h4>\\n                <p>\\n                    ARG-miner also provides information about ARGs being carried by bacterial genomes and out of those, how many genomes are pathogens. This is useful for identifying chromosomal ARGs that are hosted by pathogen bacteria.\\n                </p>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"col-md-3\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <div class=\\\"box-body\\\">\\n                <h4 class=\\\"\\\">Metagenomics Analysis</h4>\\n                <p>\\n                    ARG-miner database is open sourced and free to download it is currently used by our machine learning metagenomics annotation <strong><a href=\\\"http://bench.cs.vt.edu/deeparg\\\">DeepARG</a></strong> model.\\n                </p>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <div class=\\\"col-md-12 \\\">\\n        <div class=\\\"box box-solid\\\">\\n            <div class=\\\"box-body\\\">\\n                <h4 class=\\\"\\\">Crowdsourced Annotation</h4>\\n                <p>\\n                    Its well known that current ARG databases contain annotation with mistakes that are very easily to propagate. By using crowdsourcing, the ARG annotation is made by a broad community instead of individual labs.\\n                </p>\\n\\n                <p>\\n                    ARG-miner is an open, cooperative platform. This means, anyone from anywhere can contribute to the curation of ARGs. You don't need to be a skilled expert to contribute!.\\n                </p>\\n\\n                <h5>How to validate a gene that has been reviewed?</h5>\\n\\n                <p> To validate annotations a scoring function is designed using curations carried out by experts. This function is optimized by computational techniques that maximize the probability of right annotations.\\n                </p>\\n\\n                <hr>\\n                <h4>Reference:</h4>\\n                <p>\\n                    Paper under submission\\n                </p>\\n                <hr>\\n                <h4>Contact us</h4>\\n                email: lqzhang@vt.edu <br> webpage: <a href=\\\"https://bioinformatics.cs.vt.edu/zhanglab/\\\">https://bioinformatics.cs.vt.edu/zhanglab/</a>\\n                <hr>\\n                <h4>Open Source</h4>\\n                ARG-miner source code can be found at the git repository <code> https://github.com/gaarangoa/ARG-inspect.git </code>\\n                <hr>\\n                <h4>API</h4>\\n                ARG-miner data can be programatically acccessed through its restAPI (documentation under construction).\\n            </div>\\n        </div>\\n\\n\\n\\n\\n\\n\\n    </div>\\n\\n</div>\\n\\n<hr>\\n\\n<footer class=\\\"footer\\\" style=\\\"background:white\\\">\\n    <br><br>\\n\\n    <div class=\\\"col-md-2 col-md-offset-4 funding\\\" style=\\\"width:7%\\\">\\n        <img src=\\\"assets/images/nsf.jpg\\\" alt=\\\"\\\">\\n    </div>\\n    <div class=\\\"col-md-2 funding\\\">\\n        <img src=\\\"assets/images/vt.jpg\\\" alt=\\\"\\\">\\n    </div>\\n    <div class=\\\"col-md-2 funding\\\">\\n        <img src=\\\"assets/images/heard.png\\\" alt=\\\"\\\" style=\\\"width:60%\\\">\\n    </div>\\n    <br><br><br><br>\\n    <div class=\\\"col-md-12\\\"></div>\\n\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 667\n// module chunks = 1"],"sourceRoot":""}