{"version":3,"sources":["webpack:///./src/app/about/about.component.ts","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/database/database.component.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/services/admin.service.ts","webpack:///./src/services/ncbi.service.ts","webpack:///./src/services/data.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/admin/visualize.class.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/classify/besthit/ardb/ardb.component.ts","webpack:///./src/app/classify/besthit/card/card.component.ts","webpack:///./src/app/classify/besthit/generic/generic.component.ts","webpack:///./src/app/classify/classify-routing.module.ts","webpack:///./src/app/classify/classify.module.ts","webpack:///./src/app/classify/curate/curate.component.ts","webpack:///./src/app/classify/genomes/Charts.ts","webpack:///./src/app/classify/genomes/genome.component.ts","webpack:///./src/app/classify/metadata/ardb/ardb.component.ts","webpack:///./src/app/classify/metadata/card/card.component.ts","webpack:///./src/app/classify/metadata/uniprot/uniprot.component.ts","webpack:///./src/app/database/database-routing.module.ts","webpack:///./src/app/database/database.module.ts","webpack:///./src/app/home/home-routing.module.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/about/about.component.css","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/app.component.css","webpack:///./src/app/classify/besthit/ardb/ardb.component.css","webpack:///./src/app/classify/besthit/card/card.component.css","webpack:///./src/app/classify/besthit/generic/generic.component.css","webpack:///./src/app/classify/classify.component.css","webpack:///./src/app/classify/curate/curate.component.css","webpack:///./src/app/classify/genomes/genome.component.css","webpack:///./src/app/classify/metadata/ardb/ardb.component.css","webpack:///./src/app/classify/metadata/card/card.component.css","webpack:///./src/app/classify/metadata/uniprot/uniprot.component.css","webpack:///./src/app/database/database.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/classify/besthit/ardb/ardb.component.html","webpack:///./src/app/classify/besthit/card/card.component.html","webpack:///./src/app/classify/besthit/generic/generic.component.html","webpack:///./src/app/classify/classify.component.html","webpack:///./src/app/classify/curate/curate.component.html","webpack:///./src/app/classify/genomes/genome.component.html","webpack:///./src/app/classify/metadata/ardb/ardb.component.html","webpack:///./src/app/classify/metadata/card/card.component.html","webpack:///./src/app/classify/metadata/uniprot/uniprot.component.html","webpack:///./src/app/database/database.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/classify/classify.component.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/about/about.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { AdminService } from '../../services/admin.service';\nimport { ComplexPieChart } from './visualize.class' \n\nimport {FormControl, Validators} from '@angular/forms';\n\nconst EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css'],\n  providers: [\n    ComplexPieChart,\n  ]\n})\nexport class AdminComponent implements OnInit {\n\n  private curatedARGs: Array<Object>;\n  private argClassChart: any;\n  private argGroupChart: any;\n  private argMechanismChart: any;\n  private wScore: any;\n  private weights: Array<number>;\n  private ARG: Object;\n  private ARGindex: any;\n  private online: boolean;\n  private emailFormControl: any;\n  private passwordFormControl: any;\n  private databaseVersion: string;\n  private databaseComments: string;\n\n\n  constructor(\n    private adminService: AdminService,\n  ) { }\n\n  ngOnInit() {\n    this.emailFormControl = new FormControl('', [\n      Validators.required,\n      Validators.pattern(EMAIL_REGEX)]\n    );\n\n    this.passwordFormControl = new FormControl('', [\n      Validators.required]\n    );\n\n    this.online = false;\n    this.databaseVersion = '';\n    this.databaseComments = '';\n    this.ARGindex=0;\n    this.getARG(this.ARGindex);\n    \n  }\n\n  acceptAnnotation(){\n    this.adminService.updateGene(this.ARG)\n      .subscribe( res => {\n        this.ARGindex += 1;\n        this.getARG(this.ARGindex);\n      })\n  }\n\n  updateConflictingARGs(){\n    this.adminService.updateConfilctingARGs()\n      .subscribe( res => {\n\n      })\n  }\n\n  login(email: string, password: string){\n    this.adminService.login({email: email, password: password})\n      .subscribe( res => {\n        // console.log(res);\n        this.online = res['token'];\n      });\n  }\n\n  upgradeDataBase(version: string, comments:string){\n    this.adminService.upgradeDatabase({version:version, comments: comments})\n      .subscribe( res => {\n        // console.log(res,'123456')\n        this.databaseVersion = null;\n        this.databaseComments = null;\n      });\n  }\n\n  getARG(idx: any){\n    this.argClassChart = new ComplexPieChart();\n    this.argGroupChart = new ComplexPieChart();\n    this.argMechanismChart = new ComplexPieChart();\n    this.wScore = 0;\n    this.weights = [1, 1, 1, 0.4, 0.3, 0.6, 0.4]; // [class, group, mechanism, mge, pathogen, expertise, confidence]\n    // this.ARGindex += 1;\n\n    this.adminService.getCuratedARGs(idx)\n    .subscribe(res => {\n      this.curatedARGs = res;\n      // console.log(this.curatedARGs[0]['inspected']);\n      this.argClassChart.draw(this.curatedARGs[0]['inspected'], 'class');\n      this.argGroupChart.draw(this.curatedARGs[0]['inspected'], 'group');\n      this.argMechanismChart.draw(this.curatedARGs[0]['inspected'], 'mechanism');\n\n      this.wScore = ( this.weights[0]*this.argClassChart.bestCategoryCounts/this.argClassChart.totalCategoryCounts +\n                    this.weights[1]*this.argGroupChart.bestCategoryCounts/this.argGroupChart.totalCategoryCounts +\n                    this.weights[2]*this.argMechanismChart.bestCategoryCounts/this.argMechanismChart.totalCategoryCounts +\n                    this.weights[3]*this.argClassChart.mge/(5*this.argClassChart.totalCategoryCounts) +\n                    this.weights[4]*this.argClassChart.pathogen/(5*this.argClassChart.totalCategoryCounts) +\n                    this.weights[5]*this.argClassChart.confidenc[ this.argClassChart.bestCategory ]/(5*this.argClassChart.totalCategoryCounts) + \n                    this.weights[6]*this.argClassChart.expertc[ this.argClassChart.bestCategory ]/(5*this.argClassChart.totalCategoryCounts) ).toFixed(2);\n      this.ARG = {\n        \"gene_id\": this.curatedARGs[0]['entry']['gene_id'],\n        \"type\": this.argClassChart.bestCategory,\n        \"subtype\": this.argGroupChart.bestCategory,\n        \"mechanism\": this.argMechanismChart.bestCategory,\n        \"score\": this.wScore,\n        \"MGEScore\": this.argClassChart.mge/(5*this.argClassChart.totalCategoryCounts),\n        \"pathogen_score\": this.argClassChart.pathogen/(5*this.argClassChart.totalCategoryCounts)\n      }\n      this.ARGindex += 1;\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/admin.component.ts","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-database',\n  templateUrl: './database.component.html',\n  styleUrls: ['./database.component.css']\n})\nexport class DatabaseComponent implements OnInit {\n  private databases: Object;\n  \n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit() {\n    this.dataService.getDatabaseList()\n      .subscribe(response => {\n        this.databases = response;\n      })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/database/database.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Location }   from '@angular/common';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\n\n\n@Injectable()\nexport class AdminService {\n  \n  baseUrl: string;\n  \n  constructor ( private http:Http,\n                private location: Location\n              ){\n    \n    if(location['_platformStrategy']._platformLocation._location.hostname == \"localhost\"){\n      this.baseUrl = location['_platformStrategy']._platformLocation._location.protocol + '//' + location['_platformStrategy']._platformLocation._location.hostname+\":5001\"\n    }else{\n      this.baseUrl = location['_platformStrategy']._platformLocation._location.protocol + '//' + location['_platformStrategy']._platformLocation._location.hostname+\"/argpedia_api\"\n    }\n    \n    \n  }\n\n\n  // ADMIN SECTION\n\n  getCuratedARGs(ixg: any){\n    return this.http.get(this.baseUrl+\"/admin/inspect/arg/\"+ixg)\n      .map( res => {\n        return res.json();\n      });\n  }\n\n  updateGene(fields: object){\n    return this.http.post(this.baseUrl+\"/admin/update/arg/\", fields)\n      .map( res=>{\n        return res.json();\n      });\n  }\n\n  updateConfilctingARGs(){\n    return this.http.get(this.baseUrl+\"/admin/update/conflict/arg/\")\n      .map( res => {\n        return res.json();\n      });\n  }\n\n  login(cred: any){\n    return this.http.post(this.baseUrl+\"/admin/login/\", cred)\n      .map( res => {\n          return res.json();\n      });\n  }\n\n  upgradeDatabase(cred: any){\n    return this.http.post(this.baseUrl+\"/admin/upgrade/database/\", cred)\n      .map( res => {\n          return res.json();\n      });\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/admin.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\n\n\n@Injectable()\nexport class NcbiService {\n  \n  reference: any;\n  \n  constructor (private http:Http){\n\n  }\n\n  getPubMed(pubMedID: string) {\n    return this.http.get('https://www.ncbi.nlm.nih.gov/CBBresearch/Lu/Demo/RESTful/tmTool.cgi/BioConcept/'+pubMedID+'/JSON/')\n      .map(res => {\n        // this.reference = res.json()\n        // console.log(res.json())\n        try {\n          return res.json()\n        } catch (error) {\n          console.log(res)\n          return res.json()\n        }\n        \n      })\n  }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/ncbi.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Location }   from '@angular/common';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\n\n\n@Injectable()\nexport class DataService {\n  \n  ARG: Object;\n  ATYPE: any;\n  host: string; \n  baseUrl: string;\n  randomConflictingArgSubtype: Object;\n  \n  constructor ( private http:Http,\n                private location: Location\n              ){\n    \n    if(location['_platformStrategy']._platformLocation._location.hostname == \"localhost\"){\n      this.baseUrl = location['_platformStrategy']._platformLocation._location.protocol + '//' + location['_platformStrategy']._platformLocation._location.hostname+\":5001\"\n    }else{\n      this.baseUrl = location['_platformStrategy']._platformLocation._location.protocol + '//' + location['_platformStrategy']._platformLocation._location.hostname+\"/argpedia_api\"\n    }\n    \n    \n    this.ARG = [];\n    this.randomConflictingArgSubtype = [];\n    \n  }\n\n  getRandomConflictingArgSubtype(){\n    return this.http.get(this.baseUrl+'/get/subtype/random/')\n      .map( res=> {\n        this.randomConflictingArgSubtype = res.json();\n      })\n  }\n\n  getRandomKnownARG() {\n    // console.log(this.baseUrl)\n    return this.http.get(this.baseUrl+'/get/arg/random/')\n      .map(res => {\n        try {\n          this.ARG = res.json()\n        } catch (error) {\n          this.ARG = {\"status\":false}\n        }\n        \n      })\n  }\n\n  searchAPI(keyword: string, index: string){\n    return this.http.get(this.baseUrl+'/get/search/?keyword='+keyword+'&index='+index)\n      .map(res => {\n        return res.json()\n      })\n  }\n\n  getKnownARGInfo(gene_id: string){\n    return this.http.get(this.baseUrl+'/get/arg/info/'+gene_id)\n      .map(res => {\n        this.ARG = res.json()\n      })\n  }\n\n  getListAntibioticClass(){\n    return this.http.get(this.baseUrl+'/get/antibiotic/class')\n      .map(res => {\n        this.ATYPE = res.json()\n      })\n  }\n\n  getListAntibioticGroup(){\n    return this.http.get(this.baseUrl+'/get/antibiotic/group')\n      .map(res => {\n        this.ATYPE = res.json()\n      })\n  }\n\n  insertCuration(curation: Object){\n    curation['gene_id'] = this.ARG['entry']['gene_id'];\n    console.log(curation)\n    return this.http.post(this.baseUrl+'/post/curation', curation)\n      .map(res => {\n        return res.json()\n      })\n  }\n\ngetDatabaseList(){\n  return this.http.get(this.baseUrl+'/get/database/list')\n    .map( res => {\n      return res.json();\n    })\n}\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/data.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 266;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 266\n// module chunks = 2","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","export class ComplexPieChart {\n    \n    greeting: string;\n    data: any;\n    colorScheme: any;\n    showLegend: boolean;\n    explodeSlices: boolean;\n    doughnut: boolean;\n    gradient: boolean;\n    showLabels: boolean;\n    ready: boolean;\n    dummy: any;\n    bestCategory: string;\n    mge: number;\n    pathogen: number;\n    bestCategoryCounts: any;\n    confidenc: any;\n    expertc: any;\n    totalCategoryCounts: number;\n\n    constructor(){\n        this.data = [];\n        this.totalCategoryCounts = 0;\n        this.bestCategoryCounts = 0;\n        this.confidenc = {};\n        this.expertc = {};\n        this.mge = 0;\n        this.pathogen = 0;\n        this.showLegend = false;\n        this.explodeSlices = false;\n        this.doughnut = false;\n        this.gradient = true;\n        this.showLabels = true;\n        this.bestCategory = \"---\";\n        this.bestCategoryCounts = 0;\n        this.colorScheme = {\n                domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n        };\n        this.ready = false;\n    }\n\n    draw(edata, key){\n\n        let counts = {};\n        // let mge = 0\n        edata.forEach(element => {\n            counts[element[key]] = counts[element[key]] ? counts[element[key]]+1: 1; \n            this.confidenc[element[key]] = this.confidenc[element[key]] ? this.confidenc[element[key]]+element['rating']['confidence']['value']: element['rating']['confidence']['value']; \n            this.expertc[element[key]] = this.expertc[element[key]] ? this.expertc[element[key]]+element['rating']['expertise']['value']: element['rating']['expertise']['value']; \n            this.mge += element['rating']['mge']['value']\n            this.pathogen += element['rating']['genome']['value']\n        });\n\n        // let data = [];\n        for(var k in counts){ \n            this.data.push({name: k, value: counts[k], confidence:this.confidenc[k], expertice:this.expertc[k]});\n        }\n\n        this.bestCategory = Object.keys(counts).reduce(function(a, b){ return counts[a] > counts[b] ? a : b });\n        this.bestCategoryCounts = counts[this.bestCategory];\n        this.totalCategoryCounts = edata.length;\n        this.ready = true;\n\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/visualize.class.ts","import { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { ClassifyComponent } from './classify/classify.component';\nimport { HomeComponent } from './home/home.component';\nimport { DatabaseComponent } from './database/database.component';\nimport { AboutComponent } from './about/about.component';\nimport { AdminComponent } from './admin/admin.component';\n\nexport const router: Routes = [\n    { path: '', component: HomeComponent },\n    { path: 'classify/', component: ClassifyComponent },\n    { path: 'classify', component: ClassifyComponent },\n    { path: 'home', component: HomeComponent },\n    { path: 'database', component: DatabaseComponent },\n    { path: 'about', component: AboutComponent },\n    { path: 'admin', component: AdminComponent },\n];\n\nexport const AppRoutingModule: ModuleWithProviders = RouterModule.forRoot(router);\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import { Component } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterialModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations'\nimport { ReactiveFormsModule }    from '@angular/forms';\nimport { MdInputModule } from '@angular/material';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n// import { HomeComponent } from './home/home.component';\n// import { DatabaseComponent } from './database/database.component';\nimport { AboutComponent } from './about/about.component';\n\n// APP modules\nimport { ClassifyModule } from './classify/classify.module';\nimport { HomeModule } from './home/home.module';\nimport { DatabaseModule } from './database/database.module';\n\n// import {NgCytoscapeModule} from \"ng2-cytoscape/dist\";\n\n// Visualization\nimport { jqxChartComponent } from 'jqwidgets-framework/jqwidgets-ts/angular_jqxchart';\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\n\n// Services\nimport { DataService } from '../services/data.service';\nimport { NcbiService } from '../services/ncbi.service';\nimport { AdminService } from '../services/admin.service';\n\n\nimport 'hammerjs';\nimport { AdminComponent } from './admin/admin.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    jqxChartComponent,\n    AdminComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ClassifyModule,\n    DatabaseModule,\n    HomeModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NoopAnimationsModule,\n    MaterialModule,\n    NgxChartsModule,\n    ReactiveFormsModule,\n    MdInputModule\n    // NgCytoscapeModule\n  ],\n  providers: [\n    DataService,\n    NcbiService,\n    AdminService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\n\n@Component({\n  selector: 'besthit-metadata-ardb',\n  templateUrl: './ardb.component.html',\n  styleUrls: ['./ardb.component.css']\n})\nexport class BestHitArdbComponent implements OnInit {\n\n  public randomARG: Object;\n\n  constructor(\n    private dataService: DataService,\n  ) {\n    \n   }\n\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/besthit/ardb/ardb.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\n\n@Component({\n  selector: 'besthit-metadata-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class BestHitCardComponent implements OnInit {\n\n  public randomARG: Object;\n  public alCoverage: any;\n\n  constructor(\n    private dataService: DataService,\n  ) {\n    \n   }\n\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n    // console.log(this.randomARG)\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/besthit/card/card.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\n\n\n@Component({\n  selector: 'app-generic',\n  templateUrl: './generic.component.html',\n  styleUrls: ['./generic.component.css']\n})\nexport class GenericComponent implements OnInit {\n\n  public randomARG: Object;\n\n  constructor(\n    private dataService: DataService,\n  ) { }\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/besthit/generic/generic.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClassifyComponent } from './classify.component';\n\nconst routes: Routes = [\n  { path:'', component: ClassifyComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClassifyRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/classify-routing.module.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule }    from '@angular/forms';\nimport { MdInputModule } from '@angular/material';\n\nimport { MaterialModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations'\n\n// Visualization\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\nimport { StarRatingModule } from 'angular-star-rating';\n\n// primeng\nimport { PanelModule } from 'primeng/primeng';\nimport { AutoCompleteModule } from 'primeng/primeng';\nimport { StepsModule } from 'primeng/primeng';\nimport { GrowlModule } from 'primeng/primeng';\n\nimport { ClassifyComponent } from './classify.component';\nimport { ClassifyRoutingModule } from './classify-routing.module';\n\n// Metadata\nimport { UniprotComponent } from './metadata/uniprot/uniprot.component';\nimport { CardComponent } from './metadata/card/card.component';\nimport { ArdbComponent } from './metadata/ardb/ardb.component';\n\n// BestHit\nimport { BestHitCardComponent } from './besthit/card/card.component';\nimport { BestHitArdbComponent } from './besthit/ardb/ardb.component';\n\n// Genomes and MGE\nimport { GenomeComponent } from './genomes/genome.component';\n// import { GenomeModule } from './genomes/genome.module';\n\n// Curate\nimport { CurateComponent } from './curate/curate.component';\n\nimport {ConfirmDialogModule, ConfirmationService} from 'primeng/primeng';\nimport {DialogModule, ButtonModule, TabViewModule, CodeHighlighterModule } from 'primeng/primeng';\nimport { GenericComponent } from './besthit/generic/generic.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MdInputModule,\n    BrowserModule,\n\n    ClassifyRoutingModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    NoopAnimationsModule,\n\n    NgxChartsModule,\n    PanelModule,\n    AutoCompleteModule,\n    StepsModule,\n    StarRatingModule.forRoot(),\n    ConfirmDialogModule,\n    DialogModule,\n    ButtonModule,\n    TabViewModule,CodeHighlighterModule,\n\n    GrowlModule\n    // GenomeModule\n  ],\n  schemas: [\n    // CUSTOM_ELEMENTS_SCHEMA, \n  ],\n  declarations: [\n    ClassifyComponent,\n      UniprotComponent,\n      CardComponent,\n      ArdbComponent,\n\n      BestHitArdbComponent,\n      BestHitCardComponent,\n\n      GenomeComponent,\n\n      CurateComponent,\n\n      GenericComponent\n  ],\n  providers: [\n    ConfirmationService\n  ],\n  bootstrap: [\n    ClassifyComponent\n  ]\n})\nexport class ClassifyModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/classify.module.ts","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable'\n\nimport { DataService } from '../../../services/data.service';\n\nimport {MenuItem} from 'primeng/primeng';\n\nimport {IStarRatingOnClickEvent, IStarRatingOnRatingChangeEven, IStarRatingIOnHoverRatingChangeEvent} from \"angular-star-rating\";\n\nimport { ClassifyComponent } from '../classify.component'\n\nimport {ConfirmationService} from 'primeng/primeng';\n\n@Component({\n  selector: 'app-curate',\n  templateUrl: './curate.component.html',\n  styleUrls: ['./curate.component.css'],\n  encapsulation: ViewEncapsulation.None\n\n})\nexport class CurateComponent implements OnInit {\n\n  private step1: boolean;\n  private step2: boolean;\n  private step3: boolean;\n  private step4: boolean;\n  display: boolean = false;\n  overlay: Object;\n  private inspectedGenes: Array<String>;\n\n  private activeIndex: number = 0;\n\n  onRatingChangeResult:IStarRatingOnRatingChangeEven;\n\n  options_type = [];\n  group_options = [\"Bla1\", \"MacB\", \"BacA\"];\n  mge_options = [\"Plasmid\",\"Virus\",\"Prophage\"];\n\n  items: MenuItem[];\n\n  private randomARG: Object;\n  private antibiotic: Object;\n\n  myControl = new FormControl();\n  groupControl = new FormControl();\n  mgeControl = new FormControl();\n\n  filteredOptions: Observable<string[]>;\n  groupFilteredOptions: Observable<string[]>;\n  mgeFilteredOptions: Observable<string[]>;\n  \n  constructor(\n    private dataService: DataService,\n    private classifyComponent: ClassifyComponent,\n    private confirmationService: ConfirmationService\n  ) {\n    \n  }\n\n  ngOnInit() {\n\n    this.inspectedGenes = [];\n    this.overlay = {\n      title:\"none\",\n      content:\"none\"\n    }\n    this.step1 = true;\n\n    // menu\n    this.items = [\n            {label: ''},\n            {label: ''},\n            {label: ''}\n        ];\n\n    // Get ARG data\n    this.randomARG = this.dataService.ARG;\n    this.antibiotic = {\n      class:\"\",\n      group:\"\",\n      mechanism:\"\",\n      MGE:{},\n      comments:\"\",\n      rating:{},\n      gene_id: \"\"\n    }\n\n    // Get the list of antibiotic types in the database\n    this.dataService.getListAntibioticClass()\n      .subscribe( \n        response =>{\n          for (let type of this.dataService.ATYPE){\n            this.options_type.push(type['type'])\n          }\n\n          // console.log(this.options)\n          this.filteredOptions = this.myControl.valueChanges\n            .startWith(null)\n            .map(val => val ? this.filter(val, this.options_type) : this.options_type.slice());\n\n        }\n      )\n\n    // Get list of antibiotic subtypes\n    this.dataService.getListAntibioticClass()\n      .subscribe( \n        response =>{\n          for (let type of this.dataService.ATYPE){\n            // this.group_options.push(type['subtype'])\n          }\n\n          // console.log(this.options)\n          this.groupFilteredOptions = this.groupControl.valueChanges\n            .startWith(null)\n            .map(val => val ? this.filter(val, this.group_options) : this.group_options.slice());\n\n        }\n      )\n\n    }\n\n  // Filter once typing the type of antibiotic\n  filter(val: string, Marray: any): string[] {\n    return Marray.filter(option => new RegExp(`${val}`, 'gi').test(option)); \n  }\n\n  // setup the options under mobile genetic elements\n  mgeOptions(label: any, event: any){\n      this.antibiotic['MGE'][label] = \n        {\n          name:label,\n          value:event.checked\n        }   \n  };\n\n  // keep track of the ratings bars\n  onRatingChange = (label:any, $event:IStarRatingOnRatingChangeEven) => {\n        // console.log(label, $event);\n        this.antibiotic['rating'][label] =\n          {\n            name:label,\n            value:$event['rating']\n          };\n  };\n\n  \n\n  showDialog() {\n      this.display = true;\n  }\n\n\n  // to keep track of the changes between the steps\n  validate(value: any){\n\n    if(value == 1){\n      \n      if(this.antibiotic['class']==\"\" || this.antibiotic['group']==\"\" ){\n        \n        // this.overlay['title']=\"Emtpy group and/or class not allowed\"\n        // this.overlay['content']=\"Please make sure to insert the antibiotic class and group in the form (mechanism is optional)\"\n        // this.showDialog()\n        alert('Error: Empty fields are not allowed!')\n\n      }else{\n        this.activeIndex = 1;\n        this.step1=false;\n        this.step2=true;\n      }\n\n\n    }else if(value ==2){\n\n      this.step2 = false;\n      this.step3 = true;\n      this.activeIndex = 2;\n      \n    }else if(value == 3){\n      this.step3 = false;\n      this.step1 = true;\n      this.activeIndex = 0;\n\n    }\n\n  }\n\n  submitReview(){\n    // console.log(this.antibiotic)\n\n    this.overlay['title']=\"Your results\"\n    this.overlay['content']=\"Your manual inspection has been registered in the system and its ready for validation.\"\n    this.overlay['score'] = 10;\n    this.overlay['average_score'] = 15;\n\n    // show the overlay with the score\n    // this.showDialog()\n\n    this.dataService.insertCuration(this.antibiotic)\n      .subscribe(\n        response =>{\n          // console.log(response)\n          // restart the form values to empty.\n          this.inspectedGenes.push(this.classifyComponent.randomARG['entry']['gene_id']);\n          this.continueReview();\n        }\n      )\n      \n  }\n\ncontinueReview(){\n  // Restart and get a new gene\n  this.activeIndex = 0;\n  this.step1 = true;\n  this.step3 = false;\n\n  this.classifyComponent.randomARG['entry']['database'] = '-------------';\n  this.classifyComponent.randomARG['entry']['gene_id'] = '-----------';\n  this.classifyComponent.randomARG['entry']['subtype'] = '-----------';\n  this.classifyComponent.randomARG['entry']['type'] = '--------------';\n  this.classifyComponent.randomARG['entry']['inspected'] = '-----';\n  this.classifyComponent.randomARG['entry']['score'] = '----';\n\n  this.classifyComponent.loading = true;\n  this.classifyComponent.nextGeneConflictList();\n  // this.classifyComponent.render=false;\n  // this.dataService.getRandomKnownARG()\n  //   .subscribe(response =>{\n  //     this.classifyComponent.randomARG = this.dataService.ARG\n  //     // console.log(this.randomARG)\n  //     this.classifyComponent.loading = false;\n\n      // this.antibiotic = {\n      //   class:\"\",\n      //   group:\"\",\n      //   mechanism:\"\",\n      //   MGE:{},\n      //   comments:\"\",\n      //   rating:{},\n      //   gene_id: \"\"\n      // }\n      \n  // });\n  \n  this.display = false;\n\n}\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/curate/curate.component.ts","export class PieChart {\n    greeting: string;\n    data: any;\n    colorScheme: any;\n    showLegend: boolean;\n    explodeSlices: boolean;\n    doughnut: boolean;\n    gradient: boolean;\n    showLabels: boolean;\n    ready: boolean;\n    dummy: any;\n\n    constructor(){\n        this.showLegend = false;\n        this.explodeSlices = false;\n        this.doughnut = false;\n        this.gradient = true;\n        this.showLabels = true;\n        this.colorScheme = {\n                domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n        };\n        this.ready = false;\n    }\n\n    draw(edata){\n\n        try{\n            if (edata.length>=1){\n                this.data = edata.sort((a, b) => b.value - a.value).slice(0, 3);\n                this.ready = true;\n            }else{\n                this.ready = false;\n            }\n        }catch(Error){\n            this.ready = false;\n        }\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/genomes/Charts.ts","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../../services/data.service';\n\n\nimport {PieChart} from './Charts';\n\n\n@Component({\n  selector: 'genome-metadata',\n  templateUrl: './genome.component.html',\n  styleUrls: ['./genome.component.css'],\n  providers: [PieChart]\n})\n\n\nexport class GenomeComponent implements OnInit {\n\n  public randomARG: Object;\n  private disease: any;\n  private AMR_phenotype: any;\n  private host: any;\n    \n\n  constructor(\n    private dataService: DataService,\n    private pieChart: PieChart\n  ) {\n    \n   }\n\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n    this.disease = new PieChart();\n    // console.log(this.disease)\n    this.disease.draw(this.randomARG['pathogen']['disease']);\n    \n    this.AMR_phenotype = new PieChart();\n    this.AMR_phenotype.draw(this.randomARG['pathogen']['phenotype']);\n\n    this.host = new PieChart();\n    this.host.draw(this.randomARG['pathogen']['host']);\n\n  }\n  \n  onSelect(event) {\n    console.log(event);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/genomes/genome.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\n\n@Component({\n  selector: 'classify-metadata-ardb',\n  templateUrl: './ardb.component.html',\n  styleUrls: ['./ardb.component.css']\n})\nexport class ArdbComponent implements OnInit {\n\n  public randomARG: Object;\n\n  constructor(\n    private dataService: DataService,\n  ) {\n    \n   }\n\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/metadata/ardb/ardb.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\n\n@Component({\n  selector: 'classify-metadata-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  public randomARG: Object;\n\n  constructor(\n    private dataService: DataService,\n  ) {\n    \n   }\n\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/metadata/card/card.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../../../services/data.service';\nimport { NcbiService } from '../../../../services/ncbi.service';\n\n\n@Component({\n  selector: 'classify-metadata-uniprot',\n  templateUrl: './uniprot.component.html',\n  styleUrls: ['./uniprot.component.css']\n})\nexport class UniprotComponent implements OnInit {\n\n  public randomARG: Object;\n  public pubmed = [];\n\n  constructor(\n    private dataService: DataService,\n    private ncbiService: NcbiService,\n  ) {\n    \n   }\n\n\n  ngOnInit() {\n    this.randomARG = this.dataService.ARG;\n    \n    // GET all reference ids from pubmed:\n    if(this.randomARG['metadata'].status==true){ \n      this.randomARG['metadata'].references.forEach(element => {\n        if(element.citation.dbReferences){\n          element.citation.dbReferences.forEach(citation => {\n            if(citation.type == \"PubMed\"){\n              this.ncbiService.getPubMed(citation.id)\n                .subscribe( response=>{\n                  \n                  let str = response.text;\n                  let lstr = [];\n                  let inpos = 0;\n                  let denotations = response.denotations.sort((a, b) => b.span.begin - a.span.begin).reverse();\n                  // let denotations = response.denotations\n\n                  for(let pos of denotations){\n                    lstr.push({\"text\":str.substring(inpos, pos.span.begin), \"type\":\"paragraph\" })\n                    lstr.push({\"text\":str.substring(pos.span.begin, pos.span.end), \"type\":\"keyword\"})\n                    inpos = pos.span.end\n                  }\n                  lstr.push( str.substring( inpos, str.length ) )\n                  // console.log(denotations)\n                  citation['abstract'] = lstr\n                    \n                  }\n                )\n            }\n          });\n        }\n\n      });\n    }\n    // console.log(this.randomARG)\n\n  }\n  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/metadata/uniprot/uniprot.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DatabaseRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/database/database-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DatabaseRoutingModule } from './database-routing.module';\nimport { DatabaseComponent } from './database.component'\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DatabaseRoutingModule,\n  ],\n  declarations: [\n    DatabaseComponent\n  ],\n  bootstrap: [\n    DatabaseComponent\n  ]\n})\nexport class DatabaseModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/database/database.module.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\n\nimport { HomeComponent } from './home.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HomeRoutingModule\n  ],\n  declarations: [\n    HomeComponent\n  ]\n})\nexport class HomeModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/about/about.component.css\n// module id = 588\n// module chunks = 2","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".box-vis {\\n    min-height: 190px !important;\\n    /* border-style: solid !important; */\\n    /* border-width: 1px; */\\n    /* border-color: rgba(0, 0, 0, 0.2); */\\n}\\n\\n.box-vis-2 {\\n    min-height: 50px !important;\\n    max-height: 80px !important;\\n}\\n\\n.box-plot {\\n    cursor: pointer;\\n    float: right;\\n    height: 30px;\\n    margin-left: 20px;\\n    width: 50%;\\n    position: relative;\\n    margin-right: 30px;\\n}\\n\\n.box-plot-component {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 0;\\n    overflow: hidden;\\n    border-style: solid;\\n    border-color: #030303\\n}\\n\\n.box-left {\\n    left: 0%;\\n    width: 50%;\\n    height: 20px;\\n    border-width: 1px;\\n    border-top-left-radius: 3px;\\n    border-bottom-left-radius: 3px;\\n    border-right-width: 0;\\n    background: #fff;\\n}\\n\\n.box-right {\\n    left: 50%;\\n    width: 50%;\\n    height: 20px;\\n    border-width: 1px;\\n    border-top-right-radius: 3px;\\n    border-bottom-right-radius: 3px;\\n    background: #fff;\\n}\\n\\n.box-mean {\\n    top: 3px;\\n    height: 14px;\\n    width: 15px;\\n    left: 50%;\\n    border: 1px solid #248;\\n    background: #abd;\\n    border-radius: 3px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/admin.component.css\n// module id = 589\n// module chunks = 2","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".container-par {\\n    width: 90%;\\n    margin: 0 auto;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 590\n// module chunks = 2","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/ardb/ardb.component.css\n// module id = 591\n// module chunks = 2","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/card/card.component.css\n// module id = 592\n// module chunks = 2","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/generic/generic.component.css\n// module id = 593\n// module chunks = 2","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".curate-nav {\\n    right: 5%;\\n    width: 21.5%;\\n    overflow: scroll;\\n    max-height: 80%;\\n}\\n\\n.sequence {\\n    word-wrap: break-word;\\n    overflow-wrap: break-word;\\n}\\n\\n.user_growl {\\n    position: absolute !important;\\n    top: 20px !important;\\n    z-index: 9999 !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/classify.component.css\n// module id = 594\n// module chunks = 2","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".ui-steps .ui-steps-item {\\n    width: 33%;\\n}\\n\\n.ui-steps.steps-custom {\\n    margin-bottom: 10px;\\n}\\n\\n.ui-steps.steps-custom .ui-steps-item .ui-menuitem-link {\\n    height: 4px;\\n    /* padding: 0 1em; */\\n}\\n\\n.ui-steps.steps-custom .ui-steps-item .ui-steps-number {\\n    background-color: #0081c2;\\n    color: #FFFFFF;\\n    /* display: inline-block;  */\\n    width: 26px;\\n    /* border-radius: 5%; */\\n    margin-top: -20px;\\n    margin-bottom: 12px;\\n    font-size: 200%;\\n}\\n\\n.ui-steps.steps-custom .ui-steps-item .ui-steps-title {\\n    /* color: #555555;  */\\n    color: #FFFFFF;\\n    margin-top: -43px;\\n    font-weight: bold;\\n}\\n\\n.badge,\\n.ui-steps-item,\\n.ui-steps-number,\\np-dialog {\\n    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.2), 0 1px 6px 0 rgba(0, 0, 0, 0.19) !important;\\n    border-color: rgba(255, 255, 255, 0) !important;\\n}\\n\\n.box,\\n.box-primary,\\n.panel {\\n    box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.1), 0 1px 1px 0 rgba(0, 0, 0, 0.1) !important;\\n    border-color: rgba(0, 0, 0, 0.1) !important;\\n}\\n\\nmd-input-container textarea {\\n    background-color: rgba(0, 0, 0, 0.05) !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/curate/curate.component.css\n// module id = 595\n// module chunks = 2","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/genomes/genome.component.css\n// module id = 596\n// module chunks = 2","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/ardb/ardb.component.css\n// module id = 597\n// module chunks = 2","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/card/card.component.css\n// module id = 598\n// module chunks = 2","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/uniprot/uniprot.component.css\n// module id = 599\n// module chunks = 2","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"ng2-cytoscape {\\n    height: 100vh;\\n    float: left;\\n    width: 100%;\\n    position: relative;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/database/database.component.css\n// module id = 600\n// module chunks = 2","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 601\n// module chunks = 2","module.exports = \"<p>\\n  about works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/about/about.component.html\n// module id = 679\n// module chunks = 2","module.exports = \"<div *ngIf=\\\"online\\\">\\n    <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <div class=\\\"box-header with-border text-center\\\">\\n                <h4>Upgrade database</h4>\\n                <!-- <h3 class=\\\"box-title\\\">\\n                <strong>Main Actions</strong>\\n            </h3> -->\\n            </div>\\n            <div class=\\\"box-body\\\">\\n\\n\\n                <p class=\\\"small\\\">Publish a new version of the ARG-miner database. This database is updated once a considered number of genes have been curated. Once you click submit it will create a new version of the database and update the download links under the Donwloads\\n                    tab.\\n                </p>\\n\\n\\n                <!-- UPGRADE DATABASE FORM -->\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input mdInput placeholder=\\\"Database version\\\" [value]=\\\"databaseVersion\\\" #dversion>\\n                </md-input-container>\\n\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input type=\\\"text\\\" mdInput #dmessage maxlength=\\\"256\\\" placeholder=\\\"Comments\\\" [value]=\\\"databaseComments\\\">\\n                    <md-hint align=\\\"start\\\"><strong>Don't disclose personal info</strong> </md-hint>\\n                    <md-hint align=\\\"end\\\">{{dmessage.value.length}} / 256</md-hint>\\n                </md-input-container>\\n\\n            </div>\\n            <div class=\\\"box-footer\\\">\\n                <br>\\n                <div class=\\\"col-md-12 text-center\\\"> <button (click)=\\\"upgradeDataBase(dversion.value, dmessage.value)\\\" class=\\\"bg-black\\\" color=\\\"default\\\" md-raised-button>Upgrade ARG-miner database</button><br><br></div>\\n\\n                <p class=\\\"small\\\">*The upgrading gets run in the background of the web server and the fasta file will be available under the downloads once the process is done.</p>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"col-sm-6\\\">\\n\\n\\n        <div *ngFor=\\\"let item of curatedARGs\\\" class=\\\"box box-solid\\\">\\n            <!-- <div class=\\\"box-header with-border\\\"> -->\\n            <!-- <h3 class=\\\"box-title\\\">{{item.entry.gene_id}}</h3> -->\\n            <!-- </div> -->\\n            <div class=\\\"box-body\\\">\\n                <!-- <p>The gene <u>{{item.entry.gene_id}}</u> has been curated {{ item.inspected.length }} times.</p> -->\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"box box-solid with-border\\\">\\n                        <div class=\\\"box-body\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                                <h4 class=\\\"text-center\\\"> Current Annotation</h4>\\n                                <hr>\\n                                <p> <strong>Gene ID:</strong> {{ item.entry.gene_id }}</p>\\n                                <p><strong>ARG Name:</strong> {{ item.entry.subtype }} </p>\\n                                <p><strong>Gene Class:</strong> {{ item.entry.type }}</p>\\n                                <p><strong>ARG Database:</strong> {{ item.entry.database }}</p>\\n                            </div>\\n\\n                            <div class=\\\"col-md-8\\\">\\n                                <h4 class=\\\"text-center\\\"> Weighted Annotation</h4>\\n                                <hr>\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"col-md-4\\\">\\n                                        <strong>Score:</strong> {{ wScore }}\\n                                    </div>\\n                                    <div class=\\\"box-plot\\\">\\n                                        <div class=\\\"box-plot-component box-left\\\"></div>\\n                                        <div class=\\\"box-plot-component box-right\\\"></div>\\n                                        <div class=\\\"box-plot-component box-mean\\\" [style.left]=\\\"20*wScore+'%'\\\"></div>\\n                                    </div>\\n                                </div>\\n                                <!-- </p> -->\\n                                <!-- <p> <strong>Gene ID:</strong> {{ item.entry.gene_id }}</p> -->\\n                                <p><strong>ARG Name:</strong> {{ argGroupChart.bestCategory }} </p>\\n                                <p><strong>Gene Class:</strong> {{ argClassChart.bestCategory }}</p>\\n                                <p><strong>ARG Mechanism:</strong> {{ argMechanismChart.bestCategory }}</p>\\n                                <p><strong>MGEs Evidence Score:</strong> {{ (argClassChart.mge/item.inspected.length).toFixed(2)-1}} </p>\\n                                <p><strong>Pathogenic Evidence Score:</strong> {{ (argClassChart.pathogen/item.inspected.length).toFixed(2)-1}} </p>\\n                                <!-- <p><strong>MGE Integron Evidence:</strong> {{ item.entry.subtype }} </p> -->\\n                                <!-- <p><strong>Genome Integron Evidence:</strong> {{ item.entry.subtype }} </p> -->\\n                                <hr>\\n                                <div class=\\\"text-center\\\">\\n                                    <button (click)=\\\"acceptAnnotation()\\\" class=\\\"badge bg-blue\\\" md-raised-button>Update Gene</button>\\n                                    <button (click)=\\\"getARG(ARGindex)\\\" class=\\\"badge bg-red\\\" md-raised-button>Next Gene</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-md-12\\\">\\n                    <h4 class=\\\"text-center\\\">Crowsourced Annotation</h4>\\n                    <div class=\\\"box box-solid with-border box-primary\\\">\\n                        <div class=\\\"box-body\\\">\\n                            <div class=\\\"col-md-8 box-vis text-center\\\" *ngIf=\\\"argClassChart.ready\\\">\\n                                <ngx-charts-advanced-pie-chart [scheme]=\\\"argClassChart.colorScheme\\\" [results]=\\\"argClassChart.data\\\" [gradient]=\\\"argClassChart.gradient\\\" (select)=\\\"onSelect($event)\\\">\\n                                </ngx-charts-advanced-pie-chart>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <strong><h4><span class=\\\"badge bg-red\\\"> Antbiotic Class </span></h4></strong>\\n                                <p>This panel shows the distribution of the crowsourced antibiotic classes for the gene {{ item.entry.gene_id }}</p>\\n                            </div>\\n\\n\\n                            <div class=\\\"col-md-12 text-center\\\">\\n                                <!-- <hr> -->\\n                                <table class=\\\"table table-responsive table-bordered text-center\\\">\\n                                    <tbody>\\n                                        <tr class=\\\"table-success\\\">\\n                                            <th>ARG Class</th>\\n                                            <th>Confidence Score</th>\\n                                            <th>Expertise Score</th>\\n                                        </tr>\\n\\n                                        <tr *ngFor=\\\"let itemx of argClassChart.data\\\">\\n                                            <td>{{itemx.name}}</td>\\n                                            <td>{{ (itemx.confidence/itemx.value).toFixed(2) }}</td>\\n                                            <td>{{ (itemx.expertice/itemx.value).toFixed(2) }}</td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                                <!-- <hr> -->\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"box box-solid with-border box-primary\\\">\\n                        <div class=\\\"box-body\\\">\\n                            <div class=\\\"col-md-8 box-vis text-center\\\" *ngIf=\\\"argGroupChart.ready\\\">\\n                                <ngx-charts-advanced-pie-chart [scheme]=\\\"argGroupChart.colorScheme\\\" [results]=\\\"argGroupChart.data\\\" [gradient]=\\\"argGroupChart.gradient\\\" (select)=\\\"onSelect($event)\\\">\\n                                </ngx-charts-advanced-pie-chart>\\n                            </div>\\n\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <strong><h4><span class=\\\"badge bg-blue\\\"> Antbiotic Resistance Gene </span></h4></strong>\\n                                <p>This panel shows the distribution of the crowsourced antibiotic gene for what the entry {{ item.entry.gene_id }} has been identified.</p>\\n                            </div>\\n\\n                            <div class=\\\"col-md-12 text-center\\\">\\n                                <!-- <hr> -->\\n                                <table class=\\\"table table-responsive table-bordered text-center\\\">\\n                                    <tbody>\\n                                        <tr class=\\\"table-success\\\">\\n                                            <th>ARG</th>\\n                                            <th>Confidence Score</th>\\n                                            <th>Expertise Score</th>\\n                                        </tr>\\n                                        <tr *ngFor=\\\"let itemx of argGroupChart.data\\\">\\n                                            <td>{{itemx.name}}</td>\\n                                            <td>{{ (itemx.confidence/itemx.value).toFixed(2) }}</td>\\n                                            <td>{{ (itemx.expertice/itemx.value).toFixed(2) }}</td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                                <!-- <hr> -->\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"box box-solid box-primary\\\">\\n                        <div class=\\\"box-body\\\">\\n                            <div class=\\\"col-md-8 box-vis text-center\\\" *ngIf=\\\"argMechanismChart.ready\\\">\\n                                <ngx-charts-advanced-pie-chart [scheme]=\\\"argMechanismChart.colorScheme\\\" [results]=\\\"argMechanismChart.data\\\" [gradient]=\\\"argMechanismChart.gradient\\\" (select)=\\\"onSelect($event)\\\">\\n                                </ngx-charts-advanced-pie-chart>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <strong><h4><span class=\\\"badge bg-success\\\"> ARG Mechanism </span></h4></strong>\\n                                <p>This panel shows the distribution of the crowsourced ARG mechanism identified for the gene {{ item.entry.gene_id }}.</p>\\n                            </div>\\n\\n                            <div class=\\\"col-md-12 text-center\\\">\\n                                <!-- <hr> -->\\n                                <table class=\\\"table table-responsive table-bordered text-center\\\">\\n                                    <tbody>\\n                                        <tr class=\\\"table-success\\\">\\n                                            <th>ARG Mechanism</th>\\n                                            <th>Confidence Score</th>\\n                                            <th>Expertise Score</th>\\n                                        </tr>\\n                                        <tr *ngFor=\\\"let itemx of argMechanismChart.data\\\">\\n                                            <td>{{itemx.name}}</td>\\n                                            <td>{{ (itemx.confidence/itemx.value).toFixed(2) }}</td>\\n                                            <td>{{ (itemx.expertice/itemx.value).toFixed(2) }}</td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                                <!-- <hr> -->\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n\\n\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n\\n    <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <div class=\\\"box-header with-border text-center\\\">\\n                <h4>Recompute Problematic Annotations</h4>\\n            </div>\\n            <div class=\\\"box-body\\\">\\n\\n                <p class=\\\"small\\\">Use this tool after you have accepted/rejected annotations from the crowdsourcing platform. This action will compute/update all those ARGs that have conflicting annotations e.g., the same gene name associated to several ARG categories.</p>\\n                <div class=\\\"text-center\\\"> <button (click)=\\\"updateConflictingARGs()\\\" class=\\\"bg-blue\\\" md-raised-button>Compute Problematic ARGs</button></div>\\n                <hr>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"col-md-3 col-md-offset-4\\\" *ngIf=\\\"online==false\\\">\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header text-center\\\">\\n            <h3 class=\\\"box-title\\\">Login</h3>\\n        </div>\\n        <div class=\\\"box-body\\\">\\n            <!-- <form class=\\\"example-form\\\"> -->\\n            <md-input-container class=\\\"col-md-12\\\">\\n                <input mdInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\" #uemail>\\n                <md-error *ngIf=\\\"emailFormControl.hasError('pattern')\\\">\\n                    Please enter a valid email address\\n                </md-error>\\n                <md-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n                    Email is <strong>required</strong>\\n                </md-error>\\n            </md-input-container>\\n            <br>\\n            <md-input-container class=\\\"col-md-12\\\">\\n                <input mdInput type=\\\"password\\\" placeholder=\\\"Password\\\" [formControl]=\\\"passwordFormControl\\\" #upass>\\n                <md-error *ngIf=\\\"passwordFormControl.hasError('pattern')\\\">\\n                    Please enter a valid email address\\n                </md-error>\\n                <md-error *ngIf=\\\"passwordFormControl.hasError('required')\\\">\\n                    Password is <strong>required</strong>\\n                </md-error>\\n            </md-input-container>\\n\\n            <!-- </form> -->\\n        </div>\\n\\n        <div class=\\\"box-footer text-center\\\"> <button (click)=\\\"login(uemail.value, upass.value)\\\" class=\\\"bg-blue\\\" md-raised-button>Login</button></div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/admin.component.html\n// module id = 680\n// module chunks = 2","module.exports = \"<div class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n    <div class=\\\"container-par\\\">\\n        <!-- <div class=\\\"col-md-12\\\"> -->\\n        <div class=\\\"navbar-header\\\">\\n            <a routerLink=\\\"\\\" class=\\\"navbar-brand\\\">ARG-miner</a>\\n            <button class=\\\"navbar-toggle\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar-main\\\">\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n        </div>\\n\\n        <div class=\\\"navbar-collapse collapse\\\" id=\\\"navbar-main\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n\\n                <li>\\n                    <a routerLink=\\\"classify\\\">Classify</a>\\n                </li>\\n                <li>\\n                    <a routerLink=\\\"database\\\">Download</a>\\n                </li>\\n                <li>\\n                    <a routerLink=\\\"about\\\">About</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li><a routerLink=\\\"admin\\\">Admin</a></li>\\n            </ul>\\n\\n        </div>\\n        <!-- </div> -->\\n    </div>\\n</div>\\n\\n<hr>\\n<br>\\n<br>\\n<div class=\\\"container-par\\\">\\n    <!-- <div class=\\\"wrapper\\\"> -->\\n    <router-outlet></router-outlet>\\n    <!-- </div> -->\\n</div>\\n\\n<!-- <footer class=\\\"col-lg-12 main-footer\\\">\\n    <div class=\\\"pull-right\\\">\\n        <b>Version</b> 1.0\\n    </div>\\n    <strong>Copyright © 2016-2017 <a href=\\\"\\\">ZhangLab - Virginia Tech</a>.</strong> All rights reserved.\\n</footer> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 681\n// module chunks = 2","module.exports = \"<div *ngFor=\\\"let bh of randomARG.besthit.alignments\\\">\\n    <div *ngIf=\\\"bh.best_hit_database=='ARDB'\\\" class=\\\"\\\">\\n        <div class=\\\"box box-solid \\\">\\n            <div class=\\\"box-header with-border\\\">\\n                <i class=\\\"fa fa-gears\\\"></i>\\n                <h3 class=\\\"box-title\\\"><strong> {{ bh.best_hit_database }} </strong> BLAST alignment <span class=\\\"badge\\\">{{ bh.metadata.subtype }}</span></h3>\\n            </div>\\n\\n            <!-- /.box-header -->\\n            <div class=\\\"box-body\\\">\\n                <dl class=\\\"dl-horizontal\\\">\\n\\n                    <dt>Best Hit ID</dt>\\n                    <dd> {{ bh.best_hit }}\\n                        <dd>\\n                            <dt>Similarity:</dt>\\n                            <dd>\\n\\n                                <span *ngIf=\\\"bh.identity<=30\\\" class=\\\"badge bg-red\\\"> {{ bh.identity }}% </span>\\n                                <span *ngIf=\\\"bh.identity>30 && bh.identity<=50\\\" class=\\\"badge bg-yellow\\\"> {{ bh.identity }}% </span>\\n                                <span *ngIf=\\\"bh.identity>50 && bh.identity<=80\\\" class=\\\"badge bg-green\\\"> {{ bh.identity }}% </span>\\n                                <span *ngIf=\\\"bh.identity>80\\\" class=\\\"badge bg-blue\\\"> {{ bh.identity }}% </span>\\n\\n                            </dd>\\n                            <dt>Coverage:</dt>\\n                            <dd>\\n\\n                                <span *ngIf=\\\"(100*bh.algn_len/randomARG.entry['length']).toFixed(2)<=30\\\" class=\\\"badge bg-red\\\"> {{ (100*bh.algn_len/randomARG.entry['length']).toFixed(0) }}% </span>\\n                                <span *ngIf=\\\"(100*bh.algn_len/randomARG.entry['length']).toFixed(2)>30 && (100*bh.algn_len/randomARG.entry['length']).toFixed(2)<=50\\\" class=\\\"badge bg-yellow\\\"> {{ (100*bh.algn_len/randomARG.entry['length']).toFixed(0) }}%</span>\\n                                <span *ngIf=\\\"(100*bh.algn_len/randomARG.entry['length']).toFixed(2)>50 && (100*bh.algn_len/randomARG.entry['length']).toFixed(2)<=80\\\" class=\\\"badge bg-green\\\"> {{ (100*bh.algn_len/randomARG.entry['length']).toFixed(0) }}% </span>\\n                                <span *ngIf=\\\"(100*bh.algn_len/randomARG.entry['length']).toFixed(2)>80\\\" class=\\\"badge bg-blue\\\"> {{ (100*bh.algn_len/randomARG.entry['length']).toFixed(0) }}% </span>\\n\\n                            </dd>\\n                            <dt>Bitscore:</dt>\\n                            <dd>\\n                                <span *ngIf=\\\"bh.bitscore<=50\\\" class=\\\"badge bg-red\\\"> {{ bh.bitscore }} </span>\\n                                <span *ngIf=\\\"bh.bitscore>50 && bh.bitscore<=100\\\" class=\\\"badge bg-yellow\\\"> {{ bh.bitscore }} </span>\\n                                <span *ngIf=\\\"bh.bitscore>100 && bh.bitscore<=500\\\" class=\\\"badge bg-green\\\"> {{ bh.bitscore }} </span>\\n                                <span *ngIf=\\\"bh.bitscore>500\\\" class=\\\"badge bg-blue\\\"> {{ bh.bitscore }} </span>\\n\\n                            </dd>\\n                            <dt>evalue:</dt>\\n                            <dd>\\n\\n                                <span *ngIf=\\\"bh.evalue>=1e-5\\\" class=\\\"badge bg-red\\\"> {{ bh.evalue }} </span>\\n                                <span *ngIf=\\\"bh.evalue<1e-5 && bh.evalue>=1e-10\\\" class=\\\"badge bg-yellow\\\"> {{ bh.evalue }} </span>\\n                                <span *ngIf=\\\"bh.evalue<1e-10 && bh.evalue>=1e-50\\\" class=\\\"badge bg-green\\\"> {{ bh.evalue }} </span>\\n                                <span *ngIf=\\\"bh.evalue<1e-50\\\" class=\\\"badge bg-blue\\\"> {{ bh.evalue }} </span>\\n\\n                            </dd>\\n\\n\\n                            <hr>\\n                            <strong> AMR profile: </strong>\\n\\n\\n                            <!-- <dd> -->\\n                            <p> {{bh.metadata.description}} </p>\\n                            <div *ngFor=\\\"let type of bh.metadata.resistance_profile\\\">\\n                                <strong> <span class=\\\"strong\\\">{{ type.type }} </span> </strong>\\n                                <p *ngIf=\\\"type.description\\\"> {{ type.description }} </p>\\n                            </div>\\n                            <!-- <dd> -->\\n\\n\\n                </dl>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/ardb/ardb.component.html\n// module id = 682\n// module chunks = 2","module.exports = \"<div *ngFor=\\\"let bh of randomARG.besthit.alignments\\\">\\n\\n    <div *ngIf=\\\"bh.best_hit_database=='CARD'\\\" class=\\\"\\\">\\n        <div class=\\\"box box-solid \\\">\\n            <div class=\\\"box-header with-border\\\">\\n                <i class=\\\"fa fa-gears\\\"></i>\\n\\n                <h3 class=\\\"box-title\\\"><strong> {{ bh.best_hit_database }} </strong> BLAST alignment <span class=\\\"badge\\\">{{ bh.metadata.subtype }}</span></h3>\\n            </div>\\n            <!-- /.box-header -->\\n            <div class=\\\"box-body\\\">\\n                <dl class=\\\"dl-horizontal\\\">\\n\\n                    <dt>Best Hit ID</dt>\\n                    <dd> {{ bh.best_hit }}\\n                        <dd>\\n                            <dt>Similarity:</dt>\\n                            <dd>\\n\\n                                <span *ngIf=\\\"bh.identity<=30\\\" class=\\\"badge bg-red\\\"> {{ bh.identity }}% </span>\\n                                <span *ngIf=\\\"bh.identity>30 && bh.identity<=50\\\" class=\\\"badge bg-yellow\\\"> {{ bh.identity }}% </span>\\n                                <span *ngIf=\\\"bh.identity>50 && bh.identity<=80\\\" class=\\\"badge bg-green\\\"> {{ bh.identity }}% </span>\\n                                <span *ngIf=\\\"bh.identity>80\\\" class=\\\"badge bg-blue\\\"> {{ bh.identity }}% </span>\\n\\n                            </dd>\\n                            <dt>Coverage:</dt>\\n                            <dd>\\n\\n                                <span *ngIf=\\\"(100*bh.algn_len/randomARG.entry['length']).toFixed(2)<=30\\\" class=\\\"badge bg-red\\\"> {{ (100*bh.algn_len/randomARG.entry['length']).toFixed(0) }}% </span>\\n                                <span *ngIf=\\\"(100*bh.algn_len/randomARG.entry['length']).toFixed(2)>30 && (100*bh.algn_len/randomARG.entry['length']).toFixed(2)<=50\\\" class=\\\"badge bg-yellow\\\"> {{ (100*bh.algn_len/randomARG.entry['length']).toFixed(0) }}%</span>\\n                                <span *ngIf=\\\"(100*bh.algn_len/randomARG.entry['length']).toFixed(2)>50 && (100*bh.algn_len/randomARG.entry['length']).toFixed(2)<=80\\\" class=\\\"badge bg-green\\\"> {{ (100*bh.algn_len/randomARG.entry['length']).toFixed(0) }}% </span>\\n                                <span *ngIf=\\\"(100*bh.algn_len/randomARG.entry['length']).toFixed(2)>80\\\" class=\\\"badge bg-blue\\\"> {{ (100*bh.algn_len/randomARG.entry['length']).toFixed(0) }}% </span>\\n\\n                            </dd>\\n                            <dt>Bitscore:</dt>\\n                            <dd>\\n                                <span *ngIf=\\\"bh.bitscore<=50\\\" class=\\\"badge bg-red\\\"> {{ bh.bitscore }} </span>\\n                                <span *ngIf=\\\"bh.bitscore>50 && bh.bitscore<=100\\\" class=\\\"badge bg-yellow\\\"> {{ bh.bitscore }} </span>\\n                                <span *ngIf=\\\"bh.bitscore>100 && bh.bitscore<=500\\\" class=\\\"badge bg-green\\\"> {{ bh.bitscore }} </span>\\n                                <span *ngIf=\\\"bh.bitscore>500\\\" class=\\\"badge bg-blue\\\"> {{ bh.bitscore }} </span>\\n\\n                            </dd>\\n                            <dt>evalue:</dt>\\n                            <dd>\\n\\n                                <span *ngIf=\\\"bh.evalue>=1e-5\\\" class=\\\"badge bg-red\\\"> {{ bh.evalue }} </span>\\n                                <span *ngIf=\\\"bh.evalue<1e-5 && bh.evalue>=1e-10\\\" class=\\\"badge bg-yellow\\\"> {{ bh.evalue }} </span>\\n                                <span *ngIf=\\\"bh.evalue<1e-10 && bh.evalue>=1e-50\\\" class=\\\"badge bg-green\\\"> {{ bh.evalue }} </span>\\n                                <span *ngIf=\\\"bh.evalue<1e-50\\\" class=\\\"badge bg-blue\\\"> {{ bh.evalue }} </span>\\n\\n                            </dd>\\n\\n\\n                            <hr>\\n                            <strong> AMR profile: </strong>\\n\\n                            <!-- <dd> -->\\n                            <p> {{bh.metadata.description}} </p>\\n                            <div *ngFor=\\\"let type of bh.metadata.type\\\">\\n                                <strong> {{ type.name }} </strong> ({{ type.namespace }})\\n                                <p> {{ type.def }} </p>\\n\\n                                <div *ngIf=\\\"type.is_a\\\">\\n                                    <div *ngFor=\\\"let rel of type.is_a\\\">\\n                                        <strong> {{ rel['id'] }} </strong> {{ rel.term }}\\n                                    </div>\\n                                </div>\\n\\n                                <div *ngIf=\\\"type.relationship\\\">\\n                                    <div *ngFor=\\\"let rel of type.relationship\\\">\\n                                        <strong> {{ rel.accession }} </strong> <u> {{ rel.term }} </u> ( {{ rel.id }} )\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                            <!-- </dd> -->\\n\\n\\n\\n                </dl>\\n            </div>\\n            <!-- /.box-body -->\\n        </div>\\n        <!-- /.box -->\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/card/card.component.html\n// module id = 683\n// module chunks = 2","module.exports = \"<div *ngFor=\\\"let bh of randomARG.besthit.alignments\\\">\\n    <div *ngIf=\\\"bh.best_hit_database!=='CARD' && bh.best_hit_database!=='ARDB'\\\" class=\\\"\\\">\\n        <div class=\\\"box box-solid \\\">\\n            <div class=\\\"box-header with-border\\\">\\n                <i class=\\\"fa fa-gears\\\"></i>\\n\\n                <h3 class=\\\"box-title\\\"><strong> {{ bh.best_hit_database }} </strong> BLAST alignment <span class=\\\"badge\\\">{{ bh.subtype }}</span></h3>\\n            </div>\\n            <div class=\\\"box-body\\\">\\n                <dl class=\\\"dl-horizontal\\\">\\n\\n                    <dt>Best Hit ID</dt>\\n                    <dd> {{ bh.best_hit.substring(0, 30) }}\\n                        <dd>\\n\\n                            <dt>Similarity:</dt>\\n                            <dd>\\n\\n                                <span *ngIf=\\\"bh.identity<=30\\\" class=\\\"badge bg-red\\\"> {{ bh.identity }}% </span>\\n                                <span *ngIf=\\\"bh.identity>30 && bh.identity<=50\\\" class=\\\"badge bg-yellow\\\"> {{ bh.identity }}% </span>\\n                                <span *ngIf=\\\"bh.identity>50 && bh.identity<=80\\\" class=\\\"badge bg-green\\\"> {{ bh.identity }}% </span>\\n                                <span *ngIf=\\\"bh.identity>80\\\" class=\\\"badge bg-blue\\\"> {{ bh.identity }}% </span>\\n\\n                            </dd>\\n\\n                            <dt>Coverage:</dt>\\n                            <dd>\\n\\n                                <span *ngIf=\\\"(100*bh.algn_len/randomARG.entry['length']).toFixed(2)<=30\\\" class=\\\"badge bg-red\\\"> {{ (100*bh.algn_len/randomARG.entry['length']).toFixed(0) }}% </span>\\n                                <span *ngIf=\\\"(100*bh.algn_len/randomARG.entry['length']).toFixed(2)>30 && (100*bh.algn_len/randomARG.entry['length']).toFixed(2)<=50\\\" class=\\\"badge bg-yellow\\\"> {{ (100*bh.algn_len/randomARG.entry['length']).toFixed(0) }}%</span>\\n                                <span *ngIf=\\\"(100*bh.algn_len/randomARG.entry['length']).toFixed(2)>50 && (100*bh.algn_len/randomARG.entry['length']).toFixed(2)<=80\\\" class=\\\"badge bg-green\\\"> {{ (100*bh.algn_len/randomARG.entry['length']).toFixed(0) }}% </span>\\n                                <span *ngIf=\\\"(100*bh.algn_len/randomARG.entry['length']).toFixed(2)>80\\\" class=\\\"badge bg-blue\\\"> {{ (100*bh.algn_len/randomARG.entry['length']).toFixed(0) }}% </span>\\n\\n                            </dd>\\n                            <dt>Bitscore:</dt>\\n                            <dd>\\n                                <span *ngIf=\\\"bh.bitscore<=50\\\" class=\\\"badge bg-red\\\"> {{ bh.bitscore }} </span>\\n                                <span *ngIf=\\\"bh.bitscore>50 && bh.bitscore<=100\\\" class=\\\"badge bg-yellow\\\"> {{ bh.bitscore }} </span>\\n                                <span *ngIf=\\\"bh.bitscore>100 && bh.bitscore<=500\\\" class=\\\"badge bg-green\\\"> {{ bh.bitscore }} </span>\\n                                <span *ngIf=\\\"bh.bitscore>500\\\" class=\\\"badge bg-blue\\\"> {{ bh.bitscore }} </span>\\n\\n                            </dd>\\n                            <dt>evalue:</dt>\\n                            <dd>\\n\\n                                <span *ngIf=\\\"bh.evalue>=1e-5\\\" class=\\\"badge bg-red\\\"> {{ bh.evalue }} </span>\\n                                <span *ngIf=\\\"bh.evalue<1e-5 && bh.evalue>=1e-10\\\" class=\\\"badge bg-yellow\\\"> {{ bh.evalue }} </span>\\n                                <span *ngIf=\\\"bh.evalue<1e-10 && bh.evalue>=1e-50\\\" class=\\\"badge bg-green\\\"> {{ bh.evalue }} </span>\\n                                <span *ngIf=\\\"bh.evalue<1e-50\\\" class=\\\"badge bg-blue\\\"> {{ bh.evalue }} </span>\\n\\n                            </dd>\\n\\n\\n                            <hr>\\n                            <strong> AMR profile: </strong><br><br>\\n\\n                            <!-- <dd> -->\\n\\n\\n                            <strong> Antibiotic Resistance Class: </strong> {{ bh.type }}<br>\\n                            <strong> Antibiotic Resistance Group: </strong> {{ bh.subtype }}<br>\\n                            <strong> Antibiotic Resistance Mechanism: </strong> {{ bh.mechanism }}<br>\\n\\n\\n                            <!-- </dd> -->\\n\\n\\n\\n                </dl>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<hr>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/besthit/generic/generic.component.html\n// module id = 684\n// module chunks = 2","module.exports = \"<div class=\\\"\\\">\\n\\n    <div *ngIf=\\\"!render\\\" class=\\\"col-md-4 col-md-offset-4\\\">\\n        <div class=\\\"col-sm-4 col-sm-offset-4\\\">\\n            <object>\\n            <embed src=\\\"assets/images/loading_1.svg\\\" />\\n          </object>\\n        </div>\\n    </div>\\n\\n\\n    <div *ngIf=\\\"render\\\">\\n        <!--Left panel-->\\n        <div class=\\\"col-sm-3 \\\">\\n            <!-- <div class=\\\"\\\"> -->\\n            <div *ngIf=\\\"randomARG.status==true\\\" class=\\\"\\\">\\n                <!-- <div class=\\\"col-md-12\\\"> -->\\n                <p-growl class=\\\"user_growl\\\" [(value)]=\\\"notification\\\"></p-growl>\\n                <div class=\\\"box box-solid box-primary\\\">\\n                    <div class=\\\"box-header with-border\\\">\\n\\n\\n\\n                        <i class=\\\"fa fa-gears\\\"></i>\\n                        <!-- <p *ngIf=\\\"loading\\\"><md-progress-bar mode=\\\"indeterminate\\\"></md-progress-bar></p>  -->\\n                        <h3 class=\\\"box-title\\\"><strong>Current Annotation </strong> </h3>\\n\\n                    </div>\\n                    <!-- /.box-header -->\\n                    <div class=\\\"box-body\\\">\\n\\n                        <dl class=\\\"dl\\\">\\n                            <!-- <p> -->\\n                            <strong>Query gene id:</strong>\\n                            <span class=\\\"\\\">{{ randomARG.entry.gene_id }}</span>\\n                            <!-- </p> -->\\n                            <!-- <p> -->\\n                            <br>\\n                            <strong>ARG Class:</strong>\\n                            <span class=\\\"\\\">{{ randomARG.entry.type }}</span>\\n                            <!-- </p> -->\\n                            <!-- <p> -->\\n                            <br>\\n                            <strong>ARG:</strong>\\n                            <span class=\\\"\\\">{{ randomARG.entry.subtype }}</span>\\n                            <!-- </p> -->\\n                            <!-- <p> -->\\n                            <br>\\n                            <strong>ARG Database:</strong>\\n                            <span class=\\\"\\\">{{ randomARG.entry.database }}</span>\\n                            <!-- </p> -->\\n                            <!-- <p> -->\\n                            <br><br>\\n                            <p class=\\\"small\\\">*ARG: <u><strong>A</strong>ntibiotic <strong>R</strong>esistance <strong>G</strong>ene</u></p>\\n                            <hr>\\n                            <strong>Inspected:</strong>\\n                            <span class=\\\"\\\">{{ randomARG.inspected.length }}</span>\\n                            <!-- </p> -->\\n                            <!-- <dt>Score:</dt> -->\\n                            <!-- <dd><span class=\\\"badge bg-blue\\\">{{ randomARG.entry.score }}</span></dd> -->\\n\\n                        </dl>\\n                        <hr>\\n\\n                        <h4>Filter options</h4>\\n\\n                        <md-slide-toggle (change)=\\\"trainingARGEvent($event)\\\" [checked]=\\\"trainingARGFlag\\\"><strong>I am a New User</strong></md-slide-toggle>\\n                        <p class=\\\"small\\\">Enable this option if is the first time you enter the platform. You will be prompted with a specific set of ARGs that have been manualy validated to score your performance. </p>\\n                        <hr>\\n\\n                        <md-slide-toggle (change)=\\\"selectConflictedArgEvent($event)\\\" [checked]=\\\"conflictedArgSubtypeFlag\\\"><strong>Select Problematic ARGs</strong></md-slide-toggle>\\n                        <p class=\\\"small\\\">This option only takes the ARGs that have two or more annotations. In many cases, these genes have conflicting annotations from the reference database and require special attention. By turning off this filter you will get a random\\n                            gene from the database.</p>\\n                        <hr>\\n\\n\\n\\n                        <div *ngIf=\\\"loading==false && conflictedArgSubtypeFlag\\\">\\n\\n                            <h4> Conflicted ARGs </h4>\\n                            <p class=\\\"small\\\">This section contains the list of ARGs under the category {{ conflictingARGSubtype.subtype }} that present inconsistences respect its ARG class annotation.</p>\\n                            <!-- <div class=\\\"box-body\\\"> -->\\n                            <p> <strong>Gene:</strong> <mark>{{ conflictingARGSubtype.subtype }}</mark></p>\\n                            <div *ngFor=\\\"let item of conflictingARGSubtype.conflict\\\">\\n                                <strong>{{ item.class }}</strong> {{ item.genes.length }}\\n                            </div>\\n                            <hr>\\n                            <button (click)=\\\"nextGene()\\\" class=\\\"\\\" color=\\\"primary\\\" md-raised-button>Other ARG Group</button>\\n                            <button (click)=\\\"nextGeneConflictList()\\\" class=\\\"\\\" color=\\\"warn\\\" md-raised-button>Next ARG</button>\\n                            <!-- </div> -->\\n                        </div>\\n\\n                        <div *ngIf=\\\"conflictedArgSubtypeFlag==false && trainingARGFlag==false\\\" class=\\\"col-md-12 text-center\\\">\\n                            <button (click)=\\\"nextGene()\\\" class=\\\"\\\" color=\\\"primary\\\" md-raised-button>Random ARG</button>\\n                        </div>\\n\\n                        <div *ngIf=\\\"trainingARGFlag && conflictedArgSubtypeFlag==false\\\" class=\\\"col-md-12 text-center\\\">\\n                            <button (click)=\\\"trainingARGNextGene()\\\" class=\\\"\\\" color=\\\"primary\\\" md-raised-button>Next ARG</button>\\n                        </div>\\n\\n\\n                        <!-- <div class=\\\"col-md-12 text-right\\\">\\n                            <button (click)=\\\"nextGene()\\\" class=\\\"\\\" color=\\\"red\\\" md-raised-button>Random</button>\\n                        </div> -->\\n\\n\\n                    </div>\\n\\n                    <!-- /.box-body -->\\n                    <!-- </div> -->\\n                    <!-- /.box -->\\n                </div>\\n            </div>\\n\\n            <!-- <div class=\\\"col-md-12 box box-solid \\\">\\n\\n                <h4>Note about BitScores</h4>\\n                <p class=\\\"small\\\">A bitscore of 50 is considered significant if the alignment covers at least 90% of the reference sequence</p>\\n                <p class=\\\"small\\\">Bit-score does not depend on database size. The bit-score gives the same value for hits in databases of different sizes and hence can be used for searching in an constantly increasing database.</p>\\n                <p class=\\\"small\\\"> The higher the bitscore, the better the quality of the sequence alignment</p>\\n\\n            </div> -->\\n\\n            <div class=\\\"col-md-12 box box-solid \\\">\\n                <h3>Instructions</h3>\\n                <h4>ARG identification</h4>\\n                <p>Please fill up the Antibiotic resistance class, group and mechanism (if any) of the gene based on the observation from the different resources.</p>\\n\\n                <p class=\\\"small\\\">The Blast alignment sections associate the queried gene to its closest antibiotic resistance genes from curated databases. From this section you need to look at the alignment scores (Bitscore, evalue, identity and coverage). High identity\\n                    and coverage represent close related sequences. Statistically significant alignments don't necesarly need high identity percentages. Therefore, pay attention to the Bitscores and Evalues. <strong>Note</strong>: A bitscore greater than\\n                    50 is considered significant if it spans at least 90% coverage.\\n                </p>\\n\\n\\n                <hr>\\n\\n                <h4> Mobile Genetic Elements</h4>\\n\\n                <p><strong>Horizontal Gene Transfer</strong></p>\\n                <p>Please check if there is any evidence that suggests the gene has been observed in a plasmid, prophage or virus.</p>\\n                <p class=\\\"small\\\">To complete this task please check the Horizontal Gene Transfer sections. If there is not any box with plasmid, prophage or virus tags it means to date there is not evidence that the gene is transfered by any of those mechanisms.\\n                </p>\\n                <p><strong>Pathogen Genomes</strong></p>\\n                <p>Please take a look at the pathogen genomes panel under the horizontal gene transfer section. </p>\\n                <p class=\\\"small\\\">This panel will show you the association of the queried gene against a set of ~100,000 bacterial genomes. You will get information about the association of the gene to pathogens as well as their antimicrobial phenotype (resistant, susceptible,\\n                    intermediate). Rate your findigns according to the provided evidence.\\n\\n                </p>\\n\\n                <hr>\\n                <h4>Review and submit</h4>\\n                <p>This panel contains your observations for the queried gene.</p>\\n                <p><strong>Verify your observations</strong></p>\\n                <p>Please, make sure the values in the fields (ARG class, ARG group and ARG mechanism) correspond to what you have observed.</p>\\n                <p><strong>Rate your expertise</strong></p>\\n                <p>Please in a scale from 1 to 5 rate your confidence or expertice level, where 1 depicts a non expert evaluator, and 5 if you have experience working with Antibiotic Resistance Genes.\\n                    <p>\\n                        <p><strong>Rate your annotation confidence</strong></p>\\n                        <p>Please in a scale from 1 to 5, rate your confidence in the curation of the queried gene where 1 means that there is a lack of evidence about the gene and 5 the data correlates with your observations.</p>\\n            </div>\\n\\n\\n            <!-- </div> -->\\n        </div>\\n\\n\\n        <div class=\\\"col-sm-6 col-sm-offset-0\\\">\\n\\n            <div class=\\\"\\\">\\n                <div class=\\\"box box-solid \\\">\\n                    <div class=\\\"box-body\\\">\\n                        <md-input-container class='col-sm-12 col-sm-offset-0'>\\n                            <input #keyword (keyup.enter)=\\\"search(keyword.value)\\\" mdInput placeholder=\\\"Search term \\\" value=\\\"\\\" />\\n                        </md-input-container>\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n\\n            <div *ngIf=\\\"loading==true\\\" class=\\\"col-md-4 col-md-offset-4\\\">\\n                <div class=\\\"col-sm-8 col-sm-offset-2\\\">\\n                    <object>\\n                <embed src=\\\"assets/images/loading_1.svg\\\" />\\n              </object>\\n                </div>\\n            </div>\\n\\n            <div *ngIf=\\\"randomARG.status==true && loading==false\\\">\\n                <!-- <md-tab-group (selectChange)=\\\"tabsEvent($event)\\\"> -->\\n                <!-- <md-tab  label=\\\"METADATA\\\"> -->\\n\\n                <!--METADATA SECTION-->\\n                <classify-metadata-uniprot *ngIf=\\\"randomARG.entry.database=='UNIPROT'\\\"> </classify-metadata-uniprot>\\n                <classify-metadata-card> </classify-metadata-card>\\n\\n\\n                <!-- </md-tab> -->\\n\\n                <!-- <md-tab  label=\\\"BEST HIT\\\"> -->\\n                <hr>\\n                <div *ngFor=\\\"let bh of randomARG.besthit.alignments\\\">\\n                    <!-- <p> {{ bh.best_hit_database }} </p>  -->\\n                    <besthit-metadata-ardb *ngIf=\\\"bh.best_hit_database=='ARDB'\\\"> </besthit-metadata-ardb>\\n                    <besthit-metadata-card *ngIf=\\\"bh.best_hit_database=='CARD'\\\"> </besthit-metadata-card>\\n                </div>\\n                <!-- </md-tab> -->\\n\\n                <!-- OTHER DATABASES  -->\\n\\n                <app-generic></app-generic>\\n\\n\\n                <!-- <md-tab  label=\\\"HORIZONTAL GENE TRANSFER\\\"> -->\\n                <!-- <div *ngIf=\\\"drawGenomes\\\"> -->\\n                <genome-metadata *ngIf=\\\"randomARG.entry.database=='UNIPROT'\\\"></genome-metadata>\\n                <genome-metadata *ngIf=\\\"randomARG.entry.database=='CARD'\\\"></genome-metadata>\\n                <genome-metadata *ngIf=\\\"randomARG.entry.database=='ARDB'\\\"></genome-metadata>\\n                <!-- </div> -->\\n                <!-- </md-tab> -->\\n\\n                <!-- </md-tab-group> -->\\n\\n                <div>\\n                    <div class=\\\"box box-solid \\\">\\n                        <div class=\\\"box-header with-border\\\">\\n                            <h3 class=\\\"box-title\\\"> <strong>Protein sequence</strong> ({{ randomARG.entry.gene_id }}) </h3>\\n                        </div>\\n                        <div class=\\\"box-body\\\">\\n                            <p class=\\\"sequence small\\\"> ><strong>{{randomARG.entry.gene_id}}</strong> <br> {{ randomARG.entry.sequence }}</p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <br><br><br><br>\\n            </div>\\n        </div>\\n\\n\\n        <!-- <div class=\\\"col-sm-3\\\"> -->\\n        <div class=\\\"curate-nav affix clarify\\\">\\n            <!-- <aside class=\\\"control-sidebar control-sidebar-open\\\"> -->\\n            <app-curate></app-curate>\\n            <!-- </aside> -->\\n        </div>\\n        <!-- </div> -->\\n    </div>\\n\\n    <!--</md-tab>-->\\n\\n    <!--<md-tab label=\\\"Novel ARGs\\\">Content 2</md-tab>-->\\n\\n    <!--<md-tab label=\\\"Potential ARGs\\\">Content 2</md-tab>-->\\n\\n    <!--</md-tab-group>-->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/classify.component.html\n// module id = 685\n// module chunks = 2","module.exports = \"<div class=\\\"\\\">\\n    <div class=\\\"box box-solid box-primary\\\">\\n        <div class=\\\"box-body\\\">\\n            <p-steps styleClass=\\\"steps-custom\\\" [(activeIndex)]=\\\"activeIndex\\\" [readonly]=\\\"true\\\" [model]=\\\"items\\\"></p-steps>\\n\\n            <p-dialog header=\\\"{{overlay.title}}\\\" icon=\\\"fa-external-link-square\\\" modal=\\\"modal\\\" [(visible)]=\\\"display\\\">\\n\\n                <div class=\\\"\\\">\\n                    <div class=\\\"box-body text-center\\\">\\n                        <p>{{ overlay.content }}</p>\\n                        <p *ngIf=\\\"overlay.score\\\"><strong>Your annotation score is: {{ overlay.score }}</strong> which is\\n                            <span class=\\\"badge bg-blue\\\" *ngIf=\\\"overlay.score<overlay.average_score\\\">lower</span>\\n                            <span class=\\\"badge bg-red\\\" *ngIf=\\\"overlay.score>overlay.average_score\\\">higher</span> than the average score ( {{ overlay.average_score }} ) for this gene. </p>\\n                    </div>\\n                </div>\\n\\n\\n                <p-footer class=\\\"text-center\\\">\\n                    <button *ngIf=\\\"overlay.score\\\" type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"continueReview()\\\" label=\\\"Continue\\\"></button>\\n                    <button *ngIf=\\\"!overlay.score\\\" type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"display=false\\\" label=\\\"Continue\\\"></button>\\n                </p-footer>\\n\\n            </p-dialog>\\n\\n            <div *ngIf=\\\"step1 text-center\\\">\\n\\n                <!-- <div class=\\\"col-md-12\\\"> -->\\n                <h4 class=\\\"text-center\\\"><strong>ARG Annotation</strong></h4>\\n                <p>Please based on your observations add the corresponding data to the form below:</p>\\n\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input type=\\\"text\\\" mdInput [formControl]=\\\"myControl\\\" [mdAutocomplete]=\\\"AClass\\\" [(ngModel)]=\\\"antibiotic.class\\\" placeholder=\\\"Antibiotic Class\\\">\\n                </md-input-container>\\n\\n                <md-autocomplete #AClass=\\\"mdAutocomplete\\\">\\n                    <md-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">\\n                        {{ option }}\\n                    </md-option>\\n                </md-autocomplete>\\n\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input type=\\\"text\\\" [formControl]=\\\"groupControl\\\" [mdAutocomplete]=\\\"AGroup\\\" mdInput [(ngModel)]=\\\"antibiotic.group\\\" placeholder=\\\"Antibiotic Resistance Gene\\\">\\n                </md-input-container>\\n\\n                <md-autocomplete #AGroup=\\\"mdAutocomplete\\\">\\n                    <md-option *ngFor=\\\"let option of groupFilteredOptions | async\\\" [value]=\\\"option\\\">\\n                        {{ option }}\\n                    </md-option>\\n                </md-autocomplete>\\n\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <input type=\\\"text\\\" mdInput [(ngModel)]=\\\"antibiotic.mechanism\\\" placeholder=\\\"Antibiotic Mechanism (if any)\\\">\\n                </md-input-container>\\n\\n                <br><br>\\n\\n                <div class=\\\"col-md-12 text-center\\\">\\n                    <button (click)=\\\"validate(1)\\\" color=\\\"primary\\\" md-raised-button>Next</button>\\n                    <!-- <button (click)=\\\"reportARG()\\\" class=\\\"\\\" color=\\\"red\\\" md-raised-button>Report ARG</button> -->\\n                </div>\\n                <!-- </div> -->\\n\\n            </div>\\n\\n\\n\\n            <div *ngIf=\\\"step2\\\">\\n\\n\\n                <!-- <div class=\\\"col-md-12\\\"> -->\\n                <h4 class=\\\"text-center\\\"><strong>Horizontal Gene Transfer</strong></h4>\\n                <div class=\\\"col-md-12\\\">\\n                    <p>Is there any evidence that suggests the ARG to be carried by any of the following: </p>\\n\\n                    <div *ngFor=\\\"let ht of mge_options\\\">\\n                        <md-checkbox value=\\\"{{ht}}\\\" (change)=\\\"mgeOptions(ht, $event)\\\">{{ ht }}</md-checkbox>\\n                    </div>\\n                    <p>From a scale from 1 to 5 how would you rate this evidence? </p>\\n                    <star-rating-comp (onRatingChange)=\\\"onRatingChange('mge',$event)\\\" [starType]=\\\"'svg'\\\" [rating]=\\\"1\\\" [labelPosition]=\\\"'top'\\\"></star-rating-comp>\\n                    <p class=\\\"small\\\"> Scores: 1 means there is not evidence and 5 means there is strong evidene that the gene is being carried by any of the three options.</p>\\n                    <hr>\\n                </div>\\n\\n\\n\\n\\n                <div class=\\\"col-md-12\\\">\\n                    <h4 class=\\\"text-center\\\"><strong>Pathogenic Genomes</strong></h4>\\n\\n                    <p>Is there evidence that suggests the queried gene is present any pathogenic genomes? </p>\\n\\n                    <!-- <md-radio-group [(ngModel)]=\\\"antibiotic.pathGenome\\\">\\n                        <md-radio-button value=\\\"1\\\">Yes</md-radio-button> <br>\\n                        <md-radio-button value=\\\"2\\\">Not</md-radio-button> <br>\\n                    </md-radio-group> -->\\n\\n                    <p>From a scale from 1 to 5 how would you rate this evidence? </p>\\n                    <star-rating-comp (onRatingChange)=\\\"onRatingChange('genome',$event)\\\" [starType]=\\\"'svg'\\\" [rating]=\\\"1\\\" [labelPosition]=\\\"'top'\\\"></star-rating-comp>\\n                    <p class=\\\"small\\\">Scores: 1 means there is not evidence whereas 5 means there is strong evidence the gene is carried in a pathogen genome.</p>\\n                    <hr>\\n\\n                </div>\\n\\n\\n\\n                <div class=\\\"col-md-12 text-center\\\">\\n                    <button (click)=\\\"validate(2)\\\" color=\\\"primary\\\" md-raised-button>Next</button>\\n                </div>\\n                <!-- </div> -->\\n\\n\\n\\n            </div>\\n\\n            <div *ngIf=\\\"step3\\\">\\n\\n                <!-- <div class=\\\"col-md-12\\\"> -->\\n                <div class=\\\"col-md-12\\\">\\n                    <!-- <h4 class=\\\"text-center\\\"><strong>ARG annotation</strong></h4> -->\\n                    <dl class=\\\"dl\\\">\\n                        <h4></h4>\\n                        <strong>ARG Class:</strong>\\n                        <span class=\\\"\\\"> {{ antibiotic.class }} </span>\\n                        <br>\\n\\n                        <strong>ARG Group:</strong>\\n                        <span class=\\\"\\\"> {{ antibiotic.group }} </span>\\n                        <br>\\n\\n                        <strong *ngIf=\\\"!antibiotic.mechanism==''\\\">ARG Mechanism:</strong>\\n                        <span *ngIf=\\\"!antibiotic.mechanism==''\\\">{{ antibiotic.mechanism }} </span>\\n\\n                    </dl>\\n                    <hr>\\n                </div>\\n\\n                <div class=\\\"col-md-12 col-md-offset-0 text-center\\\">\\n                    <p>Please rate your level of expertise</p>\\n                    <star-rating-comp (onRatingChange)=\\\"onRatingChange('expertise',$event)\\\" [starType]=\\\"'svg'\\\" [rating]=\\\"1\\\" [labelPosition]=\\\"'top'\\\"></star-rating-comp>\\n                    <hr>\\n                </div>\\n\\n                <div class=\\\"col-md-12 col-md-offset-0 text-center\\\">\\n                    <p>Please rate your confidence in your observations</p>\\n                    <star-rating-comp (onRatingChange)=\\\"onRatingChange('confidence',$event)\\\" [starType]=\\\"'svg'\\\" [rating]=\\\"1\\\" [labelPosition]=\\\"'top'\\\"></star-rating-comp>\\n                    <hr>\\n                </div>\\n\\n                <md-input-container class=\\\"col-md-12\\\">\\n                    <p>Please add any relevant comments</p>\\n                    <textarea mdInput [(ngModel)]=\\\"antibiotic.comments\\\" rows=\\\"5\\\"></textarea>\\n                </md-input-container>\\n\\n\\n                <div class=\\\"col-md-12 text-center\\\">\\n                    <button (click)=\\\"submitReview()\\\" class=\\\"\\\" color=\\\"green\\\" md-raised-button>Submit</button>\\n                    <button (click)=\\\"validate(3)\\\" class=\\\"\\\" color=\\\"red\\\" md-raised-button>Cancel</button>\\n                </div>\\n\\n\\n                <!-- </div> -->\\n            </div>\\n\\n\\n\\n        </div>\\n\\n    </div>\\n\\n    <div *ngIf=\\\"inspectedGenes.length>0\\\" class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header\\\">\\n            <h3 class=\\\"box-title\\\">Inspected genes: {{ inspectedGenes.length }}</h3>\\n        </div>\\n        <div class=\\\"box-body\\\">\\n\\n            <span *ngFor=\\\"let item of inspectedGenes\\\" class=\\\"badge\\\">\\n                {{ item }}\\n            </span>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/curate/curate.component.html\n// module id = 686\n// module chunks = 2","module.exports = \"<div *ngFor=\\\"let item of randomARG.mobile\\\" class=\\\"\\\">\\n    <div *ngIf=\\\"item.status==true && item.identity.mean>50\\\" class=\\\"\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <!-- <div class=\\\"col-md-10 col-md-offset-1\\\"> -->\\n\\n            <div class=\\\"box-header with-border \\\">\\n                <i class=\\\"fa fa-tag\\\"></i>\\n                <h3 class=\\\"box-title\\\" *ngIf=\\\"item.type=='proph'\\\">Prophages</h3>\\n                <h3 class=\\\"box-title\\\" *ngIf=\\\"item.type=='plasmid'\\\">Plasmids</h3>\\n                <h3 class=\\\"box-title\\\" *ngIf=\\\"item.type=='vir'\\\">Viruses</h3>\\n\\n            </div>\\n\\n            <!-- </div> -->\\n\\n            <!-- <div class=\\\"col-md-12\\\"> -->\\n            <div class=\\\"box-body\\\">\\n                <dl class=\\\"dl-horizontal\\\">\\n                    <dt>Count:</dt>\\n                    <dd> <span class=\\\"badge bg-blue\\\"> {{ item.count }} </span></dd>\\n                    <dt>BitScore:</dt>\\n                    <dd> <span class=\\\"badge bg-{{ item.bitscore.color }}\\\"> {{ item.bitscore.mean }} {{ '&plusmn;' }} {{item.bitscore.std}} </span></dd>\\n                    <dt>Evalue (log):</dt>\\n                    <dd> <span class=\\\"badge bg-{{ item.evalue.color }}\\\"> {{ item.evalue.mean.toPrecision(2)}} {{ '&plusmn;' }} {{item.evalue.std.toPrecision(2)}} </span></dd>\\n                    <dt>Coverage:</dt>\\n                    <dd> <span class=\\\"badge bg-{{ item.coverage.color }}\\\"> {{  (100*item.coverage.mean/randomARG.entry['length']).toFixed(0) }}% {{ '&plusmn;' }} {{(100*item.coverage.std/randomARG.entry['length']).toFixed(0)}} </span></dd>\\n                    <dt>Identity:</dt>\\n                    <dd> <span class=\\\"badge bg-{{ item.identity.color }}\\\"> {{ item.identity.mean }}%  {{ '&plusmn;' }} {{item.identity.std}} </span></dd>\\n                    <dt>Description:</dt>\\n                    <dd>{{ item.mge_description }}</dd>\\n                    <dt>Gene Aclame ID:</dt>\\n                    <dd>{{ item.mge_id }}</dd>\\n                </dl>\\n            </div>\\n            <!-- </div> -->\\n        </div>\\n    </div>\\n</div>\\n\\n<div *ngIf=\\\"randomARG.pathogen.status==true\\\" class=\\\"\\\">\\n    <!-- <div class=\\\"col-md-12\\\"> -->\\n    <div class=\\\"box box-solid\\\">\\n\\n\\n        <div class=\\\"box-header with-border\\\">\\n\\n            <!-- <div class=\\\"col-md-10 col-md-offset-1\\\">\\n                            <svg  width=\\\"50px\\\" height=\\\"50px\\\"  class=\\\"resistant\\\" />  \\n                        </div> -->\\n            <i class=\\\"fa fa-bug\\\"></i>\\n            <h3 class=\\\"box-title\\\">Full Genomes</h3>\\n\\n        </div>\\n\\n\\n        <div class=\\\"\\\">\\n            <div class=\\\"box-body\\\">\\n                The gene entry {{randomARG.entry.gene_id}} (<strong>{{ randomARG.entry.subtype }}</strong>) has been aligned to the <a href=\\\"https://www.patricbrc.org/\\\">PATRIC</a> database using strict cutoffs to ensure the existence of the gene (>90%\\n                identity, >90% coverage).\\n                <br><br><strong>{{ randomARG.pathogen.genomes_count }}</strong> genomes contain this particular gene ({{randomARG.entry.gene_id}}). From those,\\n                <strong>{{ randomARG.pathogen.genomes_pathogen }}</strong> ( {{(100*randomARG.pathogen.genomes_pathogen/randomARG.pathogen.genomes_count).toFixed(1)}}% ) genomes are labeled as <u>pathogens</u>.\\n            </div>\\n        </div>\\n    </div>\\n\\n    <!-- PIE CHARTS WITH THE DATA INFORMATION  -->\\n    <div *ngIf=\\\"disease.ready\\\" class=\\\"fig-panel\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <div class=\\\"box-header with-border\\\">\\n                <!-- <i class=\\\"fa fa-bug\\\"></i> -->\\n                <h3 class=\\\"box-title\\\">Genomes causing diseases</h3>\\n            </div>\\n            <div class=\\\"box-body\\\">\\n                <p>This figure shows the distribution of the bacterial genomes that are reported to cause or be involved in any diseases and contain the gene <u>{{ randomARG.entry.gene_id }}</u>.</p>\\n                <ngx-charts-pie-grid [scheme]=\\\"disease.colorScheme\\\" [results]=\\\"disease.data\\\" (select)=\\\"onSelect($event)\\\">\\n                </ngx-charts-pie-grid>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <!-- PIE CHARTS WITH THE DATA INFORMATION  -->\\n    <div *ngIf=\\\"AMR_phenotype.ready\\\" class=\\\" fig-panel\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <div class=\\\"box-header with-border\\\">\\n                <!-- <i class=\\\"fa fa-bug\\\"></i> -->\\n                <h3 class=\\\"box-title\\\">Genomes with Antimicrobial Resistance phenotype</h3>\\n            </div>\\n            <div class=\\\"box-body\\\">\\n                <p>This figure shows the existing antimicrobial resistance phenotype from the genomes.</p>\\n                <ngx-charts-pie-grid [scheme]=\\\"AMR_phenotype.colorScheme\\\" [results]=\\\"AMR_phenotype.data\\\" (select)=\\\"onSelect($event)\\\">\\n                </ngx-charts-pie-grid>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <!-- PIE CHARTS WITH THE DATA INFORMATION  -->\\n    <div *ngIf=\\\"host.ready\\\" class=\\\"fig-panel\\\">\\n        <div class=\\\"box box-solid\\\">\\n            <div class=\\\"box-header with-border\\\">\\n                <!-- <i class=\\\"fa fa-bug\\\"></i> -->\\n                <h3 class=\\\"box-title\\\">Bacterial hosts</h3>\\n            </div>\\n            <div class=\\\"box-body\\\">\\n                <p>This figure shows the distribution of the host organisms. The number of genomes corresponds to the genomes with it reported hosts.</p>\\n                <ngx-charts-pie-grid [scheme]=\\\"host.colorScheme\\\" [results]=\\\"host.data\\\" (select)=\\\"onSelect($event)\\\">\\n                </ngx-charts-pie-grid>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n\\n\\n\\n    <!-- </div> -->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/genomes/genome.component.html\n// module id = 687\n// module chunks = 2","module.exports = \"<div *ngIf=\\\"randomARG.metadata.status==false\\\" class=\\\"\\\">\\n\\n    <div class=\\\"alert alert-danger alert-dismissible\\\">\\n        <h4><i class=\\\"icon fa fa-ban\\\"></i> {{ randomARG.entry.database }} Alert!</h4>\\n        <strong>This Gene is outdated</strong>\\n        <p>\\n            The entry {{ randomARG.entry.gene_id }} is no longer active in the {{ randomARG.entry.database }} database.\\n        </p>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/ardb/ardb.component.html\n// module id = 688\n// module chunks = 2","module.exports = \"<div *ngIf=\\\"randomARG.metadata.status==false\\\" class=\\\"\\\">\\n\\n    <div class=\\\"alert alert-info alert-dismissible\\\">\\n        <h4><i class=\\\"icon fa fa-ban\\\"></i> {{ randomARG.entry.database }} Alert!</h4>\\n        <strong>This Gene could not be found in the {{ randomARG.entry.database }} database</strong>\\n        <p>\\n            The entry {{ randomARG.entry.gene_id }} is no longer active in the {{ randomARG.entry.database }} database. Please take a look at the other information to curate/reject the gene.\\n        </p>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/card/card.component.html\n// module id = 689\n// module chunks = 2","module.exports = \"<div *ngIf=\\\"randomARG.metadata.status==true\\\" class=\\\"\\\">\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header\\\">\\n            <h3 class=\\\"panel-title\\\"> <i class=\\\"fa fa-bug\\\"></i> <strong> Lineage (<a class=\\\"panel-title\\\" href=\\\"https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?id={{ randomARG.metadata.organism.taxonomy }}\\\">NCBI Taxonomy </a>) </strong></h3>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body\\\">\\n            <div class=\\\"dl-vertical\\\">\\n                <span *ngFor=\\\"let item of randomARG.metadata.organism.lineage\\\">\\n          {{ item }} <strong>&rsaquo;</strong>\\t\\n        </span>\\n            </div>\\n            <p *ngIf=\\\"randomARG.metadata.organism.names\\\"> <strong>Organism: </strong>{{ randomARG.metadata.organism.names[0].value }}</p>\\n        </div>\\n        <!-- /.box-body -->\\n    </div>\\n    <!-- /.box -->\\n</div>\\n\\n\\n\\n<div *ngIf=\\\"randomARG.metadata.status==true\\\" class=\\\"\\\">\\n    <div class=\\\"box box-solid \\\">\\n        <div class=\\\"box-header with-border\\\">\\n            <i class=\\\"fa fa-tag\\\"></i>\\n\\n            <h3 class=\\\"box-title\\\"><strong>Keywords</strong></h3>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body\\\">\\n            <p *ngIf=\\\"randomARG.metadata.gene\\\"> <strong *ngIf=\\\"randomARG.metadata.gene[0].name\\\">Gene Name: </strong> <span class=\\\"\\\" *ngIf=\\\"randomARG.metadata.gene[0].name\\\"> {{ randomARG.metadata.gene[0].name.value }} </span></p>\\n            <p *ngIf=\\\"randomARG.metadata.protein.recommendedName\\\" class=\\\"\\\" data-original-title=\\\"\\\"> <strong>Protein: </strong> <span class=\\\"\\\"> {{ randomARG.metadata.protein.recommendedName.fullName.value }} </span> </p>\\n            <p *ngIf=\\\"randomARG.metadata.proteinExistence\\\" data-original-title=\\\"\\\"> <strong>Protein Existence: </strong> <span class=\\\"\\\">  {{ randomARG.metadata.proteinExistence }} </span> </p>\\n\\n            <p><strong>Sequence length (AA)</strong>: <span> {{ randomARG.entry['length'] }}</span></p>\\n\\n            <hr>\\n\\n            <span *ngFor=\\\"let item of randomARG.metadata.keywords\\\" class=\\\"badge bg-blue\\\" data-original-title=\\\"\\\"> {{ item.value }} </span>\\n\\n        </div>\\n        <!-- /.box-body -->\\n    </div>\\n    <!-- /.box -->\\n</div>\\n\\n\\n<div *ngIf=\\\"randomARG.metadata.comments\\\" class=\\\"\\\">\\n    <div class=\\\"box box-solid \\\">\\n        <div class=\\\"box-header with-border\\\">\\n            <i class=\\\"fa fa-object-group\\\"></i>\\n\\n            <h3 class=\\\"box-title\\\"><strong>Description</strong></h3>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body\\\">\\n            <dl class=\\\"dl-horizontal\\\">\\n                <div *ngFor=\\\"let item of randomARG.metadata.comments\\\">\\n                    <dt *ngIf=\\\"item.text\\\"> {{ item.type }}:</dt>\\n                    <dd *ngIf=\\\"item.text\\\"> {{ item.text[0].value }}</dd>\\n                    <br>\\n                </div>\\n            </dl>\\n\\n        </div>\\n        <!-- /.box-body -->\\n    </div>\\n    <!-- /.box -->\\n</div>\\n\\n\\n<div *ngIf=\\\"randomARG.metadata.dbReferences\\\" class=\\\"\\\">\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header with-border\\\">\\n            <i class=\\\"fa fa-object-group\\\"></i>\\n\\n            <h3 class=\\\"box-title\\\"><strong>Gene Ontology</strong></h3>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body\\\">\\n            <dl class=\\\"dl-horizontal\\\">\\n                <div *ngFor=\\\"let item of randomARG.metadata.dbReferences\\\">\\n                    <dt *ngIf=\\\"item.type=='GO'\\\"> {{ item.id }}:</dt>\\n                    <dd *ngIf=\\\"item.type=='GO'\\\"> {{ item.properties.term }} <span class=\\\"badge bg-lightblue\\\">{{ item.properties.source }} </span></dd>\\n                    <br *ngIf=\\\"item.type=='GO'\\\">\\n                </div>\\n            </dl>\\n\\n        </div>\\n        <!-- /.box-body -->\\n    </div>\\n    <!-- /.box -->\\n</div>\\n\\n\\n<div *ngIf=\\\"randomARG.metadata.features\\\" class=\\\"\\\">\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header with-border\\\">\\n            <i class=\\\"fa fa-object-group\\\"></i>\\n\\n            <h3 class=\\\"box-title\\\"><strong>Domains</strong></h3>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body\\\">\\n\\n            <table class=\\\"table table-bordered text-center\\\">\\n                <tbody>\\n                    <tr>\\n                        <th><span class=\\\"\\\">Type</span></th>\\n                        <th><span class=\\\"\\\">Position(s)</span></th>\\n                        <th><span class=\\\"\\\">Description</span></th>\\n                        <th><span class=\\\"\\\">Evidence</span></th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let item of randomARG.metadata.features\\\">\\n                        <th> <span *ngIf=\\\"item.type!=undefined\\\"> {{ item.type }}</span></th>\\n                        <th> <span *ngIf=\\\"item.begin!=undefined\\\">{{ item.begin }}-{{ item.end }}</span></th>\\n                        <th><span *ngIf=\\\"item.description!=undefined\\\">{{ item.description }}</span></th>\\n                        <th *ngIf=\\\"item.evidences\\\">\\n                            <span *ngIf=\\\"item.evidences[0].source\\\">{{ item.evidences[0].source.name }}</span>\\n                            <a *ngIf=\\\"item.evidences[0].source\\\" href=\\\"{{ item.evidences[0].source.url }}\\\">({{ item.evidences[0].source.id}})</a>\\n                        </th>\\n                    </tr>\\n                    <!-- <svg class=\\\"featureImage\\\"><rect baca=\\\"item.begin\\\" width=\\\"20%\\\" height=\\\"100%\\\" class=\\\"featureRect\\\"></rect></svg> -->\\n                </tbody>\\n            </table>\\n\\n        </div>\\n        <!-- /.box-body -->\\n    </div>\\n    <!-- /.box -->\\n</div>\\n\\n\\n<div *ngIf=\\\"randomARG.metadata.references\\\" class=\\\"\\\">\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-header with-border\\\">\\n            <i class=\\\"fa fa-object-group\\\"></i>\\n\\n            <h3 class=\\\"box-title\\\"><strong>References</strong></h3>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body\\\">\\n            <dl class=\\\"dl-horizontal\\\">\\n                <div *ngFor=\\\"let item of randomARG.metadata.references\\\">\\n                    <strong> {{ item.citation.authors[0] }} {{ item.citation.authors[1] }} et al., </strong> {{ item.citation.title }} {{item.citation.publication.submissionDatabase}} ({{ item.citation.publicationDate }})\\n\\n                    <div *ngFor=\\\"let ref of item.citation.dbReferences\\\">\\n                        <strong>{{ ref.type }}</strong>: {{ ref.id }}\\n                        <div *ngIf=\\\"ref.abstract\\\">\\n\\n                            <span *ngFor=\\\"let kw of ref.abstract\\\">\\n                <span *ngIf=\\\"kw.type=='paragraph'\\\">{{ kw.text }}</span> <strong class=\\\"\\\" *ngIf=\\\"kw.type=='keyword'\\\">{{ kw.text }}</strong>\\n                            </span>\\n\\n                        </div>\\n\\n                    </div>\\n\\n                </div>\\n            </dl>\\n\\n        </div>\\n        <!-- /.box-body -->\\n    </div>\\n    <!-- /.box -->\\n</div>\\n\\n\\n<!-- <div *ngIf=\\\"randomARG.metadata.errorMessage\\\" class=\\\"\\\">\\n\\n    <div class=\\\"alert alert-danger alert-dismissible\\\">\\n        <h4><i class=\\\"icon fa fa-ban\\\"></i> {{ randomARG.entry.database }} Alert!</h4>\\n        <strong>There is a problem with this request!</strong>\\n        <p>\\n            {{ randomARG.metadata.errorMessage[0] }}\\n        </p>\\n    </div>\\n</div> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classify/metadata/uniprot/uniprot.component.html\n// module id = 690\n// module chunks = 2","module.exports = \"<div class=\\\"col-md-8 col-md-offset-2\\\">\\n    <div class=\\\"box box-solid\\\">\\n        <div class=\\\"box-body\\\">\\n            <table class=\\\"table table-responsive table-bordered text-center\\\">\\n                <tbody>\\n                    <tr class=\\\"table-success\\\">\\n                        <th>Database</th>\\n                        <th>Version</th>\\n                        <th>Comments</th>\\n                    </tr>\\n\\n                    <tr *ngFor=\\\"let item of databases\\\">\\n                        <td><a [href]=\\\"'http://bench.cs.vt.edu/ftp/argminer/release/'+item.version+'.fasta'\\\" target=\\\"_blank\\\">ARGminer-DB</a></td>\\n                        <td>{{ item.version }}</td>\\n                        <td>{{ item.comments }}</td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n            <br>\\n            <h4>Structure</h4>\\n            <p class=\\\"small\\\">ARGminer annotation can be downloaded as a fasta file. The annotation of each entry is reported in the fasta header as follows:</p>\\n            <code>\\n                >gene_id | score:0 | validated:True/False | ARG-Class | ARG-name | ARG-mechanism | MGE-score:0 | Pat-score:0  \\n            </code>\\n            <br><br>\\n            <p class=\\\"small\\\">\\n                <strong>Score: </strong> Score of the validated entry.\\n                <br><strong> Validated:</strong> flag to show if the ARG has been validated.\\n                <br><strong>Pat(Pathogen):</strong> Evidence of the ARG being carried by a pathogen.\\n                <br><strong>MGE(Mobile Genetic Element):</strong> Evidence of the ARG being carried by a mobie element e.g., plasmids.\\n            </p>\\n            <p class=\\\"small\\\">Genes that have not been validated conserve their original annotation (deepARG-DB)</p>\\n        </div>\\n        <div class=\\\"box-footer text-center\\\">\\n            <p class=\\\"small\\\">*ARGminer uses the antibiotic resistance annotation from <a href=\\\"https://bench.cs.vt.edu/deeparg/\\\" target=\\\"_blank\\\">deepARG-DB</a>, <a href=\\\"https://card.mcmaster.ca/home\\\" target=\\\"_blank\\\">CARD</a>, <a href=\\\"https://ardb.cbcb.umd.edu/\\\" target=\\\"_blank\\\">ARDB</a>,\\n                <a href=\\\"http://www.uniprot.org/\\\" target=\\\"_blank\\\">UniProt</a>,\\n                <a href=\\\"https://megares.meglab.org/\\\" target=\\\"_blank\\\">MEGARes</a>,\\n                <a href=\\\"http://aclame.ulb.ac.be/\\\" target=\\\"_blank\\\">ACLAME</a>, <a href=\\\"https://www.patricbrc.org/\\\" target=\\\"_blank\\\">PATRIC</a> and <a href=\\\"https://www.ncbi.nlm.nih.gov/pubmed/\\\" target=\\\"_blank\\\">PubMed</a> databases. ARGminer is free for\\n                academic use, in any othercase, please check each one of the cited resources.</p>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/database/database.component.html\n// module id = 691\n// module chunks = 2","module.exports = \"<p>\\n  home works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 692\n// module chunks = 2","import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { DataService } from '../../services/data.service';\n\nimport {Message} from 'primeng/components/common/api';\n\n@Component({\n  templateUrl: './classify.component.html',\n  styleUrls: ['./classify.component.css']\n})\n\n\nexport class ClassifyComponent implements OnInit {\n\n  public randomARG: Object;\n  public conflictingARGSubtype: Object;\n  public render: Boolean;\n  public loading: Boolean = false;\n  public drawGenomes: Boolean = false;\n  public searchIndex: number = 0;\n  public conflictedArgSubtypeFlag: Boolean = false;\n  public conflictedArgSubtypeGeneListCounter: number = 1;\n  public conflictedArgSubtypeClassListCounter: number = 0;\n  public inspectedGenes: Array<string>;\n  public trainingGenes: Array<string>;\n  public trainingARGFlag: Boolean = false;\n  public trainingARGCount: number = 0;\n\n  public notification: Message[] = [];\n\n  constructor(\n    private dataService: DataService,\n    private router: Router,\n\n  ){\n    \n    this.trainingGenes = [\n      \"YP_490697.1\",\n      \"AAM15533.1\",\n      \"AAR84672.1\",\n      \"P52067\",\n      \"YP_042788\",\n      \"YP_416138\",\n      \"AAB53445.1\",\n      \"F0JWD5\",\n      \"A0A0D0NPG2\",\n      \"A0A0E9C576\",\n      \"AAN80811\",\n      \"A0A0Q9QYU5\",\n      \"ABC54722\",\n      \"YP_001346278\",\n      \"A0A0U9H4P4\",\n      \"Q1RPS3\",\n      \"J2LT98\",\n      \"P52067\"\n    ]\n    \n    this.dataService.getRandomKnownARG()\n      .subscribe(response =>{\n        this.randomARG = this.dataService.ARG;\n        this.render=true;\n    });\n\n  }\n\n\n  ngOnInit() {\n  }\n\n  selectConflictedArgEvent($event){\n    this.conflictedArgSubtypeFlag = $event.checked;\n    this.trainingARGFlag = false;\n    this.nextGene();\n    if(this.conflictedArgSubtypeFlag){\n      this.notification = [];\n      this.notification.push({severity:'info', summary:'Message', detail:'Enabled Conflicted ARGs'});\n    }\n  }\n\n  trainingARGEvent($event){\n    // the conflicting ARGs cannot be enabled.\n    this.conflictedArgSubtypeFlag = false;\n    this.trainingARGCount = 0;\n    this.trainingARGFlag = $event.checked;\n    this.search(this.trainingGenes[this.trainingARGCount]);\n    this.trainingARGCount+=1;\n\n    if(this.trainingARGFlag){\n      this.notification = [];\n      this.notification.push({severity:'info', summary:'Message', detail:'Enabled Training Mode'});\n    }\n  }\n\n  trainingARGNextGene(){\n    if(this.trainingARGCount < this.trainingGenes.length){\n      this.search(this.trainingGenes[this.trainingARGCount]);\n      this.trainingARGCount+=1;\n    }else{\n      this.notification = [];\n      this.notification.push({severity:'success', summary:'Message', detail:'End of Training'});\n      this.trainingARGFlag = false;\n    }\n  }\n\n  nextGeneConflictList(){\n    this.randomARG['entry']['database'] = '-------------';\n    this.randomARG['entry']['gene_id'] = '-------------';\n    this.randomARG['entry']['subtype'] = '----------';\n    this.randomARG['entry']['type'] = '--------------';\n    this.randomARG['entry']['inspected'] = '------';\n    this.randomARG['entry']['score'] = '------';\n    this.loading = true;\n    \n    if(this.conflictedArgSubtypeFlag){\n\n      if (this.conflictedArgSubtypeGeneListCounter >= this.conflictingARGSubtype['conflict'][this.conflictedArgSubtypeClassListCounter]['genes'].length ){\n        this.conflictedArgSubtypeClassListCounter+=1;\n        this.conflictedArgSubtypeGeneListCounter = 0;\n        }\n\n      if(this.conflictedArgSubtypeClassListCounter == this.conflictingARGSubtype['conflict'].length){\n        this.conflictedArgSubtypeClassListCounter = 0;\n        this.conflictedArgSubtypeGeneListCounter = 1;\n        this.nextGene();\n      }else{\n        // console.log(this.conflictedArgSubtypeClassListCounter, this.conflictedArgSubtypeGeneListCounter)\n        this.dataService.getKnownARGInfo( this.conflictingARGSubtype['conflict'][this.conflictedArgSubtypeClassListCounter]['genes'][this.conflictedArgSubtypeGeneListCounter] )\n        .subscribe(res2=>{\n          this.randomARG = this.dataService.ARG\n          this.loading = false;\n        });\n        \n        this.conflictedArgSubtypeGeneListCounter += 1;\n      }\n    }else{\n      this.nextGene();\n    }\n  }\n\n  nextGene(){\n    this.randomARG['entry']['database'] = '-------------';\n    this.randomARG['entry']['gene_id'] = '-------------';\n    this.randomARG['entry']['subtype'] = '----------';\n    this.randomARG['entry']['type'] = '--------------';\n    this.randomARG['entry']['inspected'] = '------';\n    this.randomARG['entry']['score'] = '------';\n    this.loading = true;\n    \n    if(this.conflictedArgSubtypeFlag){\n      this.dataService.getRandomConflictingArgSubtype()\n        .subscribe(response => {\n          this.conflictingARGSubtype = this.dataService.randomConflictingArgSubtype;\n          // console.log(this.conflictingARGSubtype)\n          // Then, select the first ARG\n          this.dataService.getKnownARGInfo(this.conflictingARGSubtype['conflict'][0]['genes'][0])\n            .subscribe(res2=>{\n              this.randomARG = this.dataService.ARG\n              this.loading = false;\n          });\n      });\n    }else{\n      this.dataService.getRandomKnownARG()\n        .subscribe(response =>{\n          this.randomARG = this.dataService.ARG\n          // console.log(this.randomARG)\n          this.loading = false;\n      });\n    }\n  }\n\n  search(argID: string){\n    this.randomARG['entry']['database'] = '-------------';\n    this.randomARG['entry']['gene_id'] = '-----------';\n    this.randomARG['entry']['subtype'] = '-----------';\n    this.randomARG['entry']['type'] = '--------------';\n    this.randomARG['entry']['inspected'] = '-----';\n    this.randomARG['entry']['score'] = '----';\n    this.loading = true;\n\n    this.dataService.searchAPI(argID, this.searchIndex.toString())\n      .subscribe(response =>{\n        // this.loading = false;\n        this.dataService.getKnownARGInfo(response['entry']['gene_id'])\n          .subscribe(res2=>{\n            this.randomARG = this.dataService.ARG\n            // console.log(this.randomARG)\n            this.loading = false;\n          })\n\n    });\n\n  }\n\n  tabsEvent($event: any){\n    this.drawGenomes = false;\n    if($event.index == 2){\n      this.drawGenomes = true;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/classify/classify.component.ts"],"sourceRoot":""}